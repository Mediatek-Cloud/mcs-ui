// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Icons List 1`] = `
.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0,0,0,0.2);
  border-radius: 3px;
  background-color: #FFFFFF;
  overflow: hidden;
}

.c0 > pre {
  background-color: #FAFAFA;
  color: #999A94;
  padding: 2px 5px;
}

.c0 > svg {
  width: 24px;
  height: 24px;
  fill: #00A1DE;
}

<div>
  <Iconsexample__IconWrapper
    key="IconAccount"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconAccount
        </pre>
        <IconAccount>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M12 13c-2.7 0-8 1.3-8 4v3h16v-3c0-2.7-5.3-4-8-4m0-9C9.8 4 8 5.8 8 8s1.8 4 4 4 4-1.8 4-4-1.8-4-4-4m0 10.9c3 0 6.1 1.5 6.1 2.1v1.1H5.9V17c0-.6 3.1-2.1 6.1-2.1m0-9c1.2 0 2.1.9 2.1 2.1 0 1.2-.9 2.1-2.1 2.1-1.2 0-2.1-.9-2.1-2.1 0-1.2.9-2.1 2.1-2.1z"
            />
          </svg>
        </IconAccount>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconAdd"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconAdd
        </pre>
        <IconAdd>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
            />
          </svg>
        </IconAdd>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconArrowDropDown"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconArrowDropDown
        </pre>
        <IconArrowDropDown>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M7 10l5 5 5-5H7z"
            />
          </svg>
        </IconArrowDropDown>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconArrowLeft"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconArrowLeft
        </pre>
        <IconArrowLeft>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M19.9 13v-2h-12l5.5-5.5L12 4.1 4.1 12l7.9 7.9 1.4-1.4L7.9 13h12z"
            />
          </svg>
        </IconArrowLeft>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconArrowNarrow"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconArrowNarrow
        </pre>
        <IconArrowNarrow>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M20.1 2.5l1.4 1.4L17 8.4h3.6v2h-7v-7h2V7l4.5-4.5M2.5 20.1L7 15.6H3.4v-2h7v7h-2V17l-4.5 4.5-1.4-1.4z"
            />
          </svg>
        </IconArrowNarrow>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconAvatar"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconAvatar
        </pre>
        <IconAvatar>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 300 300"
            width="1em"
          >
            <path
              d="M185.9 209.7v-9.5c8-8.7 14.2-20.1 18.1-33.2 5.8-4.8 9.3-12.1 9.3-19.8 0-5.3-1.6-10.3-4.6-14.7v-26.4c0-34.5-21.3-54.2-58.5-54.2-36.6 0-58.5 20.3-58.5 54.2v26.4c-3 4.3-4.6 9.4-4.6 14.6 0 7.7 3.4 15 9.2 19.8 3.9 13.1 10.1 24.6 18.1 33.3v9.5c-1.9 3.9-16.5 15.4-76.7 39.4 27.5 31.2 67.6 51 112.4 51 44.7 0 84.7-19.7 112.2-50.7-60.1-24-74.5-35.8-76.4-39.7z"
            />
          </svg>
        </IconAvatar>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconCalendar"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconCalendar
        </pre>
        <IconCalendar>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M19 20H5V9h14m-3-7v2H8V2H6v2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-1V2m-1 11h-5v5h5v-5z"
            />
          </svg>
        </IconCalendar>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconChevronRight"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconChevronRight
        </pre>
        <IconChevronRight>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M8.6 16.6l4.6-4.6-4.6-4.6L10 6l6 6-6 6-1.4-1.4z"
            />
          </svg>
        </IconChevronRight>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconClose"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconClose
        </pre>
        <IconClose>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M19 6.4L17.6 5 12 10.6 6.4 5 5 6.4l5.6 5.6L5 17.6 6.4 19l5.6-5.6 5.6 5.6 1.4-1.4-5.6-5.6L19 6.4z"
            />
          </svg>
        </IconClose>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconCloudDownloadOutline"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconCloudDownloadOutline
        </pre>
        <IconCloudDownloadOutline>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M19.3 10c-.7-3.4-3.7-6-7.3-6-2.9 0-5.4 1.6-6.7 4-3 .3-5.3 2.9-5.3 6 0 3.3 2.7 6 6 6h13c2.8 0 5-2.2 5-5 0-2.6-2-4.8-4.7-5zm-.3 8H6c-2.2 0-4-1.8-4-4s1.8-4 4-4h.7c.7-2.3 2.8-4 5.3-4 3 0 5.5 2.5 5.5 5.5v.5H19c1.7 0 3 1.3 3 3s-1.3 3-3 3zm-2.9-5.4h-2.4V9.3h-3.3v3.3H8l3.9 4.1 4.2-4.1z"
            />
          </svg>
        </IconCloudDownloadOutline>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconCloudUpload"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconCloudUpload
        </pre>
        <IconCloudUpload>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M14 13v4h-4v-4H7l5-5 5 5m2.4-3c-.7-3.4-3.7-6-7.4-6-2.9 0-5.4 1.6-6.6 4-3 .3-5.4 2.9-5.4 6 0 3.3 2.7 6 6 6h13c2.8 0 5-2.2 5-5 0-2.6-2-4.8-4.6-5z"
            />
          </svg>
        </IconCloudUpload>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconData"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconData
        </pre>
        <IconData>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M17.5 15.5L22 7.6v13.7H2v-18h2v12.5l5.5-9.5L16 10l4.2-7.3 1.7 1-5.2 9L10.2 9 4.3 19.2h2.3l4.4-7.6 6.5 3.9z"
            />
          </svg>
        </IconData>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconDataUsage"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconDataUsage
        </pre>
        <IconDataUsage>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M13 2v3c3.4.5 6 3.4 6 6.9 0 .9-.2 1.8-.5 2.5l2.6 1.5c.6-1.2.9-2.6.9-4.1 0-5-4-9.2-9-9.8zm-1 17c-3.9 0-7-3.1-7-7 0-3.5 2.6-6.4 6-6.9V2c-5.1.5-9 4.8-9 10 0 5.5 4.5 10 10 10 3.3 0 6.2-1.6 8.1-4.1l-2.6-1.5C16.2 18 14.2 19 12 19z"
            />
          </svg>
        </IconDataUsage>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconDelete"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconDelete
        </pre>
        <IconDelete>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm9-10h1v10h-1V9zm-4 0h2v10h-2V9zM8 9h1v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z"
            />
          </svg>
        </IconDelete>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconDevelopment"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconDevelopment
        </pre>
        <IconDevelopment>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M3.1 17.3c-.7 1-.8 2.1 0 3l.8.8c.4.4 1 .6 1.5.6.6.1 1.1-.1 1.5-.6l5.3-5.3L8.4 12l-5.3 5.3zm7.5-1.5l-4.4 4.4-.6-.6 4.4-4.4.6.6zm-1.5-1.5l-4.4 4.4-.6-.6 4.4-4.4.6.6zm8.3-5.4h2.2l2.2-4.5-2.2-2.2-4.5 2.2v2.2l-2.3 2.3 2.3 2.3 2.3-2.3zm4.3 10.2L10.3 7.8c.6-1.5.3-3.2-1-4.4C8 2.1 6.1 1.9 4.6 2.6l2.7 2.7-1.9 1.9-2.8-2.7c-.8 1.5-.4 3.4.8 4.7 1.2 1.2 2.9 1.5 4.4 1l11.4 11.3c.3.3.6.3.9 0l1.5-1.5c.3-.3.3-.7.1-.9z"
            />
          </svg>
        </IconDevelopment>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconDevice"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconDevice
        </pre>
        <IconDevice>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M12 .5c-3 0-5.8 1.2-7.8 3.2l1.4 1.4C7.2 3.5 9.5 2.5 12 2.5s4.7 1 6.4 2.6l1.4-1.4c-2-2-4.8-3.2-7.8-3.2m-5 6l1.4 1.4c.9-.9 2.2-1.5 3.5-1.5s2.6.6 3.5 1.5l1.4-1.4c-1.3-1.3-3-2-5-2s-3.5.8-4.8 2m5 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2m4-6H8c-.6 0-1 .4-1 1v12c0 .6.4 1 1 1h8c.6 0 1-.4 1-1v-12c0-.6-.4-1-1-1z"
            />
          </svg>
        </IconDevice>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconDisplayImg"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconDisplayImg
        </pre>
        <IconDisplayImg>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M7 3h2v2H7zM5 21v-2H3c0 1.1.9 2 2 2zM15 3h2v2h-2zM19 3v2h2c0-1.1-.9-2-2-2zM3 15h2v2H3zM11 3h2v2h-2zM3 5h2V3c-1.1 0-2 .9-2 2zM7 19h2v2H7zM19 7h2v2h-2zM3 11h2v2H3zM3 7h2v2H3zM10.2 6H6v4.2l1.6-1.5 2.1 2.1 1.1-1.1-2.1-2.1zM13 11c-1.1 0-2 .9-2 2v8h8c1.1 0 2-.9 2-2v-8h-8z"
            />
          </svg>
        </IconDisplayImg>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconDone"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconDone
        </pre>
        <IconDone>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z"
            />
          </svg>
        </IconDone>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconEdit"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconEdit
        </pre>
        <IconEdit>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M19 19V5H5v14h14m0-16c1.1 0 2 .9 2 2v14c0 1.1-.9 2-2 2H5c-1.1 0-2-.9-2-2V5c0-1.1.9-2 2-2h14m-1.9 6.7l-1 1-2.8-2.8 1-1c.2-.2.6-.2.8 0L17.2 9c.1.2.1.5-.1.7M6.6 14.5l6.1-6.1 2.8 2.8-6.1 6.1H6.6v-2.8z"
            />
          </svg>
        </IconEdit>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconEditOutline"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconEditOutline
        </pre>
        <IconEditOutline>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M19 19V5H5v14h14m0-16c1.1 0 2 .9 2 2v14c0 1.1-.9 2-2 2H5c-1.1 0-2-.9-2-2V5c0-1.1.9-2 2-2h14m-1.9 6.7l-1 1-2.8-2.8 1-1c.2-.2.6-.2.8 0L17.2 9c.1.2.1.5-.1.7M6.6 14.5l6.1-6.1 2.8 2.8-6.1 6.1H6.6v-2.8z"
            />
          </svg>
        </IconEditOutline>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconExport"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconExport
        </pre>
        <IconExport>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M23 12l-4-4v3h-9v2h9v3M1 18V6c0-1.1.9-2 2-2h12c1.1 0 2 .9 2 2v3h-2V6H3v12h12v-3h2v3c0 1.1-.9 2-2 2H3c-1.1 0-2-.9-2-2z"
            />
          </svg>
        </IconExport>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconFileOutline"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconFileOutline
        </pre>
        <IconFileOutline>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M14 2H6c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V8l-6-6zm4 18H6V4h5v7h7v9zM13 9V3.5L18.5 9H13zm-5 4h8v2H8v-2zm0 3h5v2H8v-2z"
            />
          </svg>
        </IconFileOutline>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconFold"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconFold
        </pre>
        <IconFold>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z"
            />
          </svg>
        </IconFold>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconFullScreen"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconFullScreen
        </pre>
        <IconFullScreen>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M15 3l2.3 2.3-2.9 2.9 1.4 1.4 2.9-2.9L21 9V3h-6zM3 9l2.3-2.3 2.9 2.9 1.4-1.4-2.9-2.9L9 3H3v6zm6 12l-2.3-2.3 2.9-2.9-1.4-1.4-2.9 2.9L3 15v6h6zm12-6l-2.3 2.3-2.9-2.9-1.4 1.4 2.9 2.9L15 21h6v-6z"
            />
          </svg>
        </IconFullScreen>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconGoDown"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconGoDown
        </pre>
        <IconGoDown>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M12 18.9l5-5h-3.8V5.1h-2.5v8.8H7l5 5z"
            />
          </svg>
        </IconGoDown>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconHelp"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconHelp
        </pre>
        <IconHelp>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2zm1 17h-2v-2h2v2zm2.1-7.7l-.9.9c-.8.7-1.2 1.3-1.2 2.8h-2v-.5c0-1.1.4-2.1 1.2-2.8l1.2-1.3c.4-.3.6-.8.6-1.4 0-1.1-.9-2-2-2s-2 .9-2 2H8c0-2.2 1.8-4 4-4s4 1.8 4 4c0 .9-.4 1.7-.9 2.3z"
            />
          </svg>
        </IconHelp>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconLink"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconLink
        </pre>
        <IconLink>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M3.9 12c0-1.7 1.4-3.1 3.1-3.1h4V7H7c-2.8 0-5 2.2-5 5s2.2 5 5 5h4v-1.9H7c-1.7 0-3.1-1.4-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.7 0 3.1 1.4 3.1 3.1s-1.4 3.1-3.1 3.1h-4V17h4c2.8 0 5-2.2 5-5s-2.2-5-5-5z"
            />
          </svg>
        </IconLink>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconList"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconList
        </pre>
        <IconList>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm4 4h14v-2H7v2zm0 4h14v-2H7v2zM7 7v2h14V7H7z"
            />
          </svg>
        </IconList>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconLoading"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconLoading
        </pre>
        <IconLoading>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2zm0 18c-4.4 0-8-3.6-8-8s3.6-8 8-8 8 3.6 8 8-3.6 8-8 8z"
              opacity={0.3}
            />
            <path
              d="M12 4c4.4 0 8 3.6 8 8h2c0-5.5-4.5-10-10-10v2z"
            />
          </svg>
        </IconLoading>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconLogout"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconLogout
        </pre>
        <IconLogout>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M16.9 17.2V14h-7v-4h7V6.8l5.2 5.2-5.2 5.2M12.9 2c1.1 0 2 .9 2 2v4h-2V4h-9v16h9v-4h2v4c0 1.1-.9 2-2 2h-9c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h9z"
            />
          </svg>
        </IconLogout>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconMenu"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconMenu
        </pre>
        <IconMenu>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
            />
          </svg>
        </IconMenu>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconMoreVert"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconMoreVert
        </pre>
        <IconMoreVert>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
            />
          </svg>
        </IconMoreVert>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconNotification"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconNotification
        </pre>
        <IconNotification>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M12 22c1.1 0 2-.9 2-2h-4c0 1.1.9 2 2 2zm6-6v-5c0-3.1-1.6-5.6-4.5-6.3V4c0-.8-.7-1.5-1.5-1.5s-1.5.7-1.5 1.5v.7C7.6 5.4 6 7.9 6 11v5l-2 2v1h16v-1l-2-2z"
            />
          </svg>
        </IconNotification>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconOnPremise"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconOnPremise
        </pre>
        <IconOnPremise>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M21 17v-6H3v6h8v2H3v2h18v-2h-8v-2h8zm-2.8-3.8c.4 0 .8.3.8.8s-.3.8-.8.8-.8-.3-.8-.8.4-.8.8-.8zM5.8 14.8c-.5 0-.8-.4-.8-.8s.3-.8.8-.8h9c.4 0 .8.3.8.8s-.3.8-.8.8h-9zM3 3v6h18V3H3zm11.8 3.8h-9c-.5 0-.8-.4-.8-.8s.3-.8.8-.8h9c.4 0 .8.3.8.8s-.4.8-.8.8zm3.4 0c-.4 0-.8-.3-.8-.8s.3-.8.8-.8.8.4.8.8-.3.8-.8.8z"
            />
          </svg>
        </IconOnPremise>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconOverview"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconOverview
        </pre>
        <IconOverview>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H6V5h3.6v7l3.5-1.5 3.5 1.5V5H19v14z"
            />
          </svg>
        </IconOverview>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconPause"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconPause
        </pre>
        <IconPause>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M6 19h4V5H6v14zm8-14v14h4V5h-4z"
            />
          </svg>
        </IconPause>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconPlay"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconPlay
        </pre>
        <IconPlay>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M7 5v14l11-7L7 5z"
            />
          </svg>
        </IconPlay>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconPrototype"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconPrototype
        </pre>
        <IconPrototype>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M15 21h2v-2h-2v2zm-4 0h2v-2h-2v2zm8-8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zM7 5h2V3H7v2zm12 12h2v-2h-2v2zm0-14h-8v6h10V5c0-1.1-.9-2-2-2zM5 21v-2H3c0 1.1.9 2 2 2zm-2-4h2v-2H3v2zm4 4h2v-2H7v2zM3 5h2V3c-1.1 0-2 .9-2 2zm0 8h2v-2H3v2zm0-4h2V7H3v2z"
            />
          </svg>
        </IconPrototype>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconPublic"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconPublic
        </pre>
        <IconPublic>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M17.9 17.4c-.3-.8-1-1.4-1.9-1.4h-1v-3c0-.6-.4-1-1-1H8v-2h2c.6 0 1-.4 1-1V7h2c1.1 0 2-.9 2-2v-.4c2.9 1.2 5 4.1 5 7.4 0 2.1-.8 4-2.1 5.4M11 19.9C7 19.4 4 16 4 12c0-.6.1-1.2.2-1.8L9 15v1c0 1.1.9 2 2 2m1-16C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2z"
            />
          </svg>
        </IconPublic>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconRefresh"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconRefresh
        </pre>
        <IconRefresh>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M17.6 6.4C16.2 4.9 14.2 4 12 4c-4.4 0-8 3.6-8 8s3.6 8 8 8c3.7 0 6.8-2.5 7.7-6h-2.1c-.8 2.3-3 4-5.6 4-3.3 0-6-2.7-6-6s2.7-6 6-6c1.7 0 3.1.7 4.2 1.8L13 11h7V4l-2.4 2.4z"
            />
          </svg>
        </IconRefresh>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconResources"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconResources
        </pre>
        <IconResources>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M20.5 5.2c.3.3.5.8.5 1.3V19c0 1.1-.9 2-2 2H5c-1.1 0-2-.9-2-2V6.5c0-.5.2-.9.5-1.3l1.4-1.7c.3-.3.7-.5 1.2-.5h12c.5 0 .9.2 1.1.5l1.3 1.7M5 19h14v-5H5v5zm5-2h4v-1h-4v1zm0-7h4V9h-4v1zm-5 2h14V7H5v5z"
            />
          </svg>
        </IconResources>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconRicherTriggerRules"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconRicherTriggerRules
        </pre>
        <IconRicherTriggerRules>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M16 6c1.1 0 2 .9 2 2v8.8c0 1.1-.9 2-2 2H5.2L2 22V8c0-1.1.9-2 2-2h12zm0 10.8V8H4v10l1.2-1.2H16zm-5-.8H9v-2h2v2zm0-3H9V9h2v4zm9 .2V4H7.6V2H20c1.1 0 2 .9 2 2v9.2h-2z"
            />
          </svg>
        </IconRicherTriggerRules>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconScene"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconScene
        </pre>
        <IconScene>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M3 13h8V3H3v10zm0 8h8v-6H3v6zm10 0h8V11h-8v10zm0-18v6h8V3h-8z"
            />
          </svg>
        </IconScene>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconSearch"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconSearch
        </pre>
        <IconSearch>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M15.5 14h-.8l-.3-.3c1-1.1 1.6-2.6 1.6-4.2C16 5.9 13.1 3 9.5 3S3 5.9 3 9.5 5.9 16 9.5 16c1.6 0 3.1-.6 4.2-1.6l.3.3v.8l5 5 1.5-1.5-5-5zm-6 0C7 14 5 12 5 9.5S7 5 9.5 5 14 7 14 9.5 12 14 9.5 14z"
            />
          </svg>
        </IconSearch>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconSetting"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconSetting
        </pre>
        <IconSetting>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M8.8 11.1c-1.4 0-2.6-1.2-2.6-2.6s1.2-2.6 2.6-2.6 2.6 1.2 2.6 2.6-1.1 2.6-2.6 2.6zm5.6-1.9c0-.2.1-.5.1-.7s0-.5-.1-.8L16 6.5c.1-.1.2-.3.1-.5l-1.5-2.6c-.1-.2-.3-.2-.5-.2l-1.8.8c-.4-.3-.8-.5-1.3-.7l-.3-2c0-.2-.2-.3-.4-.3h-3c-.1 0-.3.1-.3.3l-.3 2c-.5.2-.9.4-1.3.7l-1.8-.7c-.2-.1-.4 0-.5.2L1.6 6c-.1.2-.1.4.1.5l1.6 1.2c0 .3-.1.5-.1.8s0 .5.1.7l-1.6 1.2c-.1.1-.2.3-.1.5l1.5 2.6c.1.2.3.2.5.2l1.8-.7c.4.3.8.6 1.3.7l.3 2c0 .2.2.3.3.3h3c.2 0 .3-.1.4-.3l.3-2c.5-.2.9-.4 1.3-.7l1.9.8c.2.1.4 0 .5-.2l1.5-2.6c.1-.2.1-.4-.1-.5l-1.7-1.3zm2.5 10.6c-1 0-1.8-.8-1.8-1.8s.8-1.8 1.8-1.8 1.8.8 1.8 1.8-.9 1.8-1.8 1.8zm3.7-1.3V18v-.5l1.1-.8c.1-.1.1-.2.1-.3l-1-1.7c-.1-.1-.2-.2-.3-.1l-1.4.4c-.3-.2-.5-.4-.8-.5l-.2-1.3c0-.1-.1-.2-.2-.2h-2c-.1 0-.2.1-.2.2l-.2 1.3c-.3.1-.6.3-.8.5l-1.2-.5c-.1 0-.2 0-.3.1l-1 1.7c-.1.1 0 .2.1.3l1.1.8v1l-1.1.8c-.3.2-.3.3-.3.4l1 1.7c.1.1.2.1.3.1l1.2-.5c.3.2.5.4.8.5l.2 1.3c0 .1.1.2.2.2h2c.1 0 .2-.1.2-.2l.2-1.3c.3-.1.6-.3.8-.5l1.2.5c.1 0 .2 0 .3-.1l1-1.7c.1-.1 0-.2-.1-.3l-.7-.8z"
            />
          </svg>
        </IconSetting>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconStop"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconStop
        </pre>
        <IconStop>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M6 6h12v12H6V6z"
            />
          </svg>
        </IconStop>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconSync"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconSync
        </pre>
        <IconSync>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M12 18c-3.3 0-6-2.7-6-6 0-1 .2-2 .7-2.8L5.2 7.7C4.5 9 4 10.4 4 12c0 4.4 3.6 8 8 8v3l4-4-4-4m0-11V1L8 5l4 4V6c3.3 0 6 2.7 6 6 0 1-.2 2-.7 2.8l1.5 1.5C19.5 15 20 13.6 20 12c0-4.4-3.6-8-8-8z"
            />
          </svg>
        </IconSync>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconTestDevice"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconTestDevice
        </pre>
        <IconTestDevice>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M12 .5c-3 0-5.8 1.2-7.8 3.2l1.4 1.4C7.2 3.5 9.5 2.5 12 2.5s4.7 1 6.4 2.6l1.4-1.4c-2-2-4.8-3.2-7.8-3.2m-5 6l1.4 1.4c.9-.9 2.2-1.5 3.5-1.5 1.3 0 2.6.6 3.5 1.5l1.4-1.4c-1.3-1.3-3-2-5-2s-3.5.8-4.8 2m9 3H8c-.6 0-1 .4-1 1v12c0 .6.4 1 1 1h8c.6 0 1-.4 1-1v-12c0-.6-.4-1-1-1zM12.6 20h-1.2v-5.9H9.2V13h5.5v1.1h-2.2V20z"
            />
          </svg>
        </IconTestDevice>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconUnfold"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconUnfold
        </pre>
        <IconUnfold>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M7.4 15.4l4.6-4.6 4.6 4.6L18 14l-6-6-6 6 1.4 1.4z"
            />
          </svg>
        </IconUnfold>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
  <Iconsexample__IconWrapper
    key="IconUnlimited"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Iconsexample__IconWrapper-f2ede-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 8px;
  padding: 16px;
  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  background-color: ",
              [Function],
              ";
  overflow: hidden;

  > pre {
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 2px 5px;
  }

  > svg {
    width: 24px;
    height: 24px;
    fill: ",
              [Function],
              ";
  }
",
            ],
          },
          "displayName": "Iconsexample__IconWrapper",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Iconsexample__IconWrapper-f2ede-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <pre>
          IconUnlimited
        </pre>
        <IconUnlimited>
          <svg
            fill="currentColor"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M18.6 6.6c-1.4 0-2.8.6-3.8 1.5L12 10.7 10.5 12l-2.7 2.4c-.6.6-1.5 1-2.4 1C3.5 15.4 2 13.9 2 12s1.5-3.4 3.4-3.4c.9 0 1.8.4 2.4 1l1.1 1 1.5-1.3-1.2-1.1c-1-1-2.4-1.6-3.8-1.6C2.4 6.6 0 9 0 12s2.4 5.4 5.4 5.4c1.4 0 2.8-.6 3.8-1.5l2.8-2.5 1.5-1.4 2.7-2.4c.6-.6 1.5-1 2.4-1 1.9 0 3.4 1.5 3.4 3.4s-1.5 3.4-3.4 3.4c-.9 0-1.8-.4-2.4-1l-1.1-1-1.5 1.3 1.3 1.1c1 1 2.4 1.6 3.8 1.6 3 0 5.4-2.4 5.4-5.4s-2.5-5.4-5.5-5.4z"
            />
          </svg>
        </IconUnlimited>
      </div>
    </StyledComponent>
  </Iconsexample__IconWrapper>
</div>
`;
