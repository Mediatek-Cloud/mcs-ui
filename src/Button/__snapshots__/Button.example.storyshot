// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Button API 1`] = `
.c0 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c0:hover {
  background-color: rgb(0,151,208);
}

.c0:active {
  background-color: rgb(0,144,198);
}

<Button
  active={false}
  block={false}
  disabled={false}
  kind="primary"
  round={false}
  size="normal"
  square={false}
>
  <StyledComponent
    active={false}
    block={false}
    disabled={false}
    forwardedClass={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "Button-sc-4bw22c-0",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  transition: background-color cubic-bezier(0.47, 0, 0.75, 0.72) 0.3s;
  line-height: 0;
  cursor: ",
            [Function],
            ";

  &:hover {
    background-color: ",
            [Function],
            ";
  }

  &:active {
    background-color: ",
            [Function],
            ";
  }

  background-color: ",
            [Function],
            ";
  color: ",
            [Function],
            ";
  border-radius: ",
            [Function],
            ";
  width: ",
            [Function],
            ";
  min-width: ",
            [Function],
            ";
  height: ",
            [Function],
            ";
  padding: ",
            [Function],
            ";
  font-size: ",
            [Function],
            ";
  border-color: ",
            [Function],
            ";
",
          ],
        },
        "defaultProps": Object {
          "active": false,
          "block": false,
          "disabled": false,
          "kind": "primary",
          "round": false,
          "size": "normal",
          "square": false,
        },
        "displayName": "Button",
        "propTypes": Object {
          "active": [Function],
          "block": [Function],
          "disabled": [Function],
          "kind": [Function],
          "round": [Function],
          "size": [Function],
          "square": [Function],
        },
        "render": [Function],
        "styledComponentId": "Button-sc-4bw22c-0",
        "target": "button",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
    kind="primary"
    round={false}
    size="normal"
    square={false}
  >
    <button
      className="c0"
      disabled={false}
      kind="primary"
      size="normal"
    >
      button
    </button>
  </StyledComponent>
</Button>
`;

exports[`Storyshots Button Overriding style 1`] = `
.c0 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(0,130,179);
  font-size: 56px;
  color: #ffffff;
  border-radius: 6px;
  border-color: rgb(206,80,57);
  background-color: tomato;
  min-height: 80px;
}

.c0:hover {
  background-color: rgb(0,151,208);
}

.c0:active {
  background-color: rgb(0,144,198);
}

.c0:hover {
  background-color: rgb(239,93,67);
}

.c0:active {
  background-color: rgb(227,88,63);
}

<Buttonexample__TomatoButton
  active={false}
  block={false}
  disabled={false}
  kind="primary"
  onClick={[Function]}
  round={false}
  size="normal"
  square={false}
>
  <StyledComponent
    active={false}
    block={false}
    disabled={false}
    forwardedClass={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "Buttonexample__TomatoButton-sc-1ml6h0r-2",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  transition: background-color cubic-bezier(0.47, 0, 0.75, 0.72) 0.3s;
  line-height: 0;
  cursor: ",
            [Function],
            ";

  &:hover {
    background-color: ",
            [Function],
            ";
  }

  &:active {
    background-color: ",
            [Function],
            ";
  }

  background-color: ",
            [Function],
            ";
  color: ",
            [Function],
            ";
  border-radius: ",
            [Function],
            ";
  width: ",
            [Function],
            ";
  min-width: ",
            [Function],
            ";
  height: ",
            [Function],
            ";
  padding: ",
            [Function],
            ";
  font-size: ",
            [Function],
            ";
  border-color: ",
            [Function],
            ";
",
            "
  font-size: 56px;
  color: #ffffff;
  border-radius: 6px;
  border-color: ",
            "rgb(206, 80, 57)",
            ";
  background-color: tomato;
  min-height: 80px;

  &:hover {
    background-color: ",
            "rgb(239, 93, 67)",
            ";
  }

  &:active {
    background-color: ",
            "rgb(227, 88, 63)",
            ";
  }
",
          ],
        },
        "defaultProps": Object {
          "active": false,
          "block": false,
          "disabled": false,
          "kind": "primary",
          "round": false,
          "size": "normal",
          "square": false,
        },
        "displayName": "Buttonexample__TomatoButton",
        "propTypes": Object {
          "active": [Function],
          "block": [Function],
          "disabled": [Function],
          "kind": [Function],
          "round": [Function],
          "size": [Function],
          "square": [Function],
        },
        "render": [Function],
        "styledComponentId": "Buttonexample__TomatoButton-sc-1ml6h0r-2",
        "target": "button",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
    kind="primary"
    onClick={[Function]}
    round={false}
    size="normal"
    square={false}
  >
    <button
      className="c0"
      disabled={false}
      kind="primary"
      onClick={[Function]}
      size="normal"
    >
      Overriding style
    </button>
  </StyledComponent>
</Buttonexample__TomatoButton>
`;

exports[`Storyshots Button With active props 1`] = `
.c0 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: rgb(0,144,198);
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c0:hover {
  background-color: rgb(0,151,208);
}

.c0:active {
  background-color: rgb(0,144,198);
}

<Button
  active={true}
  block={false}
  disabled={false}
  kind="primary"
  round={false}
  size="normal"
  square={false}
>
  <StyledComponent
    active={true}
    block={false}
    disabled={false}
    forwardedClass={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "Button-sc-4bw22c-0",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  transition: background-color cubic-bezier(0.47, 0, 0.75, 0.72) 0.3s;
  line-height: 0;
  cursor: ",
            [Function],
            ";

  &:hover {
    background-color: ",
            [Function],
            ";
  }

  &:active {
    background-color: ",
            [Function],
            ";
  }

  background-color: ",
            [Function],
            ";
  color: ",
            [Function],
            ";
  border-radius: ",
            [Function],
            ";
  width: ",
            [Function],
            ";
  min-width: ",
            [Function],
            ";
  height: ",
            [Function],
            ";
  padding: ",
            [Function],
            ";
  font-size: ",
            [Function],
            ";
  border-color: ",
            [Function],
            ";
",
          ],
        },
        "defaultProps": Object {
          "active": false,
          "block": false,
          "disabled": false,
          "kind": "primary",
          "round": false,
          "size": "normal",
          "square": false,
        },
        "displayName": "Button",
        "propTypes": Object {
          "active": [Function],
          "block": [Function],
          "disabled": [Function],
          "kind": [Function],
          "round": [Function],
          "size": [Function],
          "square": [Function],
        },
        "render": [Function],
        "styledComponentId": "Button-sc-4bw22c-0",
        "target": "button",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
    kind="primary"
    round={false}
    size="normal"
    square={false}
  >
    <button
      className="c0"
      disabled={false}
      kind="primary"
      size="normal"
    >
      Active
    </button>
  </StyledComponent>
</Button>
`;

exports[`Storyshots Button With as props - Input submit 1`] = `
.c0 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: 100%;
  min-width: initial;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c0:hover {
  background-color: rgb(0,151,208);
}

.c0:active {
  background-color: rgb(0,144,198);
}

<Button
  active={false}
  as="input"
  block={true}
  disabled={false}
  kind="primary"
  onClick={[Function]}
  round={false}
  size="normal"
  square={false}
  type="submit"
  value="Input Submit"
>
  <StyledComponent
    active={false}
    as="input"
    block={true}
    disabled={false}
    forwardedClass={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "Button-sc-4bw22c-0",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  transition: background-color cubic-bezier(0.47, 0, 0.75, 0.72) 0.3s;
  line-height: 0;
  cursor: ",
            [Function],
            ";

  &:hover {
    background-color: ",
            [Function],
            ";
  }

  &:active {
    background-color: ",
            [Function],
            ";
  }

  background-color: ",
            [Function],
            ";
  color: ",
            [Function],
            ";
  border-radius: ",
            [Function],
            ";
  width: ",
            [Function],
            ";
  min-width: ",
            [Function],
            ";
  height: ",
            [Function],
            ";
  padding: ",
            [Function],
            ";
  font-size: ",
            [Function],
            ";
  border-color: ",
            [Function],
            ";
",
          ],
        },
        "defaultProps": Object {
          "active": false,
          "block": false,
          "disabled": false,
          "kind": "primary",
          "round": false,
          "size": "normal",
          "square": false,
        },
        "displayName": "Button",
        "propTypes": Object {
          "active": [Function],
          "block": [Function],
          "disabled": [Function],
          "kind": [Function],
          "round": [Function],
          "size": [Function],
          "square": [Function],
        },
        "render": [Function],
        "styledComponentId": "Button-sc-4bw22c-0",
        "target": "button",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
    kind="primary"
    onClick={[Function]}
    round={false}
    size="normal"
    square={false}
    type="submit"
    value="Input Submit"
  >
    <input
      className="c0"
      disabled={false}
      kind="primary"
      onClick={[Function]}
      size="normal"
      type="submit"
      value="Input Submit"
    />
  </StyledComponent>
</Button>
`;

exports[`Storyshots Button With as props 1`] = `
.c0 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c0:hover {
  background-color: rgb(0,151,208);
}

.c0:active {
  background-color: rgb(0,144,198);
}

<Button
  active={false}
  as="a"
  block={false}
  disabled={false}
  kind="primary"
  onClick={[Function]}
  round={false}
  size="normal"
  square={false}
>
  <StyledComponent
    active={false}
    as="a"
    block={false}
    disabled={false}
    forwardedClass={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "Button-sc-4bw22c-0",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  transition: background-color cubic-bezier(0.47, 0, 0.75, 0.72) 0.3s;
  line-height: 0;
  cursor: ",
            [Function],
            ";

  &:hover {
    background-color: ",
            [Function],
            ";
  }

  &:active {
    background-color: ",
            [Function],
            ";
  }

  background-color: ",
            [Function],
            ";
  color: ",
            [Function],
            ";
  border-radius: ",
            [Function],
            ";
  width: ",
            [Function],
            ";
  min-width: ",
            [Function],
            ";
  height: ",
            [Function],
            ";
  padding: ",
            [Function],
            ";
  font-size: ",
            [Function],
            ";
  border-color: ",
            [Function],
            ";
",
          ],
        },
        "defaultProps": Object {
          "active": false,
          "block": false,
          "disabled": false,
          "kind": "primary",
          "round": false,
          "size": "normal",
          "square": false,
        },
        "displayName": "Button",
        "propTypes": Object {
          "active": [Function],
          "block": [Function],
          "disabled": [Function],
          "kind": [Function],
          "round": [Function],
          "size": [Function],
          "square": [Function],
        },
        "render": [Function],
        "styledComponentId": "Button-sc-4bw22c-0",
        "target": "button",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
    kind="primary"
    onClick={[Function]}
    round={false}
    size="normal"
    square={false}
  >
    <a
      className="c0"
      disabled={false}
      kind="primary"
      onClick={[Function]}
      size="normal"
    >
      I am 
      &lt;a&gt;
       tag.
    </a>
  </StyledComponent>
</Button>
`;

exports[`Storyshots Button With block props 1`] = `
.c1 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c1:hover {
  background-color: rgb(0,151,208);
}

.c1:active {
  background-color: rgb(0,144,198);
}

.c2 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: 100%;
  min-width: initial;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c2:hover {
  background-color: rgb(0,151,208);
}

.c2:active {
  background-color: rgb(0,144,198);
}

.c0 > * {
  margin: 5px;
}

<Buttonexample__Container>
  <StyledComponent
    forwardedClass={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "Buttonexample__Container-sc-1ml6h0r-0",
          "isStatic": true,
          "lastClassName": "c0",
          "rules": Array [
            "
  > * {
    margin: 5px;
  }
",
          ],
        },
        "displayName": "Buttonexample__Container",
        "render": [Function],
        "styledComponentId": "Buttonexample__Container-sc-1ml6h0r-0",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <div
      className="c0"
    >
      <Button
        active={false}
        block={false}
        disabled={false}
        kind="primary"
        round={false}
        size="normal"
        square={false}
      >
        <StyledComponent
          active={false}
          block={false}
          disabled={false}
          forwardedClass={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Button-sc-4bw22c-0",
                "isStatic": false,
                "lastClassName": "c2",
                "rules": Array [
                  "
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  transition: background-color cubic-bezier(0.47, 0, 0.75, 0.72) 0.3s;
  line-height: 0;
  cursor: ",
                  [Function],
                  ";

  &:hover {
    background-color: ",
                  [Function],
                  ";
  }

  &:active {
    background-color: ",
                  [Function],
                  ";
  }

  background-color: ",
                  [Function],
                  ";
  color: ",
                  [Function],
                  ";
  border-radius: ",
                  [Function],
                  ";
  width: ",
                  [Function],
                  ";
  min-width: ",
                  [Function],
                  ";
  height: ",
                  [Function],
                  ";
  padding: ",
                  [Function],
                  ";
  font-size: ",
                  [Function],
                  ";
  border-color: ",
                  [Function],
                  ";
",
                ],
              },
              "defaultProps": Object {
                "active": false,
                "block": false,
                "disabled": false,
                "kind": "primary",
                "round": false,
                "size": "normal",
                "square": false,
              },
              "displayName": "Button",
              "propTypes": Object {
                "active": [Function],
                "block": [Function],
                "disabled": [Function],
                "kind": [Function],
                "round": [Function],
                "size": [Function],
                "square": [Function],
              },
              "render": [Function],
              "styledComponentId": "Button-sc-4bw22c-0",
              "target": "button",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          kind="primary"
          round={false}
          size="normal"
          square={false}
        >
          <button
            className="c1"
            disabled={false}
            kind="primary"
            size="normal"
          >
            Button
          </button>
        </StyledComponent>
      </Button>
      <Button
        active={false}
        block={false}
        disabled={false}
        kind="primary"
        round={false}
        size="normal"
        square={false}
      >
        <StyledComponent
          active={false}
          block={false}
          disabled={false}
          forwardedClass={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Button-sc-4bw22c-0",
                "isStatic": false,
                "lastClassName": "c2",
                "rules": Array [
                  "
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  transition: background-color cubic-bezier(0.47, 0, 0.75, 0.72) 0.3s;
  line-height: 0;
  cursor: ",
                  [Function],
                  ";

  &:hover {
    background-color: ",
                  [Function],
                  ";
  }

  &:active {
    background-color: ",
                  [Function],
                  ";
  }

  background-color: ",
                  [Function],
                  ";
  color: ",
                  [Function],
                  ";
  border-radius: ",
                  [Function],
                  ";
  width: ",
                  [Function],
                  ";
  min-width: ",
                  [Function],
                  ";
  height: ",
                  [Function],
                  ";
  padding: ",
                  [Function],
                  ";
  font-size: ",
                  [Function],
                  ";
  border-color: ",
                  [Function],
                  ";
",
                ],
              },
              "defaultProps": Object {
                "active": false,
                "block": false,
                "disabled": false,
                "kind": "primary",
                "round": false,
                "size": "normal",
                "square": false,
              },
              "displayName": "Button",
              "propTypes": Object {
                "active": [Function],
                "block": [Function],
                "disabled": [Function],
                "kind": [Function],
                "round": [Function],
                "size": [Function],
                "square": [Function],
              },
              "render": [Function],
              "styledComponentId": "Button-sc-4bw22c-0",
              "target": "button",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          kind="primary"
          round={false}
          size="normal"
          square={false}
        >
          <button
            className="c1"
            disabled={false}
            kind="primary"
            size="normal"
          >
            Simple button
          </button>
        </StyledComponent>
      </Button>
      <Button
        active={false}
        block={true}
        disabled={false}
        kind="primary"
        round={false}
        size="normal"
        square={false}
      >
        <StyledComponent
          active={false}
          block={true}
          disabled={false}
          forwardedClass={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Button-sc-4bw22c-0",
                "isStatic": false,
                "lastClassName": "c2",
                "rules": Array [
                  "
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  transition: background-color cubic-bezier(0.47, 0, 0.75, 0.72) 0.3s;
  line-height: 0;
  cursor: ",
                  [Function],
                  ";

  &:hover {
    background-color: ",
                  [Function],
                  ";
  }

  &:active {
    background-color: ",
                  [Function],
                  ";
  }

  background-color: ",
                  [Function],
                  ";
  color: ",
                  [Function],
                  ";
  border-radius: ",
                  [Function],
                  ";
  width: ",
                  [Function],
                  ";
  min-width: ",
                  [Function],
                  ";
  height: ",
                  [Function],
                  ";
  padding: ",
                  [Function],
                  ";
  font-size: ",
                  [Function],
                  ";
  border-color: ",
                  [Function],
                  ";
",
                ],
              },
              "defaultProps": Object {
                "active": false,
                "block": false,
                "disabled": false,
                "kind": "primary",
                "round": false,
                "size": "normal",
                "square": false,
              },
              "displayName": "Button",
              "propTypes": Object {
                "active": [Function],
                "block": [Function],
                "disabled": [Function],
                "kind": [Function],
                "round": [Function],
                "size": [Function],
                "square": [Function],
              },
              "render": [Function],
              "styledComponentId": "Button-sc-4bw22c-0",
              "target": "button",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          kind="primary"
          round={false}
          size="normal"
          square={false}
        >
          <button
            className="c2"
            disabled={false}
            kind="primary"
            size="normal"
          >
            block
          </button>
        </StyledComponent>
      </Button>
    </div>
  </StyledComponent>
</Buttonexample__Container>
`;

exports[`Storyshots Button With disabled props 1`] = `
.c0 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: not-allowed;
  background-color: #D1D2D3;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(169,170,170);
}

.c0:hover {
  background-color: #D1D2D3;
}

.c0:active {
  background-color: #D1D2D3;
}

<Button
  active={false}
  block={false}
  disabled={true}
  kind="primary"
  round={false}
  size="normal"
  square={false}
>
  <StyledComponent
    active={false}
    block={false}
    disabled={true}
    forwardedClass={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "Button-sc-4bw22c-0",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  transition: background-color cubic-bezier(0.47, 0, 0.75, 0.72) 0.3s;
  line-height: 0;
  cursor: ",
            [Function],
            ";

  &:hover {
    background-color: ",
            [Function],
            ";
  }

  &:active {
    background-color: ",
            [Function],
            ";
  }

  background-color: ",
            [Function],
            ";
  color: ",
            [Function],
            ";
  border-radius: ",
            [Function],
            ";
  width: ",
            [Function],
            ";
  min-width: ",
            [Function],
            ";
  height: ",
            [Function],
            ";
  padding: ",
            [Function],
            ";
  font-size: ",
            [Function],
            ";
  border-color: ",
            [Function],
            ";
",
          ],
        },
        "defaultProps": Object {
          "active": false,
          "block": false,
          "disabled": false,
          "kind": "primary",
          "round": false,
          "size": "normal",
          "square": false,
        },
        "displayName": "Button",
        "propTypes": Object {
          "active": [Function],
          "block": [Function],
          "disabled": [Function],
          "kind": [Function],
          "round": [Function],
          "size": [Function],
          "square": [Function],
        },
        "render": [Function],
        "styledComponentId": "Button-sc-4bw22c-0",
        "target": "button",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
    kind="primary"
    round={false}
    size="normal"
    square={false}
  >
    <button
      className="c0"
      disabled={true}
      kind="primary"
      size="normal"
    >
      Disabled
    </button>
  </StyledComponent>
</Button>
`;

exports[`Storyshots Button With icon inside 1`] = `
.c0 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c0:hover {
  background-color: rgb(0,151,208);
}

.c0:active {
  background-color: rgb(0,144,198);
}

.c2 {
  box-sizing: border-box;
}

.c2 > * {
  -webkit-transform-origin: center center;
  -ms-transform-origin: center center;
  transform-origin: center center;
  -webkit-animation: iVXCSc 0.6s infinite cubic-bezier(0.41,0.01,0.58,1);
  animation: iVXCSc 0.6s infinite cubic-bezier(0.41,0.01,0.58,1);
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

<Button
  active={false}
  block={false}
  disabled={false}
  kind="primary"
  round={false}
  size="normal"
  square={false}
>
  <StyledComponent
    active={false}
    block={false}
    disabled={false}
    forwardedClass={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "Button-sc-4bw22c-0",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  transition: background-color cubic-bezier(0.47, 0, 0.75, 0.72) 0.3s;
  line-height: 0;
  cursor: ",
            [Function],
            ";

  &:hover {
    background-color: ",
            [Function],
            ";
  }

  &:active {
    background-color: ",
            [Function],
            ";
  }

  background-color: ",
            [Function],
            ";
  color: ",
            [Function],
            ";
  border-radius: ",
            [Function],
            ";
  width: ",
            [Function],
            ";
  min-width: ",
            [Function],
            ";
  height: ",
            [Function],
            ";
  padding: ",
            [Function],
            ";
  font-size: ",
            [Function],
            ";
  border-color: ",
            [Function],
            ";
",
          ],
        },
        "defaultProps": Object {
          "active": false,
          "block": false,
          "disabled": false,
          "kind": "primary",
          "round": false,
          "size": "normal",
          "square": false,
        },
        "displayName": "Button",
        "propTypes": Object {
          "active": [Function],
          "block": [Function],
          "disabled": [Function],
          "kind": [Function],
          "round": [Function],
          "size": [Function],
          "square": [Function],
        },
        "render": [Function],
        "styledComponentId": "Button-sc-4bw22c-0",
        "target": "button",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
    kind="primary"
    round={false}
    size="normal"
    square={false}
  >
    <button
      className="c0"
      disabled={false}
      kind="primary"
      size="normal"
    >
      <Buttonexample__CenterContainer>
        <StyledComponent
          forwardedClass={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Buttonexample__CenterContainer-sc-1ml6h0r-1",
                "isStatic": true,
                "lastClassName": "c1",
                "rules": Array [
                  "
  display: flex;
  align-items: center;
  justify-content: center;
",
                ],
              },
              "displayName": "Buttonexample__CenterContainer",
              "render": [Function],
              "styledComponentId": "Buttonexample__CenterContainer-sc-1ml6h0r-1",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="c1"
          >
            <Spin>
              <StyledComponent
                forwardedClass={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Spin-sc-1vw5iwo-0",
                      "isStatic": true,
                      "lastClassName": "c2",
                      "rules": Array [
                        "
  box-sizing: border-box;

  > * {
    transform-origin: center center;
    animation: ",
                        Keyframes {
                          "id": "sc-keyframes-iVXCSc",
                          "inject": [Function],
                          "name": "iVXCSc",
                          "rules": Array [
                            "@-webkit-keyframes iVXCSc{from{-webkit-transform:rotate(0deg);-ms-transform:rotate(0deg);transform:rotate(0deg);}to{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                            "@keyframes iVXCSc{from{-webkit-transform:rotate(0deg);-ms-transform:rotate(0deg);transform:rotate(0deg);}to{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                          ],
                          "toString": [Function],
                        },
                        " 0.6s infinite cubic-bezier(0.41, 0.01, 0.58, 1);
  }
",
                      ],
                    },
                    "displayName": "Spin",
                    "render": [Function],
                    "styledComponentId": "Spin-sc-1vw5iwo-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c2"
                >
                  <IconLoading
                    size={14}
                  >
                    <svg
                      fill="currentColor"
                      height="1em"
                      size={14}
                      viewBox="0 0 24 24"
                      width="1em"
                    >
                      <path
                        d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2zm0 18c-4.4 0-8-3.6-8-8s3.6-8 8-8 8 3.6 8 8-3.6 8-8 8z"
                        opacity={0.3}
                      />
                      <path
                        d="M12 4c4.4 0 8 3.6 8 8h2c0-5.5-4.5-10-10-10v2z"
                      />
                    </svg>
                  </IconLoading>
                </div>
              </StyledComponent>
            </Spin>
             Loading ...
          </div>
        </StyledComponent>
      </Buttonexample__CenterContainer>
    </button>
  </StyledComponent>
</Button>
`;

exports[`Storyshots Button With kind props 1`] = `
.c2 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c2:hover {
  background-color: rgb(0,151,208);
}

.c2:active {
  background-color: rgb(0,144,198);
}

.c1 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #FAFAFA;
  color: #999A94;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(202,202,202);
}

.c1:hover {
  background-color: rgb(234,234,234);
}

.c1:active {
  background-color: rgb(223,223,223);
}

.c3 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #69BE28;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(85,153,32);
}

.c3:hover {
  background-color: rgb(98,178,38);
}

.c3:active {
  background-color: rgb(94,170,36);
}

.c4 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #F5364E;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(198,44,63);
}

.c4:hover {
  background-color: rgb(230,51,73);
}

.c4:active {
  background-color: rgb(219,48,70);
}

.c5 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #F39A1E;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(196,124,24);
}

.c5:hover {
  background-color: rgb(228,144,28);
}

.c5:active {
  background-color: rgb(217,137,27);
}

.c0 > * {
  margin: 5px;
}

<KindContainer>
  <Buttonexample__Container>
    <StyledComponent
      forwardedClass={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Buttonexample__Container-sc-1ml6h0r-0",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "
  > * {
    margin: 5px;
  }
",
            ],
          },
          "displayName": "Buttonexample__Container",
          "render": [Function],
          "styledComponentId": "Buttonexample__Container-sc-1ml6h0r-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <Button
          active={false}
          block={false}
          disabled={false}
          key="default"
          kind="default"
          onClick={[Function]}
          round={false}
          size="normal"
          square={false}
        >
          <StyledComponent
            active={false}
            block={false}
            disabled={false}
            forwardedClass={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Button-sc-4bw22c-0",
                  "isStatic": false,
                  "lastClassName": "c5",
                  "rules": Array [
                    "
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  transition: background-color cubic-bezier(0.47, 0, 0.75, 0.72) 0.3s;
  line-height: 0;
  cursor: ",
                    [Function],
                    ";

  &:hover {
    background-color: ",
                    [Function],
                    ";
  }

  &:active {
    background-color: ",
                    [Function],
                    ";
  }

  background-color: ",
                    [Function],
                    ";
  color: ",
                    [Function],
                    ";
  border-radius: ",
                    [Function],
                    ";
  width: ",
                    [Function],
                    ";
  min-width: ",
                    [Function],
                    ";
  height: ",
                    [Function],
                    ";
  padding: ",
                    [Function],
                    ";
  font-size: ",
                    [Function],
                    ";
  border-color: ",
                    [Function],
                    ";
",
                  ],
                },
                "defaultProps": Object {
                  "active": false,
                  "block": false,
                  "disabled": false,
                  "kind": "primary",
                  "round": false,
                  "size": "normal",
                  "square": false,
                },
                "displayName": "Button",
                "propTypes": Object {
                  "active": [Function],
                  "block": [Function],
                  "disabled": [Function],
                  "kind": [Function],
                  "round": [Function],
                  "size": [Function],
                  "square": [Function],
                },
                "render": [Function],
                "styledComponentId": "Button-sc-4bw22c-0",
                "target": "button",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            kind="default"
            onClick={[Function]}
            round={false}
            size="normal"
            square={false}
          >
            <button
              className="c1"
              disabled={false}
              kind="default"
              onClick={[Function]}
              size="normal"
            >
              default
            </button>
          </StyledComponent>
        </Button>
        <Button
          active={false}
          block={false}
          disabled={false}
          key="primary"
          kind="primary"
          onClick={[Function]}
          round={false}
          size="normal"
          square={false}
        >
          <StyledComponent
            active={false}
            block={false}
            disabled={false}
            forwardedClass={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Button-sc-4bw22c-0",
                  "isStatic": false,
                  "lastClassName": "c5",
                  "rules": Array [
                    "
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  transition: background-color cubic-bezier(0.47, 0, 0.75, 0.72) 0.3s;
  line-height: 0;
  cursor: ",
                    [Function],
                    ";

  &:hover {
    background-color: ",
                    [Function],
                    ";
  }

  &:active {
    background-color: ",
                    [Function],
                    ";
  }

  background-color: ",
                    [Function],
                    ";
  color: ",
                    [Function],
                    ";
  border-radius: ",
                    [Function],
                    ";
  width: ",
                    [Function],
                    ";
  min-width: ",
                    [Function],
                    ";
  height: ",
                    [Function],
                    ";
  padding: ",
                    [Function],
                    ";
  font-size: ",
                    [Function],
                    ";
  border-color: ",
                    [Function],
                    ";
",
                  ],
                },
                "defaultProps": Object {
                  "active": false,
                  "block": false,
                  "disabled": false,
                  "kind": "primary",
                  "round": false,
                  "size": "normal",
                  "square": false,
                },
                "displayName": "Button",
                "propTypes": Object {
                  "active": [Function],
                  "block": [Function],
                  "disabled": [Function],
                  "kind": [Function],
                  "round": [Function],
                  "size": [Function],
                  "square": [Function],
                },
                "render": [Function],
                "styledComponentId": "Button-sc-4bw22c-0",
                "target": "button",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            kind="primary"
            onClick={[Function]}
            round={false}
            size="normal"
            square={false}
          >
            <button
              className="c2"
              disabled={false}
              kind="primary"
              onClick={[Function]}
              size="normal"
            >
              primary
            </button>
          </StyledComponent>
        </Button>
        <Button
          active={false}
          block={false}
          disabled={false}
          key="success"
          kind="success"
          onClick={[Function]}
          round={false}
          size="normal"
          square={false}
        >
          <StyledComponent
            active={false}
            block={false}
            disabled={false}
            forwardedClass={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Button-sc-4bw22c-0",
                  "isStatic": false,
                  "lastClassName": "c5",
                  "rules": Array [
                    "
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  transition: background-color cubic-bezier(0.47, 0, 0.75, 0.72) 0.3s;
  line-height: 0;
  cursor: ",
                    [Function],
                    ";

  &:hover {
    background-color: ",
                    [Function],
                    ";
  }

  &:active {
    background-color: ",
                    [Function],
                    ";
  }

  background-color: ",
                    [Function],
                    ";
  color: ",
                    [Function],
                    ";
  border-radius: ",
                    [Function],
                    ";
  width: ",
                    [Function],
                    ";
  min-width: ",
                    [Function],
                    ";
  height: ",
                    [Function],
                    ";
  padding: ",
                    [Function],
                    ";
  font-size: ",
                    [Function],
                    ";
  border-color: ",
                    [Function],
                    ";
",
                  ],
                },
                "defaultProps": Object {
                  "active": false,
                  "block": false,
                  "disabled": false,
                  "kind": "primary",
                  "round": false,
                  "size": "normal",
                  "square": false,
                },
                "displayName": "Button",
                "propTypes": Object {
                  "active": [Function],
                  "block": [Function],
                  "disabled": [Function],
                  "kind": [Function],
                  "round": [Function],
                  "size": [Function],
                  "square": [Function],
                },
                "render": [Function],
                "styledComponentId": "Button-sc-4bw22c-0",
                "target": "button",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            kind="success"
            onClick={[Function]}
            round={false}
            size="normal"
            square={false}
          >
            <button
              className="c3"
              disabled={false}
              kind="success"
              onClick={[Function]}
              size="normal"
            >
              success
            </button>
          </StyledComponent>
        </Button>
        <Button
          active={false}
          block={false}
          disabled={false}
          key="error"
          kind="error"
          onClick={[Function]}
          round={false}
          size="normal"
          square={false}
        >
          <StyledComponent
            active={false}
            block={false}
            disabled={false}
            forwardedClass={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Button-sc-4bw22c-0",
                  "isStatic": false,
                  "lastClassName": "c5",
                  "rules": Array [
                    "
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  transition: background-color cubic-bezier(0.47, 0, 0.75, 0.72) 0.3s;
  line-height: 0;
  cursor: ",
                    [Function],
                    ";

  &:hover {
    background-color: ",
                    [Function],
                    ";
  }

  &:active {
    background-color: ",
                    [Function],
                    ";
  }

  background-color: ",
                    [Function],
                    ";
  color: ",
                    [Function],
                    ";
  border-radius: ",
                    [Function],
                    ";
  width: ",
                    [Function],
                    ";
  min-width: ",
                    [Function],
                    ";
  height: ",
                    [Function],
                    ";
  padding: ",
                    [Function],
                    ";
  font-size: ",
                    [Function],
                    ";
  border-color: ",
                    [Function],
                    ";
",
                  ],
                },
                "defaultProps": Object {
                  "active": false,
                  "block": false,
                  "disabled": false,
                  "kind": "primary",
                  "round": false,
                  "size": "normal",
                  "square": false,
                },
                "displayName": "Button",
                "propTypes": Object {
                  "active": [Function],
                  "block": [Function],
                  "disabled": [Function],
                  "kind": [Function],
                  "round": [Function],
                  "size": [Function],
                  "square": [Function],
                },
                "render": [Function],
                "styledComponentId": "Button-sc-4bw22c-0",
                "target": "button",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            kind="error"
            onClick={[Function]}
            round={false}
            size="normal"
            square={false}
          >
            <button
              className="c4"
              disabled={false}
              kind="error"
              onClick={[Function]}
              size="normal"
            >
              error
            </button>
          </StyledComponent>
        </Button>
        <Button
          active={false}
          block={false}
          disabled={false}
          key="warning"
          kind="warning"
          onClick={[Function]}
          round={false}
          size="normal"
          square={false}
        >
          <StyledComponent
            active={false}
            block={false}
            disabled={false}
            forwardedClass={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Button-sc-4bw22c-0",
                  "isStatic": false,
                  "lastClassName": "c5",
                  "rules": Array [
                    "
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  transition: background-color cubic-bezier(0.47, 0, 0.75, 0.72) 0.3s;
  line-height: 0;
  cursor: ",
                    [Function],
                    ";

  &:hover {
    background-color: ",
                    [Function],
                    ";
  }

  &:active {
    background-color: ",
                    [Function],
                    ";
  }

  background-color: ",
                    [Function],
                    ";
  color: ",
                    [Function],
                    ";
  border-radius: ",
                    [Function],
                    ";
  width: ",
                    [Function],
                    ";
  min-width: ",
                    [Function],
                    ";
  height: ",
                    [Function],
                    ";
  padding: ",
                    [Function],
                    ";
  font-size: ",
                    [Function],
                    ";
  border-color: ",
                    [Function],
                    ";
",
                  ],
                },
                "defaultProps": Object {
                  "active": false,
                  "block": false,
                  "disabled": false,
                  "kind": "primary",
                  "round": false,
                  "size": "normal",
                  "square": false,
                },
                "displayName": "Button",
                "propTypes": Object {
                  "active": [Function],
                  "block": [Function],
                  "disabled": [Function],
                  "kind": [Function],
                  "round": [Function],
                  "size": [Function],
                  "square": [Function],
                },
                "render": [Function],
                "styledComponentId": "Button-sc-4bw22c-0",
                "target": "button",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            kind="warning"
            onClick={[Function]}
            round={false}
            size="normal"
            square={false}
          >
            <button
              className="c5"
              disabled={false}
              kind="warning"
              onClick={[Function]}
              size="normal"
            >
              warning
            </button>
          </StyledComponent>
        </Button>
      </div>
    </StyledComponent>
  </Buttonexample__Container>
</KindContainer>
`;

exports[`Storyshots Button With round props 1`] = `
.c1 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 50%;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c1:hover {
  background-color: rgb(0,151,208);
}

.c1:active {
  background-color: rgb(0,144,198);
}

.c2 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #FAFAFA;
  color: #999A94;
  border-radius: 50%;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(202,202,202);
}

.c2:hover {
  background-color: rgb(234,234,234);
}

.c2:active {
  background-color: rgb(223,223,223);
}

.c0 > * {
  margin: 5px;
}

<Buttonexample__Container>
  <StyledComponent
    forwardedClass={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "Buttonexample__Container-sc-1ml6h0r-0",
          "isStatic": true,
          "lastClassName": "c0",
          "rules": Array [
            "
  > * {
    margin: 5px;
  }
",
          ],
        },
        "displayName": "Buttonexample__Container",
        "render": [Function],
        "styledComponentId": "Buttonexample__Container-sc-1ml6h0r-0",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <div
      className="c0"
    >
      <Button
        active={false}
        block={false}
        disabled={false}
        kind="primary"
        round={true}
        size="normal"
        square={false}
      >
        <StyledComponent
          active={false}
          block={false}
          disabled={false}
          forwardedClass={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Button-sc-4bw22c-0",
                "isStatic": false,
                "lastClassName": "c2",
                "rules": Array [
                  "
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  transition: background-color cubic-bezier(0.47, 0, 0.75, 0.72) 0.3s;
  line-height: 0;
  cursor: ",
                  [Function],
                  ";

  &:hover {
    background-color: ",
                  [Function],
                  ";
  }

  &:active {
    background-color: ",
                  [Function],
                  ";
  }

  background-color: ",
                  [Function],
                  ";
  color: ",
                  [Function],
                  ";
  border-radius: ",
                  [Function],
                  ";
  width: ",
                  [Function],
                  ";
  min-width: ",
                  [Function],
                  ";
  height: ",
                  [Function],
                  ";
  padding: ",
                  [Function],
                  ";
  font-size: ",
                  [Function],
                  ";
  border-color: ",
                  [Function],
                  ";
",
                ],
              },
              "defaultProps": Object {
                "active": false,
                "block": false,
                "disabled": false,
                "kind": "primary",
                "round": false,
                "size": "normal",
                "square": false,
              },
              "displayName": "Button",
              "propTypes": Object {
                "active": [Function],
                "block": [Function],
                "disabled": [Function],
                "kind": [Function],
                "round": [Function],
                "size": [Function],
                "square": [Function],
              },
              "render": [Function],
              "styledComponentId": "Button-sc-4bw22c-0",
              "target": "button",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          kind="primary"
          round={true}
          size="normal"
          square={false}
        >
          <button
            className="c1"
            disabled={false}
            kind="primary"
            size="normal"
          >
            A
          </button>
        </StyledComponent>
      </Button>
      <Button
        active={false}
        block={false}
        disabled={false}
        kind="default"
        round={true}
        size="normal"
        square={false}
      >
        <StyledComponent
          active={false}
          block={false}
          disabled={false}
          forwardedClass={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Button-sc-4bw22c-0",
                "isStatic": false,
                "lastClassName": "c2",
                "rules": Array [
                  "
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  transition: background-color cubic-bezier(0.47, 0, 0.75, 0.72) 0.3s;
  line-height: 0;
  cursor: ",
                  [Function],
                  ";

  &:hover {
    background-color: ",
                  [Function],
                  ";
  }

  &:active {
    background-color: ",
                  [Function],
                  ";
  }

  background-color: ",
                  [Function],
                  ";
  color: ",
                  [Function],
                  ";
  border-radius: ",
                  [Function],
                  ";
  width: ",
                  [Function],
                  ";
  min-width: ",
                  [Function],
                  ";
  height: ",
                  [Function],
                  ";
  padding: ",
                  [Function],
                  ";
  font-size: ",
                  [Function],
                  ";
  border-color: ",
                  [Function],
                  ";
",
                ],
              },
              "defaultProps": Object {
                "active": false,
                "block": false,
                "disabled": false,
                "kind": "primary",
                "round": false,
                "size": "normal",
                "square": false,
              },
              "displayName": "Button",
              "propTypes": Object {
                "active": [Function],
                "block": [Function],
                "disabled": [Function],
                "kind": [Function],
                "round": [Function],
                "size": [Function],
                "square": [Function],
              },
              "render": [Function],
              "styledComponentId": "Button-sc-4bw22c-0",
              "target": "button",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          kind="default"
          round={true}
          size="normal"
          square={false}
        >
          <button
            className="c2"
            disabled={false}
            kind="default"
            size="normal"
          >
            <IconCalendar>
              <svg
                fill="currentColor"
                height="1em"
                viewBox="0 0 24 24"
                width="1em"
              >
                <path
                  d="M19 20H5V9h14m-3-7v2H8V2H6v2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-1V2m-1 11h-5v5h5v-5z"
                />
              </svg>
            </IconCalendar>
          </button>
        </StyledComponent>
      </Button>
    </div>
  </StyledComponent>
</Buttonexample__Container>
`;

exports[`Storyshots Button With size props 1`] = `
.c1 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 40px;
  height: 20px;
  padding: 0 5px;
  font-size: 0.923rem;
  border-color: rgb(0,130,179);
}

.c1:hover {
  background-color: rgb(0,151,208);
}

.c1:active {
  background-color: rgb(0,144,198);
}

.c2 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #FAFAFA;
  color: #999A94;
  border-radius: 3px;
  width: initial;
  min-width: 40px;
  height: 20px;
  padding: 0 5px;
  font-size: 0.923rem;
  border-color: rgb(202,202,202);
}

.c2:hover {
  background-color: rgb(234,234,234);
}

.c2:active {
  background-color: rgb(223,223,223);
}

.c0 > * {
  margin: 5px;
}

<Buttonexample__Container>
  <StyledComponent
    forwardedClass={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "Buttonexample__Container-sc-1ml6h0r-0",
          "isStatic": true,
          "lastClassName": "c0",
          "rules": Array [
            "
  > * {
    margin: 5px;
  }
",
          ],
        },
        "displayName": "Buttonexample__Container",
        "render": [Function],
        "styledComponentId": "Buttonexample__Container-sc-1ml6h0r-0",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <div
      className="c0"
    >
      <Button
        active={false}
        block={false}
        disabled={false}
        kind="primary"
        round={false}
        size="small"
        square={false}
      >
        <StyledComponent
          active={false}
          block={false}
          disabled={false}
          forwardedClass={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Button-sc-4bw22c-0",
                "isStatic": false,
                "lastClassName": "c2",
                "rules": Array [
                  "
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  transition: background-color cubic-bezier(0.47, 0, 0.75, 0.72) 0.3s;
  line-height: 0;
  cursor: ",
                  [Function],
                  ";

  &:hover {
    background-color: ",
                  [Function],
                  ";
  }

  &:active {
    background-color: ",
                  [Function],
                  ";
  }

  background-color: ",
                  [Function],
                  ";
  color: ",
                  [Function],
                  ";
  border-radius: ",
                  [Function],
                  ";
  width: ",
                  [Function],
                  ";
  min-width: ",
                  [Function],
                  ";
  height: ",
                  [Function],
                  ";
  padding: ",
                  [Function],
                  ";
  font-size: ",
                  [Function],
                  ";
  border-color: ",
                  [Function],
                  ";
",
                ],
              },
              "defaultProps": Object {
                "active": false,
                "block": false,
                "disabled": false,
                "kind": "primary",
                "round": false,
                "size": "normal",
                "square": false,
              },
              "displayName": "Button",
              "propTypes": Object {
                "active": [Function],
                "block": [Function],
                "disabled": [Function],
                "kind": [Function],
                "round": [Function],
                "size": [Function],
                "square": [Function],
              },
              "render": [Function],
              "styledComponentId": "Button-sc-4bw22c-0",
              "target": "button",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          kind="primary"
          round={false}
          size="small"
          square={false}
        >
          <button
            className="c1"
            disabled={false}
            kind="primary"
            size="small"
          >
            Btn
          </button>
        </StyledComponent>
      </Button>
      <Button
        active={false}
        block={false}
        disabled={false}
        kind="default"
        round={false}
        size="small"
        square={false}
      >
        <StyledComponent
          active={false}
          block={false}
          disabled={false}
          forwardedClass={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Button-sc-4bw22c-0",
                "isStatic": false,
                "lastClassName": "c2",
                "rules": Array [
                  "
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  transition: background-color cubic-bezier(0.47, 0, 0.75, 0.72) 0.3s;
  line-height: 0;
  cursor: ",
                  [Function],
                  ";

  &:hover {
    background-color: ",
                  [Function],
                  ";
  }

  &:active {
    background-color: ",
                  [Function],
                  ";
  }

  background-color: ",
                  [Function],
                  ";
  color: ",
                  [Function],
                  ";
  border-radius: ",
                  [Function],
                  ";
  width: ",
                  [Function],
                  ";
  min-width: ",
                  [Function],
                  ";
  height: ",
                  [Function],
                  ";
  padding: ",
                  [Function],
                  ";
  font-size: ",
                  [Function],
                  ";
  border-color: ",
                  [Function],
                  ";
",
                ],
              },
              "defaultProps": Object {
                "active": false,
                "block": false,
                "disabled": false,
                "kind": "primary",
                "round": false,
                "size": "normal",
                "square": false,
              },
              "displayName": "Button",
              "propTypes": Object {
                "active": [Function],
                "block": [Function],
                "disabled": [Function],
                "kind": [Function],
                "round": [Function],
                "size": [Function],
                "square": [Function],
              },
              "render": [Function],
              "styledComponentId": "Button-sc-4bw22c-0",
              "target": "button",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          kind="default"
          round={false}
          size="small"
          square={false}
        >
          <button
            className="c2"
            disabled={false}
            kind="default"
            size="small"
          >
            Small Button
          </button>
        </StyledComponent>
      </Button>
    </div>
  </StyledComponent>
</Buttonexample__Container>
`;

exports[`Storyshots Button With square props 1`] = `
.c1 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c1:hover {
  background-color: rgb(0,151,208);
}

.c1:active {
  background-color: rgb(0,144,198);
}

.c2 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #FAFAFA;
  color: #999A94;
  border-radius: 3px;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(202,202,202);
}

.c2:hover {
  background-color: rgb(234,234,234);
}

.c2:active {
  background-color: rgb(223,223,223);
}

.c0 > * {
  margin: 5px;
}

<Buttonexample__Container>
  <StyledComponent
    forwardedClass={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "Buttonexample__Container-sc-1ml6h0r-0",
          "isStatic": true,
          "lastClassName": "c0",
          "rules": Array [
            "
  > * {
    margin: 5px;
  }
",
          ],
        },
        "displayName": "Buttonexample__Container",
        "render": [Function],
        "styledComponentId": "Buttonexample__Container-sc-1ml6h0r-0",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <div
      className="c0"
    >
      <Button
        active={false}
        block={false}
        disabled={false}
        kind="primary"
        round={false}
        size="normal"
        square={true}
      >
        <StyledComponent
          active={false}
          block={false}
          disabled={false}
          forwardedClass={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Button-sc-4bw22c-0",
                "isStatic": false,
                "lastClassName": "c2",
                "rules": Array [
                  "
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  transition: background-color cubic-bezier(0.47, 0, 0.75, 0.72) 0.3s;
  line-height: 0;
  cursor: ",
                  [Function],
                  ";

  &:hover {
    background-color: ",
                  [Function],
                  ";
  }

  &:active {
    background-color: ",
                  [Function],
                  ";
  }

  background-color: ",
                  [Function],
                  ";
  color: ",
                  [Function],
                  ";
  border-radius: ",
                  [Function],
                  ";
  width: ",
                  [Function],
                  ";
  min-width: ",
                  [Function],
                  ";
  height: ",
                  [Function],
                  ";
  padding: ",
                  [Function],
                  ";
  font-size: ",
                  [Function],
                  ";
  border-color: ",
                  [Function],
                  ";
",
                ],
              },
              "defaultProps": Object {
                "active": false,
                "block": false,
                "disabled": false,
                "kind": "primary",
                "round": false,
                "size": "normal",
                "square": false,
              },
              "displayName": "Button",
              "propTypes": Object {
                "active": [Function],
                "block": [Function],
                "disabled": [Function],
                "kind": [Function],
                "round": [Function],
                "size": [Function],
                "square": [Function],
              },
              "render": [Function],
              "styledComponentId": "Button-sc-4bw22c-0",
              "target": "button",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          kind="primary"
          round={false}
          size="normal"
          square={true}
        >
          <button
            className="c1"
            disabled={false}
            kind="primary"
            size="normal"
          >
            A
          </button>
        </StyledComponent>
      </Button>
      <Button
        active={false}
        block={false}
        disabled={false}
        kind="default"
        round={false}
        size="normal"
        square={true}
      >
        <StyledComponent
          active={false}
          block={false}
          disabled={false}
          forwardedClass={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Button-sc-4bw22c-0",
                "isStatic": false,
                "lastClassName": "c2",
                "rules": Array [
                  "
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  transition: background-color cubic-bezier(0.47, 0, 0.75, 0.72) 0.3s;
  line-height: 0;
  cursor: ",
                  [Function],
                  ";

  &:hover {
    background-color: ",
                  [Function],
                  ";
  }

  &:active {
    background-color: ",
                  [Function],
                  ";
  }

  background-color: ",
                  [Function],
                  ";
  color: ",
                  [Function],
                  ";
  border-radius: ",
                  [Function],
                  ";
  width: ",
                  [Function],
                  ";
  min-width: ",
                  [Function],
                  ";
  height: ",
                  [Function],
                  ";
  padding: ",
                  [Function],
                  ";
  font-size: ",
                  [Function],
                  ";
  border-color: ",
                  [Function],
                  ";
",
                ],
              },
              "defaultProps": Object {
                "active": false,
                "block": false,
                "disabled": false,
                "kind": "primary",
                "round": false,
                "size": "normal",
                "square": false,
              },
              "displayName": "Button",
              "propTypes": Object {
                "active": [Function],
                "block": [Function],
                "disabled": [Function],
                "kind": [Function],
                "round": [Function],
                "size": [Function],
                "square": [Function],
              },
              "render": [Function],
              "styledComponentId": "Button-sc-4bw22c-0",
              "target": "button",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          kind="default"
          round={false}
          size="normal"
          square={true}
        >
          <button
            className="c2"
            disabled={false}
            kind="default"
            size="normal"
          >
            <IconCalendar>
              <svg
                fill="currentColor"
                height="1em"
                viewBox="0 0 24 24"
                width="1em"
              >
                <path
                  d="M19 20H5V9h14m-3-7v2H8V2H6v2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-1V2m-1 11h-5v5h5v-5z"
                />
              </svg>
            </IconCalendar>
          </button>
        </StyledComponent>
      </Button>
    </div>
  </StyledComponent>
</Buttonexample__Container>
`;

exports[`Storyshots Button With theme provider (Material) 1`] = `
.c1 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #FAFAFA;
  color: #999A94;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 16px;
  border-color: rgb(202,202,202);
}

.c1:hover {
  background-color: rgb(234,234,234);
}

.c1:active {
  background-color: rgb(223,223,223);
}

.c2 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #2196F3;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 16px;
  border-color: rgb(27,121,196);
}

.c2:hover {
  background-color: rgb(31,141,228);
}

.c2:active {
  background-color: rgb(29,134,217);
}

.c3 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #4CAF50;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 16px;
  border-color: rgb(61,141,65);
}

.c3:hover {
  background-color: rgb(71,164,75);
}

.c3:active {
  background-color: rgb(68,156,71);
}

.c4 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #F44336;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 16px;
  border-color: rgb(197,54,44);
}

.c4:hover {
  background-color: rgb(229,63,51);
}

.c4:active {
  background-color: rgb(218,60,48);
}

.c5 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #FF9800;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 16px;
  border-color: rgb(206,123,0);
}

.c5:hover {
  background-color: rgb(239,143,0);
}

.c5:active {
  background-color: rgb(227,136,0);
}

.c0 > * {
  margin: 5px;
}

<ThemeProvider
  theme={
    Object {
      "base": Object {
        "bodyBackground": "#F1F2F7",
        "textColor": "#353630",
      },
      "color": Object {
        "black": "#000000",
        "default": "#FAFAFA",
        "error": "#F44336",
        "grayBase": "#D1D2D3",
        "grayDark": "#999A94",
        "grayLight": "#FAFAFA",
        "primary": "#2196F3",
        "success": "#4CAF50",
        "warning": "#FF9800",
        "white": "#FFFFFF",
      },
      "fontSize": Object {
        "h1": "34px",
        "h2": "26px",
        "h3": "22px",
        "h4": "18px",
        "p": "16px",
      },
    }
  }
>
  <KindContainer>
    <Buttonexample__Container>
      <StyledComponent
        forwardedClass={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Buttonexample__Container-sc-1ml6h0r-0",
              "isStatic": true,
              "lastClassName": "c0",
              "rules": Array [
                "
  > * {
    margin: 5px;
  }
",
              ],
            },
            "displayName": "Buttonexample__Container",
            "render": [Function],
            "styledComponentId": "Buttonexample__Container-sc-1ml6h0r-0",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="c0"
        >
          <Button
            active={false}
            block={false}
            disabled={false}
            key="default"
            kind="default"
            onClick={[Function]}
            round={false}
            size="normal"
            square={false}
          >
            <StyledComponent
              active={false}
              block={false}
              disabled={false}
              forwardedClass={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Button-sc-4bw22c-0",
                    "isStatic": false,
                    "lastClassName": "c5",
                    "rules": Array [
                      "
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  transition: background-color cubic-bezier(0.47, 0, 0.75, 0.72) 0.3s;
  line-height: 0;
  cursor: ",
                      [Function],
                      ";

  &:hover {
    background-color: ",
                      [Function],
                      ";
  }

  &:active {
    background-color: ",
                      [Function],
                      ";
  }

  background-color: ",
                      [Function],
                      ";
  color: ",
                      [Function],
                      ";
  border-radius: ",
                      [Function],
                      ";
  width: ",
                      [Function],
                      ";
  min-width: ",
                      [Function],
                      ";
  height: ",
                      [Function],
                      ";
  padding: ",
                      [Function],
                      ";
  font-size: ",
                      [Function],
                      ";
  border-color: ",
                      [Function],
                      ";
",
                    ],
                  },
                  "defaultProps": Object {
                    "active": false,
                    "block": false,
                    "disabled": false,
                    "kind": "primary",
                    "round": false,
                    "size": "normal",
                    "square": false,
                  },
                  "displayName": "Button",
                  "propTypes": Object {
                    "active": [Function],
                    "block": [Function],
                    "disabled": [Function],
                    "kind": [Function],
                    "round": [Function],
                    "size": [Function],
                    "square": [Function],
                  },
                  "render": [Function],
                  "styledComponentId": "Button-sc-4bw22c-0",
                  "target": "button",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              kind="default"
              onClick={[Function]}
              round={false}
              size="normal"
              square={false}
            >
              <button
                className="c1"
                disabled={false}
                kind="default"
                onClick={[Function]}
                size="normal"
              >
                default
              </button>
            </StyledComponent>
          </Button>
          <Button
            active={false}
            block={false}
            disabled={false}
            key="primary"
            kind="primary"
            onClick={[Function]}
            round={false}
            size="normal"
            square={false}
          >
            <StyledComponent
              active={false}
              block={false}
              disabled={false}
              forwardedClass={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Button-sc-4bw22c-0",
                    "isStatic": false,
                    "lastClassName": "c5",
                    "rules": Array [
                      "
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  transition: background-color cubic-bezier(0.47, 0, 0.75, 0.72) 0.3s;
  line-height: 0;
  cursor: ",
                      [Function],
                      ";

  &:hover {
    background-color: ",
                      [Function],
                      ";
  }

  &:active {
    background-color: ",
                      [Function],
                      ";
  }

  background-color: ",
                      [Function],
                      ";
  color: ",
                      [Function],
                      ";
  border-radius: ",
                      [Function],
                      ";
  width: ",
                      [Function],
                      ";
  min-width: ",
                      [Function],
                      ";
  height: ",
                      [Function],
                      ";
  padding: ",
                      [Function],
                      ";
  font-size: ",
                      [Function],
                      ";
  border-color: ",
                      [Function],
                      ";
",
                    ],
                  },
                  "defaultProps": Object {
                    "active": false,
                    "block": false,
                    "disabled": false,
                    "kind": "primary",
                    "round": false,
                    "size": "normal",
                    "square": false,
                  },
                  "displayName": "Button",
                  "propTypes": Object {
                    "active": [Function],
                    "block": [Function],
                    "disabled": [Function],
                    "kind": [Function],
                    "round": [Function],
                    "size": [Function],
                    "square": [Function],
                  },
                  "render": [Function],
                  "styledComponentId": "Button-sc-4bw22c-0",
                  "target": "button",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              kind="primary"
              onClick={[Function]}
              round={false}
              size="normal"
              square={false}
            >
              <button
                className="c2"
                disabled={false}
                kind="primary"
                onClick={[Function]}
                size="normal"
              >
                primary
              </button>
            </StyledComponent>
          </Button>
          <Button
            active={false}
            block={false}
            disabled={false}
            key="success"
            kind="success"
            onClick={[Function]}
            round={false}
            size="normal"
            square={false}
          >
            <StyledComponent
              active={false}
              block={false}
              disabled={false}
              forwardedClass={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Button-sc-4bw22c-0",
                    "isStatic": false,
                    "lastClassName": "c5",
                    "rules": Array [
                      "
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  transition: background-color cubic-bezier(0.47, 0, 0.75, 0.72) 0.3s;
  line-height: 0;
  cursor: ",
                      [Function],
                      ";

  &:hover {
    background-color: ",
                      [Function],
                      ";
  }

  &:active {
    background-color: ",
                      [Function],
                      ";
  }

  background-color: ",
                      [Function],
                      ";
  color: ",
                      [Function],
                      ";
  border-radius: ",
                      [Function],
                      ";
  width: ",
                      [Function],
                      ";
  min-width: ",
                      [Function],
                      ";
  height: ",
                      [Function],
                      ";
  padding: ",
                      [Function],
                      ";
  font-size: ",
                      [Function],
                      ";
  border-color: ",
                      [Function],
                      ";
",
                    ],
                  },
                  "defaultProps": Object {
                    "active": false,
                    "block": false,
                    "disabled": false,
                    "kind": "primary",
                    "round": false,
                    "size": "normal",
                    "square": false,
                  },
                  "displayName": "Button",
                  "propTypes": Object {
                    "active": [Function],
                    "block": [Function],
                    "disabled": [Function],
                    "kind": [Function],
                    "round": [Function],
                    "size": [Function],
                    "square": [Function],
                  },
                  "render": [Function],
                  "styledComponentId": "Button-sc-4bw22c-0",
                  "target": "button",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              kind="success"
              onClick={[Function]}
              round={false}
              size="normal"
              square={false}
            >
              <button
                className="c3"
                disabled={false}
                kind="success"
                onClick={[Function]}
                size="normal"
              >
                success
              </button>
            </StyledComponent>
          </Button>
          <Button
            active={false}
            block={false}
            disabled={false}
            key="error"
            kind="error"
            onClick={[Function]}
            round={false}
            size="normal"
            square={false}
          >
            <StyledComponent
              active={false}
              block={false}
              disabled={false}
              forwardedClass={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Button-sc-4bw22c-0",
                    "isStatic": false,
                    "lastClassName": "c5",
                    "rules": Array [
                      "
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  transition: background-color cubic-bezier(0.47, 0, 0.75, 0.72) 0.3s;
  line-height: 0;
  cursor: ",
                      [Function],
                      ";

  &:hover {
    background-color: ",
                      [Function],
                      ";
  }

  &:active {
    background-color: ",
                      [Function],
                      ";
  }

  background-color: ",
                      [Function],
                      ";
  color: ",
                      [Function],
                      ";
  border-radius: ",
                      [Function],
                      ";
  width: ",
                      [Function],
                      ";
  min-width: ",
                      [Function],
                      ";
  height: ",
                      [Function],
                      ";
  padding: ",
                      [Function],
                      ";
  font-size: ",
                      [Function],
                      ";
  border-color: ",
                      [Function],
                      ";
",
                    ],
                  },
                  "defaultProps": Object {
                    "active": false,
                    "block": false,
                    "disabled": false,
                    "kind": "primary",
                    "round": false,
                    "size": "normal",
                    "square": false,
                  },
                  "displayName": "Button",
                  "propTypes": Object {
                    "active": [Function],
                    "block": [Function],
                    "disabled": [Function],
                    "kind": [Function],
                    "round": [Function],
                    "size": [Function],
                    "square": [Function],
                  },
                  "render": [Function],
                  "styledComponentId": "Button-sc-4bw22c-0",
                  "target": "button",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              kind="error"
              onClick={[Function]}
              round={false}
              size="normal"
              square={false}
            >
              <button
                className="c4"
                disabled={false}
                kind="error"
                onClick={[Function]}
                size="normal"
              >
                error
              </button>
            </StyledComponent>
          </Button>
          <Button
            active={false}
            block={false}
            disabled={false}
            key="warning"
            kind="warning"
            onClick={[Function]}
            round={false}
            size="normal"
            square={false}
          >
            <StyledComponent
              active={false}
              block={false}
              disabled={false}
              forwardedClass={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Button-sc-4bw22c-0",
                    "isStatic": false,
                    "lastClassName": "c5",
                    "rules": Array [
                      "
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  transition: background-color cubic-bezier(0.47, 0, 0.75, 0.72) 0.3s;
  line-height: 0;
  cursor: ",
                      [Function],
                      ";

  &:hover {
    background-color: ",
                      [Function],
                      ";
  }

  &:active {
    background-color: ",
                      [Function],
                      ";
  }

  background-color: ",
                      [Function],
                      ";
  color: ",
                      [Function],
                      ";
  border-radius: ",
                      [Function],
                      ";
  width: ",
                      [Function],
                      ";
  min-width: ",
                      [Function],
                      ";
  height: ",
                      [Function],
                      ";
  padding: ",
                      [Function],
                      ";
  font-size: ",
                      [Function],
                      ";
  border-color: ",
                      [Function],
                      ";
",
                    ],
                  },
                  "defaultProps": Object {
                    "active": false,
                    "block": false,
                    "disabled": false,
                    "kind": "primary",
                    "round": false,
                    "size": "normal",
                    "square": false,
                  },
                  "displayName": "Button",
                  "propTypes": Object {
                    "active": [Function],
                    "block": [Function],
                    "disabled": [Function],
                    "kind": [Function],
                    "round": [Function],
                    "size": [Function],
                    "square": [Function],
                  },
                  "render": [Function],
                  "styledComponentId": "Button-sc-4bw22c-0",
                  "target": "button",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              kind="warning"
              onClick={[Function]}
              round={false}
              size="normal"
              square={false}
            >
              <button
                className="c5"
                disabled={false}
                kind="warning"
                onClick={[Function]}
                size="normal"
              >
                warning
              </button>
            </StyledComponent>
          </Button>
        </div>
      </StyledComponent>
    </Buttonexample__Container>
  </KindContainer>
</ThemeProvider>
`;
