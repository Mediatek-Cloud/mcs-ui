// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Heading API 1`] = `
.c0 {
  margin: 0;
  font-weight: normal;
  font-size: 2.46rem;
}

<Heading
  level={1}
>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "Heading-sc-1ol6ekh-0",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "
  margin: 0;
  font-weight: normal;
  font-size: ",
            [Function],
            ";
  ",
            [Function],
            ";
",
          ],
        },
        "defaultProps": Object {
          "level": 1,
        },
        "displayName": "Heading",
        "foldedComponentIds": Array [],
        "propTypes": Object {
          "color": [Function],
          "level": [Function],
        },
        "render": [Function],
        "styledComponentId": "Heading-sc-1ol6ekh-0",
        "target": [Function],
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
        Symbol(Symbol.hasInstance): [Function],
      }
    }
    forwardedRef={null}
    level={1}
  >
    <BaseComponent
      className="c0"
      level={1}
    >
      <h1
        className="c0"
      >
        Level 1
      </h1>
    </BaseComponent>
  </StyledComponent>
</Heading>
`;

exports[`Storyshots Heading With color props 1`] = `
.c0 {
  margin: 0;
  font-weight: normal;
  font-size: 1.69rem;
  color: #353630;
}

.c1 {
  margin: 0;
  font-weight: normal;
  font-size: 1.69rem;
  color: #999A94;
}

.c2 {
  margin: 0;
  font-weight: normal;
  font-size: 1.69rem;
  color: #D1D2D3;
}

.c3 {
  margin: 0;
  font-weight: normal;
  font-size: 1.69rem;
  color: #FAFAFA;
}

.c4 {
  margin: 0;
  font-weight: normal;
  font-size: 1.69rem;
  color: #FFFFFF;
}

.c5 {
  margin: 0;
  font-weight: normal;
  font-size: 1.69rem;
  color: #00A1DE;
}

.c6 {
  margin: 0;
  font-weight: normal;
  font-size: 1.69rem;
  color: #69BE28;
}

.c7 {
  margin: 0;
  font-weight: normal;
  font-size: 1.69rem;
  color: #F5364E;
}

.c8 {
  margin: 0;
  font-weight: normal;
  font-size: 1.69rem;
  color: #F39A1E;
}

<div>
  <Heading
    color="black"
    key="black"
    level={2}
  >
    <StyledComponent
      color="black"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Heading-sc-1ol6ekh-0",
            "isStatic": false,
            "lastClassName": "c8",
            "rules": Array [
              "
  margin: 0;
  font-weight: normal;
  font-size: ",
              [Function],
              ";
  ",
              [Function],
              ";
",
            ],
          },
          "defaultProps": Object {
            "level": 1,
          },
          "displayName": "Heading",
          "foldedComponentIds": Array [],
          "propTypes": Object {
            "color": [Function],
            "level": [Function],
          },
          "render": [Function],
          "styledComponentId": "Heading-sc-1ol6ekh-0",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        }
      }
      forwardedRef={null}
      level={2}
    >
      <BaseComponent
        className="c0"
        color="black"
        level={2}
      >
        <h2
          className="c0"
          color="black"
        >
          Level 2 
          black
        </h2>
      </BaseComponent>
    </StyledComponent>
  </Heading>
  <Heading
    color="grayDark"
    key="grayDark"
    level={2}
  >
    <StyledComponent
      color="grayDark"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Heading-sc-1ol6ekh-0",
            "isStatic": false,
            "lastClassName": "c8",
            "rules": Array [
              "
  margin: 0;
  font-weight: normal;
  font-size: ",
              [Function],
              ";
  ",
              [Function],
              ";
",
            ],
          },
          "defaultProps": Object {
            "level": 1,
          },
          "displayName": "Heading",
          "foldedComponentIds": Array [],
          "propTypes": Object {
            "color": [Function],
            "level": [Function],
          },
          "render": [Function],
          "styledComponentId": "Heading-sc-1ol6ekh-0",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        }
      }
      forwardedRef={null}
      level={2}
    >
      <BaseComponent
        className="c1"
        color="grayDark"
        level={2}
      >
        <h2
          className="c1"
          color="grayDark"
        >
          Level 2 
          grayDark
        </h2>
      </BaseComponent>
    </StyledComponent>
  </Heading>
  <Heading
    color="grayBase"
    key="grayBase"
    level={2}
  >
    <StyledComponent
      color="grayBase"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Heading-sc-1ol6ekh-0",
            "isStatic": false,
            "lastClassName": "c8",
            "rules": Array [
              "
  margin: 0;
  font-weight: normal;
  font-size: ",
              [Function],
              ";
  ",
              [Function],
              ";
",
            ],
          },
          "defaultProps": Object {
            "level": 1,
          },
          "displayName": "Heading",
          "foldedComponentIds": Array [],
          "propTypes": Object {
            "color": [Function],
            "level": [Function],
          },
          "render": [Function],
          "styledComponentId": "Heading-sc-1ol6ekh-0",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        }
      }
      forwardedRef={null}
      level={2}
    >
      <BaseComponent
        className="c2"
        color="grayBase"
        level={2}
      >
        <h2
          className="c2"
          color="grayBase"
        >
          Level 2 
          grayBase
        </h2>
      </BaseComponent>
    </StyledComponent>
  </Heading>
  <Heading
    color="grayLight"
    key="grayLight"
    level={2}
  >
    <StyledComponent
      color="grayLight"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Heading-sc-1ol6ekh-0",
            "isStatic": false,
            "lastClassName": "c8",
            "rules": Array [
              "
  margin: 0;
  font-weight: normal;
  font-size: ",
              [Function],
              ";
  ",
              [Function],
              ";
",
            ],
          },
          "defaultProps": Object {
            "level": 1,
          },
          "displayName": "Heading",
          "foldedComponentIds": Array [],
          "propTypes": Object {
            "color": [Function],
            "level": [Function],
          },
          "render": [Function],
          "styledComponentId": "Heading-sc-1ol6ekh-0",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        }
      }
      forwardedRef={null}
      level={2}
    >
      <BaseComponent
        className="c3"
        color="grayLight"
        level={2}
      >
        <h2
          className="c3"
          color="grayLight"
        >
          Level 2 
          grayLight
        </h2>
      </BaseComponent>
    </StyledComponent>
  </Heading>
  <Heading
    color="white"
    key="white"
    level={2}
  >
    <StyledComponent
      color="white"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Heading-sc-1ol6ekh-0",
            "isStatic": false,
            "lastClassName": "c8",
            "rules": Array [
              "
  margin: 0;
  font-weight: normal;
  font-size: ",
              [Function],
              ";
  ",
              [Function],
              ";
",
            ],
          },
          "defaultProps": Object {
            "level": 1,
          },
          "displayName": "Heading",
          "foldedComponentIds": Array [],
          "propTypes": Object {
            "color": [Function],
            "level": [Function],
          },
          "render": [Function],
          "styledComponentId": "Heading-sc-1ol6ekh-0",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        }
      }
      forwardedRef={null}
      level={2}
    >
      <BaseComponent
        className="c4"
        color="white"
        level={2}
      >
        <h2
          className="c4"
          color="white"
        >
          Level 2 
          white
        </h2>
      </BaseComponent>
    </StyledComponent>
  </Heading>
  <Heading
    color="default"
    key="default"
    level={2}
  >
    <StyledComponent
      color="default"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Heading-sc-1ol6ekh-0",
            "isStatic": false,
            "lastClassName": "c8",
            "rules": Array [
              "
  margin: 0;
  font-weight: normal;
  font-size: ",
              [Function],
              ";
  ",
              [Function],
              ";
",
            ],
          },
          "defaultProps": Object {
            "level": 1,
          },
          "displayName": "Heading",
          "foldedComponentIds": Array [],
          "propTypes": Object {
            "color": [Function],
            "level": [Function],
          },
          "render": [Function],
          "styledComponentId": "Heading-sc-1ol6ekh-0",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        }
      }
      forwardedRef={null}
      level={2}
    >
      <BaseComponent
        className="c3"
        color="default"
        level={2}
      >
        <h2
          className="c3"
          color="default"
        >
          Level 2 
          default
        </h2>
      </BaseComponent>
    </StyledComponent>
  </Heading>
  <Heading
    color="primary"
    key="primary"
    level={2}
  >
    <StyledComponent
      color="primary"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Heading-sc-1ol6ekh-0",
            "isStatic": false,
            "lastClassName": "c8",
            "rules": Array [
              "
  margin: 0;
  font-weight: normal;
  font-size: ",
              [Function],
              ";
  ",
              [Function],
              ";
",
            ],
          },
          "defaultProps": Object {
            "level": 1,
          },
          "displayName": "Heading",
          "foldedComponentIds": Array [],
          "propTypes": Object {
            "color": [Function],
            "level": [Function],
          },
          "render": [Function],
          "styledComponentId": "Heading-sc-1ol6ekh-0",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        }
      }
      forwardedRef={null}
      level={2}
    >
      <BaseComponent
        className="c5"
        color="primary"
        level={2}
      >
        <h2
          className="c5"
          color="primary"
        >
          Level 2 
          primary
        </h2>
      </BaseComponent>
    </StyledComponent>
  </Heading>
  <Heading
    color="success"
    key="success"
    level={2}
  >
    <StyledComponent
      color="success"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Heading-sc-1ol6ekh-0",
            "isStatic": false,
            "lastClassName": "c8",
            "rules": Array [
              "
  margin: 0;
  font-weight: normal;
  font-size: ",
              [Function],
              ";
  ",
              [Function],
              ";
",
            ],
          },
          "defaultProps": Object {
            "level": 1,
          },
          "displayName": "Heading",
          "foldedComponentIds": Array [],
          "propTypes": Object {
            "color": [Function],
            "level": [Function],
          },
          "render": [Function],
          "styledComponentId": "Heading-sc-1ol6ekh-0",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        }
      }
      forwardedRef={null}
      level={2}
    >
      <BaseComponent
        className="c6"
        color="success"
        level={2}
      >
        <h2
          className="c6"
          color="success"
        >
          Level 2 
          success
        </h2>
      </BaseComponent>
    </StyledComponent>
  </Heading>
  <Heading
    color="error"
    key="error"
    level={2}
  >
    <StyledComponent
      color="error"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Heading-sc-1ol6ekh-0",
            "isStatic": false,
            "lastClassName": "c8",
            "rules": Array [
              "
  margin: 0;
  font-weight: normal;
  font-size: ",
              [Function],
              ";
  ",
              [Function],
              ";
",
            ],
          },
          "defaultProps": Object {
            "level": 1,
          },
          "displayName": "Heading",
          "foldedComponentIds": Array [],
          "propTypes": Object {
            "color": [Function],
            "level": [Function],
          },
          "render": [Function],
          "styledComponentId": "Heading-sc-1ol6ekh-0",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        }
      }
      forwardedRef={null}
      level={2}
    >
      <BaseComponent
        className="c7"
        color="error"
        level={2}
      >
        <h2
          className="c7"
          color="error"
        >
          Level 2 
          error
        </h2>
      </BaseComponent>
    </StyledComponent>
  </Heading>
  <Heading
    color="warning"
    key="warning"
    level={2}
  >
    <StyledComponent
      color="warning"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Heading-sc-1ol6ekh-0",
            "isStatic": false,
            "lastClassName": "c8",
            "rules": Array [
              "
  margin: 0;
  font-weight: normal;
  font-size: ",
              [Function],
              ";
  ",
              [Function],
              ";
",
            ],
          },
          "defaultProps": Object {
            "level": 1,
          },
          "displayName": "Heading",
          "foldedComponentIds": Array [],
          "propTypes": Object {
            "color": [Function],
            "level": [Function],
          },
          "render": [Function],
          "styledComponentId": "Heading-sc-1ol6ekh-0",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        }
      }
      forwardedRef={null}
      level={2}
    >
      <BaseComponent
        className="c8"
        color="warning"
        level={2}
      >
        <h2
          className="c8"
          color="warning"
        >
          Level 2 
          warning
        </h2>
      </BaseComponent>
    </StyledComponent>
  </Heading>
</div>
`;

exports[`Storyshots Heading With level props 1`] = `
.c0 {
  margin: 0;
  font-weight: normal;
  font-size: 2.46rem;
}

.c3 {
  margin: 0;
  font-weight: normal;
  font-size: 1.15rem;
}

.c1 {
  margin: 0;
  font-weight: normal;
  font-size: 1.69rem;
}

.c2 {
  margin: 0;
  font-weight: normal;
  font-size: 1.38rem;
}

.c4 {
  margin: 0;
  font-weight: normal;
  font-size: 1rem;
}

<div>
  <Heading
    key="1"
    level={1}
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Heading-sc-1ol6ekh-0",
            "isStatic": false,
            "lastClassName": "c4",
            "rules": Array [
              "
  margin: 0;
  font-weight: normal;
  font-size: ",
              [Function],
              ";
  ",
              [Function],
              ";
",
            ],
          },
          "defaultProps": Object {
            "level": 1,
          },
          "displayName": "Heading",
          "foldedComponentIds": Array [],
          "propTypes": Object {
            "color": [Function],
            "level": [Function],
          },
          "render": [Function],
          "styledComponentId": "Heading-sc-1ol6ekh-0",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        }
      }
      forwardedRef={null}
      level={1}
    >
      <BaseComponent
        className="c0"
        level={1}
      >
        <h1
          className="c0"
        >
          h
          1
           - Level 
          1
             (
          2.46rem
           =
           
          31.98px
          )
        </h1>
      </BaseComponent>
    </StyledComponent>
  </Heading>
  <Heading
    key="2"
    level={2}
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Heading-sc-1ol6ekh-0",
            "isStatic": false,
            "lastClassName": "c4",
            "rules": Array [
              "
  margin: 0;
  font-weight: normal;
  font-size: ",
              [Function],
              ";
  ",
              [Function],
              ";
",
            ],
          },
          "defaultProps": Object {
            "level": 1,
          },
          "displayName": "Heading",
          "foldedComponentIds": Array [],
          "propTypes": Object {
            "color": [Function],
            "level": [Function],
          },
          "render": [Function],
          "styledComponentId": "Heading-sc-1ol6ekh-0",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        }
      }
      forwardedRef={null}
      level={2}
    >
      <BaseComponent
        className="c1"
        level={2}
      >
        <h2
          className="c1"
        >
          h
          2
           - Level 
          2
             (
          1.69rem
           =
           
          21.97px
          )
        </h2>
      </BaseComponent>
    </StyledComponent>
  </Heading>
  <Heading
    key="3"
    level={3}
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Heading-sc-1ol6ekh-0",
            "isStatic": false,
            "lastClassName": "c4",
            "rules": Array [
              "
  margin: 0;
  font-weight: normal;
  font-size: ",
              [Function],
              ";
  ",
              [Function],
              ";
",
            ],
          },
          "defaultProps": Object {
            "level": 1,
          },
          "displayName": "Heading",
          "foldedComponentIds": Array [],
          "propTypes": Object {
            "color": [Function],
            "level": [Function],
          },
          "render": [Function],
          "styledComponentId": "Heading-sc-1ol6ekh-0",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        }
      }
      forwardedRef={null}
      level={3}
    >
      <BaseComponent
        className="c2"
        level={3}
      >
        <h3
          className="c2"
        >
          h
          3
           - Level 
          3
             (
          1.38rem
           =
           
          17.939999999999998px
          )
        </h3>
      </BaseComponent>
    </StyledComponent>
  </Heading>
  <Heading
    key="4"
    level={4}
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Heading-sc-1ol6ekh-0",
            "isStatic": false,
            "lastClassName": "c4",
            "rules": Array [
              "
  margin: 0;
  font-weight: normal;
  font-size: ",
              [Function],
              ";
  ",
              [Function],
              ";
",
            ],
          },
          "defaultProps": Object {
            "level": 1,
          },
          "displayName": "Heading",
          "foldedComponentIds": Array [],
          "propTypes": Object {
            "color": [Function],
            "level": [Function],
          },
          "render": [Function],
          "styledComponentId": "Heading-sc-1ol6ekh-0",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        }
      }
      forwardedRef={null}
      level={4}
    >
      <BaseComponent
        className="c3"
        level={4}
      >
        <h4
          className="c3"
        >
          h
          4
           - Level 
          4
             (
          1.15rem
           =
           
          14.95px
          )
        </h4>
      </BaseComponent>
    </StyledComponent>
  </Heading>
  <Heading
    key="5"
    level={5}
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Heading-sc-1ol6ekh-0",
            "isStatic": false,
            "lastClassName": "c4",
            "rules": Array [
              "
  margin: 0;
  font-weight: normal;
  font-size: ",
              [Function],
              ";
  ",
              [Function],
              ";
",
            ],
          },
          "defaultProps": Object {
            "level": 1,
          },
          "displayName": "Heading",
          "foldedComponentIds": Array [],
          "propTypes": Object {
            "color": [Function],
            "level": [Function],
          },
          "render": [Function],
          "styledComponentId": "Heading-sc-1ol6ekh-0",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        }
      }
      forwardedRef={null}
      level={5}
    >
      <BaseComponent
        className="c4"
        level={5}
      >
        <h5
          className="c4"
        >
          h
          5
           - Level 
          5
             (
          1rem
           =
           
          13px
          )
        </h5>
      </BaseComponent>
    </StyledComponent>
  </Heading>
  <Heading
    key="6"
    level={6}
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Heading-sc-1ol6ekh-0",
            "isStatic": false,
            "lastClassName": "c4",
            "rules": Array [
              "
  margin: 0;
  font-weight: normal;
  font-size: ",
              [Function],
              ";
  ",
              [Function],
              ";
",
            ],
          },
          "defaultProps": Object {
            "level": 1,
          },
          "displayName": "Heading",
          "foldedComponentIds": Array [],
          "propTypes": Object {
            "color": [Function],
            "level": [Function],
          },
          "render": [Function],
          "styledComponentId": "Heading-sc-1ol6ekh-0",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        }
      }
      forwardedRef={null}
      level={6}
    >
      <BaseComponent
        className="c4"
        level={6}
      >
        <h6
          className="c4"
        >
          h
          6
           - Level 
          6
             (
          1rem
           =
           
          13px
          )
        </h6>
      </BaseComponent>
    </StyledComponent>
  </Heading>
</div>
`;
