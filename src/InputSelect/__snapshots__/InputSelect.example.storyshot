// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots InputSelect API 1`] = `
.c1 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c1:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c1::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3 {
  line-height: 0;
}

.c3 > * {
  -webkit-transform-origin: center;
  -ms-transform-origin: center;
  transform-origin: center;
  -webkit-transition: -webkit-transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transform: initial;
  -ms-transform: initial;
  transform: initial;
}

.c2 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(0,130,179);
  font-size: 18px;
  color: #FFFFFF;
}

.c2:hover {
  background-color: rgb(0,151,208);
}

.c2:active {
  background-color: rgb(0,144,198);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c0 > button {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > *:first-child {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:not(:first-child):not(:last-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:last-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c0 > span {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  padding: 0 5px;
  min-height: 32px;
  min-width: 32px;
  border-radius: 3px;
  border: 1px solid #D1D2D3;
  background-color: #FFFFFF;
  color: #999A94;
}

.c0 > * + span {
  border-left-width: 0;
}

.c0 > * + span:not(:last-child) {
  border-right-width: 0;
}

.c0 > span:first-child {
  border-right-width: 0;
}

.c0 > span:last-child {
  border-left-width: 0;
}

<div
  style={
    Object {
      "width": 500,
    }
  }
>
  <InputSelect
    items={
      Array [
        Object {
          "children": "item name 1",
          "value": 1,
        },
      ]
    }
    onChange={[Function]}
    placeholder="or filter by device name"
    value={1}
  >
    <PureInputSelect
      disableFilter={false}
      itemValueMapper={[Function]}
      items={
        Array [
          Object {
            "children": "item name 1",
            "value": 1,
          },
        ]
      }
      kind="primary"
      noRowsRenderer={[Function]}
      onChange={[Function]}
      placeholder="or filter by device name"
      theme={
        Object {
          "base": Object {
            "bodyBackgroundColor": "#F1F2F7",
            "bodyColor": "#353630",
            "fontSize": "13px",
            "lineHeight": 1.5,
          },
          "color": Object {
            "black": "#353630",
            "default": "#FAFAFA",
            "error": "#F5364E",
            "grayBase": "#D1D2D3",
            "grayDark": "#999A94",
            "grayLight": "#FAFAFA",
            "primary": "#00A1DE",
            "success": "#69BE28",
            "warning": "#F39A1E",
            "white": "#FFFFFF",
          },
          "fontSize": Object {
            "h1": "2.46rem",
            "h2": "1.69rem",
            "h3": "1.38rem",
            "h4": "1.15rem",
            "h5": "1rem",
            "h6": "1rem",
            "p": "1rem",
            "small": "0.923rem",
          },
          "height": Object {
            "header": "50px",
            "normal": "32px",
            "small": "20px",
          },
          "mobile": Object {
            "headerHeight": "56px",
            "maxWidth": "800px",
          },
        }
      }
      value={1}
    >
      <div>
        <styled-components__StyledInputGroup
          disableFilter={false}
        >
          <StyledComponent
            disableFilter={false}
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "styled-components__StyledInputGroup-rj6hz5-1",
                  "isStatic": false,
                  "lastClassName": "c0",
                  "rules": Array [
                    "
  display: flex;

  > button {
    flex-shrink: 0;
  }

  /* ============================
   * First Child
   * ============================
   */

  > *:first-child {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  /* ============================
   * Middle Child
   * ============================
   */

  > *:not(:first-child):not(:last-child) {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  /* ============================
   * Last Child
   * ============================
   */

  > *:last-child {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }

  /**
   * Unit
   */

  > span {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    padding: 0 5px;
    min-height: ",
                    [Function],
                    ";
    min-width: ",
                    [Function],
                    ";
    border-radius: 3px;
    border: 1px solid ",
                    [Function],
                    ";
    background-color: ",
                    [Function],
                    ";
    color: ",
                    [Function],
                    ";
  }
  > * + span {
    border-left-width: 0;
  }
  > * + span:not(:last-child) {
    border-right-width: 0;
  }
  > span:first-child {
    border-right-width: 0;
  }
  > span:last-child {
    border-left-width: 0;
  }
",
                    "
  position: relative;

  > * {
    ",
                    [Function],
                    ";
  }
",
                  ],
                },
                "displayName": "styled-components__StyledInputGroup",
                "foldedComponentIds": Array [
                  "InputGroup-clww0l-0",
                ],
                "render": [Function],
                "styledComponentId": "styled-components__StyledInputGroup-rj6hz5-1",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={
              Object {
                "current": .c1 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c1:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c1::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3 {
  line-height: 0;
}

.c3 > * {
  -webkit-transform-origin: center;
  -ms-transform-origin: center;
  transform-origin: center;
  -webkit-transition: -webkit-transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transform: initial;
  -ms-transform: initial;
  transform: initial;
}

.c2 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(0,130,179);
  font-size: 18px;
  color: #FFFFFF;
}

.c2:hover {
  background-color: rgb(0,151,208);
}

.c2:active {
  background-color: rgb(0,144,198);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c0 > button {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > *:first-child {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:not(:first-child):not(:last-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:last-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c0 > span {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  padding: 0 5px;
  min-height: 32px;
  min-width: 32px;
  border-radius: 3px;
  border: 1px solid #D1D2D3;
  background-color: #FFFFFF;
  color: #999A94;
}

.c0 > * + span {
  border-left-width: 0;
}

.c0 > * + span:not(:last-child) {
  border-right-width: 0;
}

.c0 > span:first-child {
  border-right-width: 0;
}

.c0 > span:last-child {
  border-left-width: 0;
}

<div
                  class="c0"
                >
                  <input
                    autocomplete="off"
                    class="c1"
                    kind="primary"
                    placeholder="or filter by device name"
                    value="item name 1"
                  />
                  <button
                    class="c2"
                    kind="primary"
                  >
                    <div
                      class="c3"
                    >
                      <svg
                        fill="currentColor"
                        height="1em"
                        viewBox="0 0 24 24"
                        width="1em"
                      >
                        <path
                          d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z"
                        />
                      </svg>
                    </div>
                  </button>
                </div>,
              }
            }
          >
            <div
              className="c0"
            >
              <Input
                autoComplete="off"
                focus={false}
                kind="primary"
                onChange={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                placeholder="or filter by device name"
                readOnly={false}
                value="item name 1"
              >
                <StyledComponent
                  autoComplete="off"
                  focus={false}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "Input-a7ignf-0",
                        "isStatic": false,
                        "lastClassName": "c1",
                        "rules": Array [
                          "
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: ",
                          [Function],
                          ";
  color: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  border-color: ",
                          [Function],
                          ";
  box-shadow: ",
                          [Function],
                          ";

  &:focus {
    border-color: ",
                          [Function],
                          ";
    box-shadow: 0 0 3px 0
      ",
                          [Function],
                          ";
  }

  &::placeholder {
    opacity: 1;
    color: ",
                          [Function],
                          ";
  }
",
                        ],
                      },
                      "defaultProps": Object {
                        "focus": false,
                        "kind": "primary",
                      },
                      "displayName": "Input",
                      "foldedComponentIds": Array [],
                      "propTypes": Object {
                        "focus": [Function],
                        "kind": [Function],
                      },
                      "render": [Function],
                      "styledComponentId": "Input-a7ignf-0",
                      "target": "input",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={
                    Object {
                      "current": <input
                        autocomplete="off"
                        class="c1"
                        kind="primary"
                        placeholder="or filter by device name"
                        value="item name 1"
                      />,
                    }
                  }
                  kind="primary"
                  onChange={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  placeholder="or filter by device name"
                  readOnly={false}
                  value="item name 1"
                >
                  <input
                    autoComplete="off"
                    className="c1"
                    kind="primary"
                    onChange={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    placeholder="or filter by device name"
                    readOnly={false}
                    value="item name 1"
                  />
                </StyledComponent>
              </Input>
              <styled-components__StyledButton
                active={false}
                block={false}
                disabled={false}
                kind="primary"
                onClick={[Function]}
                round={false}
                size="normal"
                square={true}
              >
                <StyledComponent
                  active={false}
                  block={false}
                  disabled={false}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled-components__StyledButton-sc-1vavxcc-3",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  transition: background-color cubic-bezier(0.47, 0, 0.75, 0.72) 0.3s;
  line-height: 0;
  cursor: ",
                          [Function],
                          ";

  &:hover {
    background-color: ",
                          [Function],
                          ";
  }

  &:active {
    background-color: ",
                          [Function],
                          ";
  }

  background-color: ",
                          [Function],
                          ";
  color: ",
                          [Function],
                          ";
  border-radius: ",
                          [Function],
                          ";
  width: ",
                          [Function],
                          ";
  min-width: ",
                          [Function],
                          ";
  height: ",
                          [Function],
                          ";
  padding: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  border-color: ",
                          [Function],
                          ";
",
                          "
  font-size: 18px;
  color: ",
                          [Function],
                          ";
",
                        ],
                      },
                      "defaultProps": Object {
                        "active": false,
                        "block": false,
                        "disabled": false,
                        "kind": "primary",
                        "round": false,
                        "size": "normal",
                        "square": false,
                      },
                      "displayName": "styled-components__StyledButton",
                      "foldedComponentIds": Array [
                        "Button-sc-4bw22c-0",
                      ],
                      "propTypes": Object {
                        "active": [Function],
                        "block": [Function],
                        "disabled": [Function],
                        "kind": [Function],
                        "round": [Function],
                        "size": [Function],
                        "square": [Function],
                      },
                      "render": [Function],
                      "styledComponentId": "styled-components__StyledButton-sc-1vavxcc-3",
                      "target": "button",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  kind="primary"
                  onClick={[Function]}
                  round={false}
                  size="normal"
                  square={true}
                >
                  <button
                    className="c2"
                    disabled={false}
                    kind="primary"
                    onClick={[Function]}
                    size="normal"
                  >
                    <Rotate
                      active={false}
                    >
                      <StyledComponent
                        active={false}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Rotate-sc-7d7mt1-0",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "
  line-height: 0;

  > * {
    transform-origin: center;
    transition: transform 0.4s cubic-bezier(0.68, -0.55, 0.27, 1.55);
    transform: ",
                                [Function],
                                ";
  }
",
                              ],
                            },
                            "defaultProps": Object {
                              "active": false,
                            },
                            "displayName": "Rotate",
                            "foldedComponentIds": Array [],
                            "propTypes": Object {
                              "active": [Function],
                            },
                            "render": [Function],
                            "styledComponentId": "Rotate-sc-7d7mt1-0",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c3"
                        >
                          <IconFold>
                            <svg
                              fill="currentColor"
                              height="1em"
                              viewBox="0 0 24 24"
                              width="1em"
                            >
                              <path
                                d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z"
                              />
                            </svg>
                          </IconFold>
                        </div>
                      </StyledComponent>
                    </Rotate>
                  </button>
                </StyledComponent>
              </styled-components__StyledButton>
            </div>
          </StyledComponent>
        </styled-components__StyledInputGroup>
      </div>
    </PureInputSelect>
  </InputSelect>
</div>
`;

exports[`Storyshots InputSelect Controlled API 1`] = `
.c1 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c1:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c1::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3 {
  line-height: 0;
}

.c3 > * {
  -webkit-transform-origin: center;
  -ms-transform-origin: center;
  transform-origin: center;
  -webkit-transition: -webkit-transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transform: initial;
  -ms-transform: initial;
  transform: initial;
}

.c2 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(0,130,179);
  font-size: 18px;
  color: #FFFFFF;
}

.c2:hover {
  background-color: rgb(0,151,208);
}

.c2:active {
  background-color: rgb(0,144,198);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c0 > button {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > *:first-child {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:not(:first-child):not(:last-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:last-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c0 > span {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  padding: 0 5px;
  min-height: 32px;
  min-width: 32px;
  border-radius: 3px;
  border: 1px solid #D1D2D3;
  background-color: #FFFFFF;
  color: #999A94;
}

.c0 > * + span {
  border-left-width: 0;
}

.c0 > * + span:not(:last-child) {
  border-right-width: 0;
}

.c0 > span:first-child {
  border-right-width: 0;
}

.c0 > span:last-child {
  border-left-width: 0;
}

<div
  style={
    Object {
      "width": 500,
    }
  }
>
  <InputSelect
    items={
      Array [
        Object {
          "children": "children 1",
          "value": 1,
        },
        Object {
          "children": "children children children 2",
          "value": 2,
        },
        Object {
          "children": "children 3",
          "value": 3,
        },
        Object {
          "children": "children 4",
          "value": 4,
        },
        Object {
          "children": "5",
          "value": 5,
        },
        Object {
          "children": "children 6",
          "value": 6,
        },
        Object {
          "children": "children children 7",
          "value": 7,
        },
        Object {
          "children": "children 8",
          "value": 8,
        },
        Object {
          "children": "children 9",
          "value": 9,
        },
        Object {
          "children": "children children children 10",
          "value": 10,
        },
        Object {
          "children": "children 11",
          "value": 11,
        },
        Object {
          "children": "12",
          "value": 12,
        },
        Object {
          "children": "13",
          "value": 13,
        },
      ]
    }
    onChange={[Function]}
    value={11}
  >
    <PureInputSelect
      disableFilter={false}
      itemValueMapper={[Function]}
      items={
        Array [
          Object {
            "children": "children 1",
            "value": 1,
          },
          Object {
            "children": "children children children 2",
            "value": 2,
          },
          Object {
            "children": "children 3",
            "value": 3,
          },
          Object {
            "children": "children 4",
            "value": 4,
          },
          Object {
            "children": "5",
            "value": 5,
          },
          Object {
            "children": "children 6",
            "value": 6,
          },
          Object {
            "children": "children children 7",
            "value": 7,
          },
          Object {
            "children": "children 8",
            "value": 8,
          },
          Object {
            "children": "children 9",
            "value": 9,
          },
          Object {
            "children": "children children children 10",
            "value": 10,
          },
          Object {
            "children": "children 11",
            "value": 11,
          },
          Object {
            "children": "12",
            "value": 12,
          },
          Object {
            "children": "13",
            "value": 13,
          },
        ]
      }
      kind="primary"
      noRowsRenderer={[Function]}
      onChange={[Function]}
      theme={
        Object {
          "base": Object {
            "bodyBackgroundColor": "#F1F2F7",
            "bodyColor": "#353630",
            "fontSize": "13px",
            "lineHeight": 1.5,
          },
          "color": Object {
            "black": "#353630",
            "default": "#FAFAFA",
            "error": "#F5364E",
            "grayBase": "#D1D2D3",
            "grayDark": "#999A94",
            "grayLight": "#FAFAFA",
            "primary": "#00A1DE",
            "success": "#69BE28",
            "warning": "#F39A1E",
            "white": "#FFFFFF",
          },
          "fontSize": Object {
            "h1": "2.46rem",
            "h2": "1.69rem",
            "h3": "1.38rem",
            "h4": "1.15rem",
            "h5": "1rem",
            "h6": "1rem",
            "p": "1rem",
            "small": "0.923rem",
          },
          "height": Object {
            "header": "50px",
            "normal": "32px",
            "small": "20px",
          },
          "mobile": Object {
            "headerHeight": "56px",
            "maxWidth": "800px",
          },
        }
      }
      value={11}
    >
      <div>
        <styled-components__StyledInputGroup
          disableFilter={false}
        >
          <StyledComponent
            disableFilter={false}
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "styled-components__StyledInputGroup-rj6hz5-1",
                  "isStatic": false,
                  "lastClassName": "c0",
                  "rules": Array [
                    "
  display: flex;

  > button {
    flex-shrink: 0;
  }

  /* ============================
   * First Child
   * ============================
   */

  > *:first-child {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  /* ============================
   * Middle Child
   * ============================
   */

  > *:not(:first-child):not(:last-child) {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  /* ============================
   * Last Child
   * ============================
   */

  > *:last-child {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }

  /**
   * Unit
   */

  > span {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    padding: 0 5px;
    min-height: ",
                    [Function],
                    ";
    min-width: ",
                    [Function],
                    ";
    border-radius: 3px;
    border: 1px solid ",
                    [Function],
                    ";
    background-color: ",
                    [Function],
                    ";
    color: ",
                    [Function],
                    ";
  }
  > * + span {
    border-left-width: 0;
  }
  > * + span:not(:last-child) {
    border-right-width: 0;
  }
  > span:first-child {
    border-right-width: 0;
  }
  > span:last-child {
    border-left-width: 0;
  }
",
                    "
  position: relative;

  > * {
    ",
                    [Function],
                    ";
  }
",
                  ],
                },
                "displayName": "styled-components__StyledInputGroup",
                "foldedComponentIds": Array [
                  "InputGroup-clww0l-0",
                ],
                "render": [Function],
                "styledComponentId": "styled-components__StyledInputGroup-rj6hz5-1",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={
              Object {
                "current": .c1 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c1:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c1::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3 {
  line-height: 0;
}

.c3 > * {
  -webkit-transform-origin: center;
  -ms-transform-origin: center;
  transform-origin: center;
  -webkit-transition: -webkit-transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transform: initial;
  -ms-transform: initial;
  transform: initial;
}

.c2 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(0,130,179);
  font-size: 18px;
  color: #FFFFFF;
}

.c2:hover {
  background-color: rgb(0,151,208);
}

.c2:active {
  background-color: rgb(0,144,198);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c0 > button {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > *:first-child {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:not(:first-child):not(:last-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:last-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c0 > span {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  padding: 0 5px;
  min-height: 32px;
  min-width: 32px;
  border-radius: 3px;
  border: 1px solid #D1D2D3;
  background-color: #FFFFFF;
  color: #999A94;
}

.c0 > * + span {
  border-left-width: 0;
}

.c0 > * + span:not(:last-child) {
  border-right-width: 0;
}

.c0 > span:first-child {
  border-right-width: 0;
}

.c0 > span:last-child {
  border-left-width: 0;
}

<div
                  class="c0"
                >
                  <input
                    autocomplete="off"
                    class="c1"
                    kind="primary"
                    placeholder=""
                    value="children 11"
                  />
                  <button
                    class="c2"
                    kind="primary"
                  >
                    <div
                      class="c3"
                    >
                      <svg
                        fill="currentColor"
                        height="1em"
                        viewBox="0 0 24 24"
                        width="1em"
                      >
                        <path
                          d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z"
                        />
                      </svg>
                    </div>
                  </button>
                </div>,
              }
            }
          >
            <div
              className="c0"
            >
              <Input
                autoComplete="off"
                focus={false}
                kind="primary"
                onChange={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                placeholder=""
                readOnly={false}
                value="children 11"
              >
                <StyledComponent
                  autoComplete="off"
                  focus={false}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "Input-a7ignf-0",
                        "isStatic": false,
                        "lastClassName": "c1",
                        "rules": Array [
                          "
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: ",
                          [Function],
                          ";
  color: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  border-color: ",
                          [Function],
                          ";
  box-shadow: ",
                          [Function],
                          ";

  &:focus {
    border-color: ",
                          [Function],
                          ";
    box-shadow: 0 0 3px 0
      ",
                          [Function],
                          ";
  }

  &::placeholder {
    opacity: 1;
    color: ",
                          [Function],
                          ";
  }
",
                        ],
                      },
                      "defaultProps": Object {
                        "focus": false,
                        "kind": "primary",
                      },
                      "displayName": "Input",
                      "foldedComponentIds": Array [],
                      "propTypes": Object {
                        "focus": [Function],
                        "kind": [Function],
                      },
                      "render": [Function],
                      "styledComponentId": "Input-a7ignf-0",
                      "target": "input",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={
                    Object {
                      "current": <input
                        autocomplete="off"
                        class="c1"
                        kind="primary"
                        placeholder=""
                        value="children 11"
                      />,
                    }
                  }
                  kind="primary"
                  onChange={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  placeholder=""
                  readOnly={false}
                  value="children 11"
                >
                  <input
                    autoComplete="off"
                    className="c1"
                    kind="primary"
                    onChange={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    placeholder=""
                    readOnly={false}
                    value="children 11"
                  />
                </StyledComponent>
              </Input>
              <styled-components__StyledButton
                active={false}
                block={false}
                disabled={false}
                kind="primary"
                onClick={[Function]}
                round={false}
                size="normal"
                square={true}
              >
                <StyledComponent
                  active={false}
                  block={false}
                  disabled={false}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled-components__StyledButton-sc-1vavxcc-3",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  transition: background-color cubic-bezier(0.47, 0, 0.75, 0.72) 0.3s;
  line-height: 0;
  cursor: ",
                          [Function],
                          ";

  &:hover {
    background-color: ",
                          [Function],
                          ";
  }

  &:active {
    background-color: ",
                          [Function],
                          ";
  }

  background-color: ",
                          [Function],
                          ";
  color: ",
                          [Function],
                          ";
  border-radius: ",
                          [Function],
                          ";
  width: ",
                          [Function],
                          ";
  min-width: ",
                          [Function],
                          ";
  height: ",
                          [Function],
                          ";
  padding: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  border-color: ",
                          [Function],
                          ";
",
                          "
  font-size: 18px;
  color: ",
                          [Function],
                          ";
",
                        ],
                      },
                      "defaultProps": Object {
                        "active": false,
                        "block": false,
                        "disabled": false,
                        "kind": "primary",
                        "round": false,
                        "size": "normal",
                        "square": false,
                      },
                      "displayName": "styled-components__StyledButton",
                      "foldedComponentIds": Array [
                        "Button-sc-4bw22c-0",
                      ],
                      "propTypes": Object {
                        "active": [Function],
                        "block": [Function],
                        "disabled": [Function],
                        "kind": [Function],
                        "round": [Function],
                        "size": [Function],
                        "square": [Function],
                      },
                      "render": [Function],
                      "styledComponentId": "styled-components__StyledButton-sc-1vavxcc-3",
                      "target": "button",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  kind="primary"
                  onClick={[Function]}
                  round={false}
                  size="normal"
                  square={true}
                >
                  <button
                    className="c2"
                    disabled={false}
                    kind="primary"
                    onClick={[Function]}
                    size="normal"
                  >
                    <Rotate
                      active={false}
                    >
                      <StyledComponent
                        active={false}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Rotate-sc-7d7mt1-0",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "
  line-height: 0;

  > * {
    transform-origin: center;
    transition: transform 0.4s cubic-bezier(0.68, -0.55, 0.27, 1.55);
    transform: ",
                                [Function],
                                ";
  }
",
                              ],
                            },
                            "defaultProps": Object {
                              "active": false,
                            },
                            "displayName": "Rotate",
                            "foldedComponentIds": Array [],
                            "propTypes": Object {
                              "active": [Function],
                            },
                            "render": [Function],
                            "styledComponentId": "Rotate-sc-7d7mt1-0",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c3"
                        >
                          <IconFold>
                            <svg
                              fill="currentColor"
                              height="1em"
                              viewBox="0 0 24 24"
                              width="1em"
                            >
                              <path
                                d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z"
                              />
                            </svg>
                          </IconFold>
                        </div>
                      </StyledComponent>
                    </Rotate>
                  </button>
                </StyledComponent>
              </styled-components__StyledButton>
            </div>
          </StyledComponent>
        </styled-components__StyledInputGroup>
      </div>
    </PureInputSelect>
  </InputSelect>
</div>
`;

exports[`Storyshots InputSelect With 150 items 1`] = `
.c1 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c1:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c1::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3 {
  line-height: 0;
}

.c3 > * {
  -webkit-transform-origin: center;
  -ms-transform-origin: center;
  transform-origin: center;
  -webkit-transition: -webkit-transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transform: initial;
  -ms-transform: initial;
  transform: initial;
}

.c2 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(0,130,179);
  font-size: 18px;
  color: #FFFFFF;
}

.c2:hover {
  background-color: rgb(0,151,208);
}

.c2:active {
  background-color: rgb(0,144,198);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c0 > button {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > *:first-child {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:not(:first-child):not(:last-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:last-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c0 > span {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  padding: 0 5px;
  min-height: 32px;
  min-width: 32px;
  border-radius: 3px;
  border: 1px solid #D1D2D3;
  background-color: #FFFFFF;
  color: #999A94;
}

.c0 > * + span {
  border-left-width: 0;
}

.c0 > * + span:not(:last-child) {
  border-right-width: 0;
}

.c0 > span:first-child {
  border-right-width: 0;
}

.c0 > span:last-child {
  border-left-width: 0;
}

<InputSelect
  items={
    Array [
      Object {
        "children": "item 1",
        "value": 1,
      },
      Object {
        "children": "item 2",
        "value": 2,
      },
      Object {
        "children": "item 3",
        "value": 3,
      },
      Object {
        "children": "item 4",
        "value": 4,
      },
      Object {
        "children": "item 5",
        "value": 5,
      },
      Object {
        "children": "item 6",
        "value": 6,
      },
      Object {
        "children": "item 7",
        "value": 7,
      },
      Object {
        "children": "item 8",
        "value": 8,
      },
      Object {
        "children": "item 9",
        "value": 9,
      },
      Object {
        "children": "item 10",
        "value": 10,
      },
      Object {
        "children": "item 11",
        "value": 11,
      },
      Object {
        "children": "item 12",
        "value": 12,
      },
      Object {
        "children": "item 13",
        "value": 13,
      },
      Object {
        "children": "item 14",
        "value": 14,
      },
      Object {
        "children": "item 15",
        "value": 15,
      },
      Object {
        "children": "item 16",
        "value": 16,
      },
      Object {
        "children": "item 17",
        "value": 17,
      },
      Object {
        "children": "item 18",
        "value": 18,
      },
      Object {
        "children": "item 19",
        "value": 19,
      },
      Object {
        "children": "item 20",
        "value": 20,
      },
      Object {
        "children": "item 21",
        "value": 21,
      },
      Object {
        "children": "item 22",
        "value": 22,
      },
      Object {
        "children": "item 23",
        "value": 23,
      },
      Object {
        "children": "item 24",
        "value": 24,
      },
      Object {
        "children": "item 25",
        "value": 25,
      },
      Object {
        "children": "item 26",
        "value": 26,
      },
      Object {
        "children": "item 27",
        "value": 27,
      },
      Object {
        "children": "item 28",
        "value": 28,
      },
      Object {
        "children": "item 29",
        "value": 29,
      },
      Object {
        "children": "item 30",
        "value": 30,
      },
      Object {
        "children": "item 31",
        "value": 31,
      },
      Object {
        "children": "item 32",
        "value": 32,
      },
      Object {
        "children": "item 33",
        "value": 33,
      },
      Object {
        "children": "item 34",
        "value": 34,
      },
      Object {
        "children": "item 35",
        "value": 35,
      },
      Object {
        "children": "item 36",
        "value": 36,
      },
      Object {
        "children": "item 37",
        "value": 37,
      },
      Object {
        "children": "item 38",
        "value": 38,
      },
      Object {
        "children": "item 39",
        "value": 39,
      },
      Object {
        "children": "item 40",
        "value": 40,
      },
      Object {
        "children": "item 41",
        "value": 41,
      },
      Object {
        "children": "item 42",
        "value": 42,
      },
      Object {
        "children": "item 43",
        "value": 43,
      },
      Object {
        "children": "item 44",
        "value": 44,
      },
      Object {
        "children": "item 45",
        "value": 45,
      },
      Object {
        "children": "item 46",
        "value": 46,
      },
      Object {
        "children": "item 47",
        "value": 47,
      },
      Object {
        "children": "item 48",
        "value": 48,
      },
      Object {
        "children": "item 49",
        "value": 49,
      },
      Object {
        "children": "item 50",
        "value": 50,
      },
      Object {
        "children": "item 51",
        "value": 51,
      },
      Object {
        "children": "item 52",
        "value": 52,
      },
      Object {
        "children": "item 53",
        "value": 53,
      },
      Object {
        "children": "item 54",
        "value": 54,
      },
      Object {
        "children": "item 55",
        "value": 55,
      },
      Object {
        "children": "item 56",
        "value": 56,
      },
      Object {
        "children": "item 57",
        "value": 57,
      },
      Object {
        "children": "item 58",
        "value": 58,
      },
      Object {
        "children": "item 59",
        "value": 59,
      },
      Object {
        "children": "item 60",
        "value": 60,
      },
      Object {
        "children": "item 61",
        "value": 61,
      },
      Object {
        "children": "item 62",
        "value": 62,
      },
      Object {
        "children": "item 63",
        "value": 63,
      },
      Object {
        "children": "item 64",
        "value": 64,
      },
      Object {
        "children": "item 65",
        "value": 65,
      },
      Object {
        "children": "item 66",
        "value": 66,
      },
      Object {
        "children": "item 67",
        "value": 67,
      },
      Object {
        "children": "item 68",
        "value": 68,
      },
      Object {
        "children": "item 69",
        "value": 69,
      },
      Object {
        "children": "item 70",
        "value": 70,
      },
      Object {
        "children": "item 71",
        "value": 71,
      },
      Object {
        "children": "item 72",
        "value": 72,
      },
      Object {
        "children": "item 73",
        "value": 73,
      },
      Object {
        "children": "item 74",
        "value": 74,
      },
      Object {
        "children": "item 75",
        "value": 75,
      },
      Object {
        "children": "item 76",
        "value": 76,
      },
      Object {
        "children": "item 77",
        "value": 77,
      },
      Object {
        "children": "item 78",
        "value": 78,
      },
      Object {
        "children": "item 79",
        "value": 79,
      },
      Object {
        "children": "item 80",
        "value": 80,
      },
      Object {
        "children": "item 81",
        "value": 81,
      },
      Object {
        "children": "item 82",
        "value": 82,
      },
      Object {
        "children": "item 83",
        "value": 83,
      },
      Object {
        "children": "item 84",
        "value": 84,
      },
      Object {
        "children": "item 85",
        "value": 85,
      },
      Object {
        "children": "item 86",
        "value": 86,
      },
      Object {
        "children": "item 87",
        "value": 87,
      },
      Object {
        "children": "item 88",
        "value": 88,
      },
      Object {
        "children": "item 89",
        "value": 89,
      },
      Object {
        "children": "item 90",
        "value": 90,
      },
      Object {
        "children": "item 91",
        "value": 91,
      },
      Object {
        "children": "item 92",
        "value": 92,
      },
      Object {
        "children": "item 93",
        "value": 93,
      },
      Object {
        "children": "item 94",
        "value": 94,
      },
      Object {
        "children": "item 95",
        "value": 95,
      },
      Object {
        "children": "item 96",
        "value": 96,
      },
      Object {
        "children": "item 97",
        "value": 97,
      },
      Object {
        "children": "item 98",
        "value": 98,
      },
      Object {
        "children": "item 99",
        "value": 99,
      },
      Object {
        "children": "item 100",
        "value": 100,
      },
      Object {
        "children": "item 101",
        "value": 101,
      },
      Object {
        "children": "item 102",
        "value": 102,
      },
      Object {
        "children": "item 103",
        "value": 103,
      },
      Object {
        "children": "item 104",
        "value": 104,
      },
      Object {
        "children": "item 105",
        "value": 105,
      },
      Object {
        "children": "item 106",
        "value": 106,
      },
      Object {
        "children": "item 107",
        "value": 107,
      },
      Object {
        "children": "item 108",
        "value": 108,
      },
      Object {
        "children": "item 109",
        "value": 109,
      },
      Object {
        "children": "item 110",
        "value": 110,
      },
      Object {
        "children": "item 111",
        "value": 111,
      },
      Object {
        "children": "item 112",
        "value": 112,
      },
      Object {
        "children": "item 113",
        "value": 113,
      },
      Object {
        "children": "item 114",
        "value": 114,
      },
      Object {
        "children": "item 115",
        "value": 115,
      },
      Object {
        "children": "item 116",
        "value": 116,
      },
      Object {
        "children": "item 117",
        "value": 117,
      },
      Object {
        "children": "item 118",
        "value": 118,
      },
      Object {
        "children": "item 119",
        "value": 119,
      },
      Object {
        "children": "item 120",
        "value": 120,
      },
      Object {
        "children": "item 121",
        "value": 121,
      },
      Object {
        "children": "item 122",
        "value": 122,
      },
      Object {
        "children": "item 123",
        "value": 123,
      },
      Object {
        "children": "item 124",
        "value": 124,
      },
      Object {
        "children": "item 125",
        "value": 125,
      },
      Object {
        "children": "item 126",
        "value": 126,
      },
      Object {
        "children": "item 127",
        "value": 127,
      },
      Object {
        "children": "item 128",
        "value": 128,
      },
      Object {
        "children": "item 129",
        "value": 129,
      },
      Object {
        "children": "item 130",
        "value": 130,
      },
      Object {
        "children": "item 131",
        "value": 131,
      },
      Object {
        "children": "item 132",
        "value": 132,
      },
      Object {
        "children": "item 133",
        "value": 133,
      },
      Object {
        "children": "item 134",
        "value": 134,
      },
      Object {
        "children": "item 135",
        "value": 135,
      },
      Object {
        "children": "item 136",
        "value": 136,
      },
      Object {
        "children": "item 137",
        "value": 137,
      },
      Object {
        "children": "item 138",
        "value": 138,
      },
      Object {
        "children": "item 139",
        "value": 139,
      },
      Object {
        "children": "item 140",
        "value": 140,
      },
      Object {
        "children": "item 141",
        "value": 141,
      },
      Object {
        "children": "item 142",
        "value": 142,
      },
      Object {
        "children": "item 143",
        "value": 143,
      },
      Object {
        "children": "item 144",
        "value": 144,
      },
      Object {
        "children": "item 145",
        "value": 145,
      },
      Object {
        "children": "item 146",
        "value": 146,
      },
      Object {
        "children": "item 147",
        "value": 147,
      },
      Object {
        "children": "item 148",
        "value": 148,
      },
      Object {
        "children": "item 149",
        "value": 149,
      },
    ]
  }
  onChange={[Function]}
  value={71}
>
  <PureInputSelect
    disableFilter={false}
    itemValueMapper={[Function]}
    items={
      Array [
        Object {
          "children": "item 1",
          "value": 1,
        },
        Object {
          "children": "item 2",
          "value": 2,
        },
        Object {
          "children": "item 3",
          "value": 3,
        },
        Object {
          "children": "item 4",
          "value": 4,
        },
        Object {
          "children": "item 5",
          "value": 5,
        },
        Object {
          "children": "item 6",
          "value": 6,
        },
        Object {
          "children": "item 7",
          "value": 7,
        },
        Object {
          "children": "item 8",
          "value": 8,
        },
        Object {
          "children": "item 9",
          "value": 9,
        },
        Object {
          "children": "item 10",
          "value": 10,
        },
        Object {
          "children": "item 11",
          "value": 11,
        },
        Object {
          "children": "item 12",
          "value": 12,
        },
        Object {
          "children": "item 13",
          "value": 13,
        },
        Object {
          "children": "item 14",
          "value": 14,
        },
        Object {
          "children": "item 15",
          "value": 15,
        },
        Object {
          "children": "item 16",
          "value": 16,
        },
        Object {
          "children": "item 17",
          "value": 17,
        },
        Object {
          "children": "item 18",
          "value": 18,
        },
        Object {
          "children": "item 19",
          "value": 19,
        },
        Object {
          "children": "item 20",
          "value": 20,
        },
        Object {
          "children": "item 21",
          "value": 21,
        },
        Object {
          "children": "item 22",
          "value": 22,
        },
        Object {
          "children": "item 23",
          "value": 23,
        },
        Object {
          "children": "item 24",
          "value": 24,
        },
        Object {
          "children": "item 25",
          "value": 25,
        },
        Object {
          "children": "item 26",
          "value": 26,
        },
        Object {
          "children": "item 27",
          "value": 27,
        },
        Object {
          "children": "item 28",
          "value": 28,
        },
        Object {
          "children": "item 29",
          "value": 29,
        },
        Object {
          "children": "item 30",
          "value": 30,
        },
        Object {
          "children": "item 31",
          "value": 31,
        },
        Object {
          "children": "item 32",
          "value": 32,
        },
        Object {
          "children": "item 33",
          "value": 33,
        },
        Object {
          "children": "item 34",
          "value": 34,
        },
        Object {
          "children": "item 35",
          "value": 35,
        },
        Object {
          "children": "item 36",
          "value": 36,
        },
        Object {
          "children": "item 37",
          "value": 37,
        },
        Object {
          "children": "item 38",
          "value": 38,
        },
        Object {
          "children": "item 39",
          "value": 39,
        },
        Object {
          "children": "item 40",
          "value": 40,
        },
        Object {
          "children": "item 41",
          "value": 41,
        },
        Object {
          "children": "item 42",
          "value": 42,
        },
        Object {
          "children": "item 43",
          "value": 43,
        },
        Object {
          "children": "item 44",
          "value": 44,
        },
        Object {
          "children": "item 45",
          "value": 45,
        },
        Object {
          "children": "item 46",
          "value": 46,
        },
        Object {
          "children": "item 47",
          "value": 47,
        },
        Object {
          "children": "item 48",
          "value": 48,
        },
        Object {
          "children": "item 49",
          "value": 49,
        },
        Object {
          "children": "item 50",
          "value": 50,
        },
        Object {
          "children": "item 51",
          "value": 51,
        },
        Object {
          "children": "item 52",
          "value": 52,
        },
        Object {
          "children": "item 53",
          "value": 53,
        },
        Object {
          "children": "item 54",
          "value": 54,
        },
        Object {
          "children": "item 55",
          "value": 55,
        },
        Object {
          "children": "item 56",
          "value": 56,
        },
        Object {
          "children": "item 57",
          "value": 57,
        },
        Object {
          "children": "item 58",
          "value": 58,
        },
        Object {
          "children": "item 59",
          "value": 59,
        },
        Object {
          "children": "item 60",
          "value": 60,
        },
        Object {
          "children": "item 61",
          "value": 61,
        },
        Object {
          "children": "item 62",
          "value": 62,
        },
        Object {
          "children": "item 63",
          "value": 63,
        },
        Object {
          "children": "item 64",
          "value": 64,
        },
        Object {
          "children": "item 65",
          "value": 65,
        },
        Object {
          "children": "item 66",
          "value": 66,
        },
        Object {
          "children": "item 67",
          "value": 67,
        },
        Object {
          "children": "item 68",
          "value": 68,
        },
        Object {
          "children": "item 69",
          "value": 69,
        },
        Object {
          "children": "item 70",
          "value": 70,
        },
        Object {
          "children": "item 71",
          "value": 71,
        },
        Object {
          "children": "item 72",
          "value": 72,
        },
        Object {
          "children": "item 73",
          "value": 73,
        },
        Object {
          "children": "item 74",
          "value": 74,
        },
        Object {
          "children": "item 75",
          "value": 75,
        },
        Object {
          "children": "item 76",
          "value": 76,
        },
        Object {
          "children": "item 77",
          "value": 77,
        },
        Object {
          "children": "item 78",
          "value": 78,
        },
        Object {
          "children": "item 79",
          "value": 79,
        },
        Object {
          "children": "item 80",
          "value": 80,
        },
        Object {
          "children": "item 81",
          "value": 81,
        },
        Object {
          "children": "item 82",
          "value": 82,
        },
        Object {
          "children": "item 83",
          "value": 83,
        },
        Object {
          "children": "item 84",
          "value": 84,
        },
        Object {
          "children": "item 85",
          "value": 85,
        },
        Object {
          "children": "item 86",
          "value": 86,
        },
        Object {
          "children": "item 87",
          "value": 87,
        },
        Object {
          "children": "item 88",
          "value": 88,
        },
        Object {
          "children": "item 89",
          "value": 89,
        },
        Object {
          "children": "item 90",
          "value": 90,
        },
        Object {
          "children": "item 91",
          "value": 91,
        },
        Object {
          "children": "item 92",
          "value": 92,
        },
        Object {
          "children": "item 93",
          "value": 93,
        },
        Object {
          "children": "item 94",
          "value": 94,
        },
        Object {
          "children": "item 95",
          "value": 95,
        },
        Object {
          "children": "item 96",
          "value": 96,
        },
        Object {
          "children": "item 97",
          "value": 97,
        },
        Object {
          "children": "item 98",
          "value": 98,
        },
        Object {
          "children": "item 99",
          "value": 99,
        },
        Object {
          "children": "item 100",
          "value": 100,
        },
        Object {
          "children": "item 101",
          "value": 101,
        },
        Object {
          "children": "item 102",
          "value": 102,
        },
        Object {
          "children": "item 103",
          "value": 103,
        },
        Object {
          "children": "item 104",
          "value": 104,
        },
        Object {
          "children": "item 105",
          "value": 105,
        },
        Object {
          "children": "item 106",
          "value": 106,
        },
        Object {
          "children": "item 107",
          "value": 107,
        },
        Object {
          "children": "item 108",
          "value": 108,
        },
        Object {
          "children": "item 109",
          "value": 109,
        },
        Object {
          "children": "item 110",
          "value": 110,
        },
        Object {
          "children": "item 111",
          "value": 111,
        },
        Object {
          "children": "item 112",
          "value": 112,
        },
        Object {
          "children": "item 113",
          "value": 113,
        },
        Object {
          "children": "item 114",
          "value": 114,
        },
        Object {
          "children": "item 115",
          "value": 115,
        },
        Object {
          "children": "item 116",
          "value": 116,
        },
        Object {
          "children": "item 117",
          "value": 117,
        },
        Object {
          "children": "item 118",
          "value": 118,
        },
        Object {
          "children": "item 119",
          "value": 119,
        },
        Object {
          "children": "item 120",
          "value": 120,
        },
        Object {
          "children": "item 121",
          "value": 121,
        },
        Object {
          "children": "item 122",
          "value": 122,
        },
        Object {
          "children": "item 123",
          "value": 123,
        },
        Object {
          "children": "item 124",
          "value": 124,
        },
        Object {
          "children": "item 125",
          "value": 125,
        },
        Object {
          "children": "item 126",
          "value": 126,
        },
        Object {
          "children": "item 127",
          "value": 127,
        },
        Object {
          "children": "item 128",
          "value": 128,
        },
        Object {
          "children": "item 129",
          "value": 129,
        },
        Object {
          "children": "item 130",
          "value": 130,
        },
        Object {
          "children": "item 131",
          "value": 131,
        },
        Object {
          "children": "item 132",
          "value": 132,
        },
        Object {
          "children": "item 133",
          "value": 133,
        },
        Object {
          "children": "item 134",
          "value": 134,
        },
        Object {
          "children": "item 135",
          "value": 135,
        },
        Object {
          "children": "item 136",
          "value": 136,
        },
        Object {
          "children": "item 137",
          "value": 137,
        },
        Object {
          "children": "item 138",
          "value": 138,
        },
        Object {
          "children": "item 139",
          "value": 139,
        },
        Object {
          "children": "item 140",
          "value": 140,
        },
        Object {
          "children": "item 141",
          "value": 141,
        },
        Object {
          "children": "item 142",
          "value": 142,
        },
        Object {
          "children": "item 143",
          "value": 143,
        },
        Object {
          "children": "item 144",
          "value": 144,
        },
        Object {
          "children": "item 145",
          "value": 145,
        },
        Object {
          "children": "item 146",
          "value": 146,
        },
        Object {
          "children": "item 147",
          "value": 147,
        },
        Object {
          "children": "item 148",
          "value": 148,
        },
        Object {
          "children": "item 149",
          "value": 149,
        },
      ]
    }
    kind="primary"
    noRowsRenderer={[Function]}
    onChange={[Function]}
    theme={
      Object {
        "base": Object {
          "bodyBackgroundColor": "#F1F2F7",
          "bodyColor": "#353630",
          "fontSize": "13px",
          "lineHeight": 1.5,
        },
        "color": Object {
          "black": "#353630",
          "default": "#FAFAFA",
          "error": "#F5364E",
          "grayBase": "#D1D2D3",
          "grayDark": "#999A94",
          "grayLight": "#FAFAFA",
          "primary": "#00A1DE",
          "success": "#69BE28",
          "warning": "#F39A1E",
          "white": "#FFFFFF",
        },
        "fontSize": Object {
          "h1": "2.46rem",
          "h2": "1.69rem",
          "h3": "1.38rem",
          "h4": "1.15rem",
          "h5": "1rem",
          "h6": "1rem",
          "p": "1rem",
          "small": "0.923rem",
        },
        "height": Object {
          "header": "50px",
          "normal": "32px",
          "small": "20px",
        },
        "mobile": Object {
          "headerHeight": "56px",
          "maxWidth": "800px",
        },
      }
    }
    value={71}
  >
    <div>
      <styled-components__StyledInputGroup
        disableFilter={false}
      >
        <StyledComponent
          disableFilter={false}
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "styled-components__StyledInputGroup-rj6hz5-1",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "
  display: flex;

  > button {
    flex-shrink: 0;
  }

  /* ============================
   * First Child
   * ============================
   */

  > *:first-child {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  /* ============================
   * Middle Child
   * ============================
   */

  > *:not(:first-child):not(:last-child) {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  /* ============================
   * Last Child
   * ============================
   */

  > *:last-child {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }

  /**
   * Unit
   */

  > span {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    padding: 0 5px;
    min-height: ",
                  [Function],
                  ";
    min-width: ",
                  [Function],
                  ";
    border-radius: 3px;
    border: 1px solid ",
                  [Function],
                  ";
    background-color: ",
                  [Function],
                  ";
    color: ",
                  [Function],
                  ";
  }
  > * + span {
    border-left-width: 0;
  }
  > * + span:not(:last-child) {
    border-right-width: 0;
  }
  > span:first-child {
    border-right-width: 0;
  }
  > span:last-child {
    border-left-width: 0;
  }
",
                  "
  position: relative;

  > * {
    ",
                  [Function],
                  ";
  }
",
                ],
              },
              "displayName": "styled-components__StyledInputGroup",
              "foldedComponentIds": Array [
                "InputGroup-clww0l-0",
              ],
              "render": [Function],
              "styledComponentId": "styled-components__StyledInputGroup-rj6hz5-1",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={
            Object {
              "current": .c1 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c1:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c1::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3 {
  line-height: 0;
}

.c3 > * {
  -webkit-transform-origin: center;
  -ms-transform-origin: center;
  transform-origin: center;
  -webkit-transition: -webkit-transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transform: initial;
  -ms-transform: initial;
  transform: initial;
}

.c2 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(0,130,179);
  font-size: 18px;
  color: #FFFFFF;
}

.c2:hover {
  background-color: rgb(0,151,208);
}

.c2:active {
  background-color: rgb(0,144,198);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c0 > button {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > *:first-child {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:not(:first-child):not(:last-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:last-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c0 > span {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  padding: 0 5px;
  min-height: 32px;
  min-width: 32px;
  border-radius: 3px;
  border: 1px solid #D1D2D3;
  background-color: #FFFFFF;
  color: #999A94;
}

.c0 > * + span {
  border-left-width: 0;
}

.c0 > * + span:not(:last-child) {
  border-right-width: 0;
}

.c0 > span:first-child {
  border-right-width: 0;
}

.c0 > span:last-child {
  border-left-width: 0;
}

<div
                class="c0"
              >
                <input
                  autocomplete="off"
                  class="c1"
                  kind="primary"
                  placeholder=""
                  value="item 71"
                />
                <button
                  class="c2"
                  kind="primary"
                >
                  <div
                    class="c3"
                  >
                    <svg
                      fill="currentColor"
                      height="1em"
                      viewBox="0 0 24 24"
                      width="1em"
                    >
                      <path
                        d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z"
                      />
                    </svg>
                  </div>
                </button>
              </div>,
            }
          }
        >
          <div
            className="c0"
          >
            <Input
              autoComplete="off"
              focus={false}
              kind="primary"
              onChange={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              placeholder=""
              readOnly={false}
              value="item 71"
            >
              <StyledComponent
                autoComplete="off"
                focus={false}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Input-a7ignf-0",
                      "isStatic": false,
                      "lastClassName": "c1",
                      "rules": Array [
                        "
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: ",
                        [Function],
                        ";
  color: ",
                        [Function],
                        ";
  font-size: ",
                        [Function],
                        ";
  border-color: ",
                        [Function],
                        ";
  box-shadow: ",
                        [Function],
                        ";

  &:focus {
    border-color: ",
                        [Function],
                        ";
    box-shadow: 0 0 3px 0
      ",
                        [Function],
                        ";
  }

  &::placeholder {
    opacity: 1;
    color: ",
                        [Function],
                        ";
  }
",
                      ],
                    },
                    "defaultProps": Object {
                      "focus": false,
                      "kind": "primary",
                    },
                    "displayName": "Input",
                    "foldedComponentIds": Array [],
                    "propTypes": Object {
                      "focus": [Function],
                      "kind": [Function],
                    },
                    "render": [Function],
                    "styledComponentId": "Input-a7ignf-0",
                    "target": "input",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={
                  Object {
                    "current": <input
                      autocomplete="off"
                      class="c1"
                      kind="primary"
                      placeholder=""
                      value="item 71"
                    />,
                  }
                }
                kind="primary"
                onChange={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                placeholder=""
                readOnly={false}
                value="item 71"
              >
                <input
                  autoComplete="off"
                  className="c1"
                  kind="primary"
                  onChange={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  placeholder=""
                  readOnly={false}
                  value="item 71"
                />
              </StyledComponent>
            </Input>
            <styled-components__StyledButton
              active={false}
              block={false}
              disabled={false}
              kind="primary"
              onClick={[Function]}
              round={false}
              size="normal"
              square={true}
            >
              <StyledComponent
                active={false}
                block={false}
                disabled={false}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "styled-components__StyledButton-sc-1vavxcc-3",
                      "isStatic": false,
                      "lastClassName": "c2",
                      "rules": Array [
                        "
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  transition: background-color cubic-bezier(0.47, 0, 0.75, 0.72) 0.3s;
  line-height: 0;
  cursor: ",
                        [Function],
                        ";

  &:hover {
    background-color: ",
                        [Function],
                        ";
  }

  &:active {
    background-color: ",
                        [Function],
                        ";
  }

  background-color: ",
                        [Function],
                        ";
  color: ",
                        [Function],
                        ";
  border-radius: ",
                        [Function],
                        ";
  width: ",
                        [Function],
                        ";
  min-width: ",
                        [Function],
                        ";
  height: ",
                        [Function],
                        ";
  padding: ",
                        [Function],
                        ";
  font-size: ",
                        [Function],
                        ";
  border-color: ",
                        [Function],
                        ";
",
                        "
  font-size: 18px;
  color: ",
                        [Function],
                        ";
",
                      ],
                    },
                    "defaultProps": Object {
                      "active": false,
                      "block": false,
                      "disabled": false,
                      "kind": "primary",
                      "round": false,
                      "size": "normal",
                      "square": false,
                    },
                    "displayName": "styled-components__StyledButton",
                    "foldedComponentIds": Array [
                      "Button-sc-4bw22c-0",
                    ],
                    "propTypes": Object {
                      "active": [Function],
                      "block": [Function],
                      "disabled": [Function],
                      "kind": [Function],
                      "round": [Function],
                      "size": [Function],
                      "square": [Function],
                    },
                    "render": [Function],
                    "styledComponentId": "styled-components__StyledButton-sc-1vavxcc-3",
                    "target": "button",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                kind="primary"
                onClick={[Function]}
                round={false}
                size="normal"
                square={true}
              >
                <button
                  className="c2"
                  disabled={false}
                  kind="primary"
                  onClick={[Function]}
                  size="normal"
                >
                  <Rotate
                    active={false}
                  >
                    <StyledComponent
                      active={false}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "Rotate-sc-7d7mt1-0",
                            "isStatic": false,
                            "lastClassName": "c3",
                            "rules": Array [
                              "
  line-height: 0;

  > * {
    transform-origin: center;
    transition: transform 0.4s cubic-bezier(0.68, -0.55, 0.27, 1.55);
    transform: ",
                              [Function],
                              ";
  }
",
                            ],
                          },
                          "defaultProps": Object {
                            "active": false,
                          },
                          "displayName": "Rotate",
                          "foldedComponentIds": Array [],
                          "propTypes": Object {
                            "active": [Function],
                          },
                          "render": [Function],
                          "styledComponentId": "Rotate-sc-7d7mt1-0",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="c3"
                      >
                        <IconFold>
                          <svg
                            fill="currentColor"
                            height="1em"
                            viewBox="0 0 24 24"
                            width="1em"
                          >
                            <path
                              d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z"
                            />
                          </svg>
                        </IconFold>
                      </div>
                    </StyledComponent>
                  </Rotate>
                </button>
              </StyledComponent>
            </styled-components__StyledButton>
          </div>
        </StyledComponent>
      </styled-components__StyledInputGroup>
    </div>
  </PureInputSelect>
</InputSelect>
`;

exports[`Storyshots InputSelect With autoFocus props 1`] = `
.c1 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c1:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c1::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3 {
  line-height: 0;
}

.c3 > * {
  -webkit-transform-origin: center;
  -ms-transform-origin: center;
  transform-origin: center;
  -webkit-transition: -webkit-transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transform: initial;
  -ms-transform: initial;
  transform: initial;
}

.c2 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(0,130,179);
  font-size: 18px;
  color: #FFFFFF;
}

.c2:hover {
  background-color: rgb(0,151,208);
}

.c2:active {
  background-color: rgb(0,144,198);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c0 > button {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > *:first-child {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:not(:first-child):not(:last-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:last-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c0 > span {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  padding: 0 5px;
  min-height: 32px;
  min-width: 32px;
  border-radius: 3px;
  border: 1px solid #D1D2D3;
  background-color: #FFFFFF;
  color: #999A94;
}

.c0 > * + span {
  border-left-width: 0;
}

.c0 > * + span:not(:last-child) {
  border-right-width: 0;
}

.c0 > span:first-child {
  border-right-width: 0;
}

.c0 > span:last-child {
  border-left-width: 0;
}

<StatefulInputSelect
  autoFocus={true}
  kind="primary"
  placeholder="or filter by device name"
>
  <InputSelect
    autoFocus={true}
    items={
      Array [
        Object {
          "children": "children 1",
          "value": 1,
        },
        Object {
          "children": "children children children 2",
          "value": 2,
        },
        Object {
          "children": "children 3",
          "value": 3,
        },
        Object {
          "children": "children 4",
          "value": 4,
        },
        Object {
          "children": "5",
          "value": 5,
        },
        Object {
          "children": "children 6",
          "value": 6,
        },
        Object {
          "children": "children children 7",
          "value": 7,
        },
        Object {
          "children": "children 8",
          "value": 8,
        },
        Object {
          "children": "children 9",
          "value": 9,
        },
        Object {
          "children": "children children children 10",
          "value": 10,
        },
        Object {
          "children": "children 11",
          "value": 11,
        },
        Object {
          "children": "12",
          "value": 12,
        },
        Object {
          "children": "13",
          "value": 13,
        },
      ]
    }
    kind="primary"
    menuRef={
      Object {
        "current": null,
      }
    }
    onChange={[Function]}
    placeholder="or filter by device name"
    value=""
  >
    <PureInputSelect
      autoFocus={true}
      disableFilter={false}
      itemValueMapper={[Function]}
      items={
        Array [
          Object {
            "children": "children 1",
            "value": 1,
          },
          Object {
            "children": "children children children 2",
            "value": 2,
          },
          Object {
            "children": "children 3",
            "value": 3,
          },
          Object {
            "children": "children 4",
            "value": 4,
          },
          Object {
            "children": "5",
            "value": 5,
          },
          Object {
            "children": "children 6",
            "value": 6,
          },
          Object {
            "children": "children children 7",
            "value": 7,
          },
          Object {
            "children": "children 8",
            "value": 8,
          },
          Object {
            "children": "children 9",
            "value": 9,
          },
          Object {
            "children": "children children children 10",
            "value": 10,
          },
          Object {
            "children": "children 11",
            "value": 11,
          },
          Object {
            "children": "12",
            "value": 12,
          },
          Object {
            "children": "13",
            "value": 13,
          },
        ]
      }
      kind="primary"
      menuRef={
        Object {
          "current": null,
        }
      }
      noRowsRenderer={[Function]}
      onChange={[Function]}
      placeholder="or filter by device name"
      theme={
        Object {
          "base": Object {
            "bodyBackgroundColor": "#F1F2F7",
            "bodyColor": "#353630",
            "fontSize": "13px",
            "lineHeight": 1.5,
          },
          "color": Object {
            "black": "#353630",
            "default": "#FAFAFA",
            "error": "#F5364E",
            "grayBase": "#D1D2D3",
            "grayDark": "#999A94",
            "grayLight": "#FAFAFA",
            "primary": "#00A1DE",
            "success": "#69BE28",
            "warning": "#F39A1E",
            "white": "#FFFFFF",
          },
          "fontSize": Object {
            "h1": "2.46rem",
            "h2": "1.69rem",
            "h3": "1.38rem",
            "h4": "1.15rem",
            "h5": "1rem",
            "h6": "1rem",
            "p": "1rem",
            "small": "0.923rem",
          },
          "height": Object {
            "header": "50px",
            "normal": "32px",
            "small": "20px",
          },
          "mobile": Object {
            "headerHeight": "56px",
            "maxWidth": "800px",
          },
        }
      }
      value=""
    >
      <div>
        <styled-components__StyledInputGroup
          disableFilter={false}
        >
          <StyledComponent
            disableFilter={false}
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "styled-components__StyledInputGroup-rj6hz5-1",
                  "isStatic": false,
                  "lastClassName": "c0",
                  "rules": Array [
                    "
  display: flex;

  > button {
    flex-shrink: 0;
  }

  /* ============================
   * First Child
   * ============================
   */

  > *:first-child {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  /* ============================
   * Middle Child
   * ============================
   */

  > *:not(:first-child):not(:last-child) {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  /* ============================
   * Last Child
   * ============================
   */

  > *:last-child {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }

  /**
   * Unit
   */

  > span {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    padding: 0 5px;
    min-height: ",
                    [Function],
                    ";
    min-width: ",
                    [Function],
                    ";
    border-radius: 3px;
    border: 1px solid ",
                    [Function],
                    ";
    background-color: ",
                    [Function],
                    ";
    color: ",
                    [Function],
                    ";
  }
  > * + span {
    border-left-width: 0;
  }
  > * + span:not(:last-child) {
    border-right-width: 0;
  }
  > span:first-child {
    border-right-width: 0;
  }
  > span:last-child {
    border-left-width: 0;
  }
",
                    "
  position: relative;

  > * {
    ",
                    [Function],
                    ";
  }
",
                  ],
                },
                "displayName": "styled-components__StyledInputGroup",
                "foldedComponentIds": Array [
                  "InputGroup-clww0l-0",
                ],
                "render": [Function],
                "styledComponentId": "styled-components__StyledInputGroup-rj6hz5-1",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={
              Object {
                "current": .c1 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c1:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c1::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3 {
  line-height: 0;
}

.c3 > * {
  -webkit-transform-origin: center;
  -ms-transform-origin: center;
  transform-origin: center;
  -webkit-transition: -webkit-transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transform: initial;
  -ms-transform: initial;
  transform: initial;
}

.c2 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(0,130,179);
  font-size: 18px;
  color: #FFFFFF;
}

.c2:hover {
  background-color: rgb(0,151,208);
}

.c2:active {
  background-color: rgb(0,144,198);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c0 > button {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > *:first-child {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:not(:first-child):not(:last-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:last-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c0 > span {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  padding: 0 5px;
  min-height: 32px;
  min-width: 32px;
  border-radius: 3px;
  border: 1px solid #D1D2D3;
  background-color: #FFFFFF;
  color: #999A94;
}

.c0 > * + span {
  border-left-width: 0;
}

.c0 > * + span:not(:last-child) {
  border-right-width: 0;
}

.c0 > span:first-child {
  border-right-width: 0;
}

.c0 > span:last-child {
  border-left-width: 0;
}

<div
                  class="c0"
                >
                  <input
                    autocomplete="off"
                    class="c1"
                    kind="primary"
                    placeholder="or filter by device name"
                    value=""
                  />
                  <button
                    class="c2"
                    kind="primary"
                  >
                    <div
                      class="c3"
                    >
                      <svg
                        fill="currentColor"
                        height="1em"
                        viewBox="0 0 24 24"
                        width="1em"
                      >
                        <path
                          d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z"
                        />
                      </svg>
                    </div>
                  </button>
                </div>,
              }
            }
          >
            <div
              className="c0"
            >
              <Input
                autoComplete="off"
                autoFocus={true}
                focus={false}
                kind="primary"
                onChange={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                placeholder="or filter by device name"
                readOnly={false}
                value=""
              >
                <StyledComponent
                  autoComplete="off"
                  autoFocus={true}
                  focus={false}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "Input-a7ignf-0",
                        "isStatic": false,
                        "lastClassName": "c1",
                        "rules": Array [
                          "
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: ",
                          [Function],
                          ";
  color: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  border-color: ",
                          [Function],
                          ";
  box-shadow: ",
                          [Function],
                          ";

  &:focus {
    border-color: ",
                          [Function],
                          ";
    box-shadow: 0 0 3px 0
      ",
                          [Function],
                          ";
  }

  &::placeholder {
    opacity: 1;
    color: ",
                          [Function],
                          ";
  }
",
                        ],
                      },
                      "defaultProps": Object {
                        "focus": false,
                        "kind": "primary",
                      },
                      "displayName": "Input",
                      "foldedComponentIds": Array [],
                      "propTypes": Object {
                        "focus": [Function],
                        "kind": [Function],
                      },
                      "render": [Function],
                      "styledComponentId": "Input-a7ignf-0",
                      "target": "input",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={
                    Object {
                      "current": <input
                        autocomplete="off"
                        class="c1"
                        kind="primary"
                        placeholder="or filter by device name"
                        value=""
                      />,
                    }
                  }
                  kind="primary"
                  onChange={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  placeholder="or filter by device name"
                  readOnly={false}
                  value=""
                >
                  <input
                    autoComplete="off"
                    autoFocus={true}
                    className="c1"
                    kind="primary"
                    onChange={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    placeholder="or filter by device name"
                    readOnly={false}
                    value=""
                  />
                </StyledComponent>
              </Input>
              <styled-components__StyledButton
                active={false}
                block={false}
                disabled={false}
                kind="primary"
                onClick={[Function]}
                round={false}
                size="normal"
                square={true}
              >
                <StyledComponent
                  active={false}
                  block={false}
                  disabled={false}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled-components__StyledButton-sc-1vavxcc-3",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  transition: background-color cubic-bezier(0.47, 0, 0.75, 0.72) 0.3s;
  line-height: 0;
  cursor: ",
                          [Function],
                          ";

  &:hover {
    background-color: ",
                          [Function],
                          ";
  }

  &:active {
    background-color: ",
                          [Function],
                          ";
  }

  background-color: ",
                          [Function],
                          ";
  color: ",
                          [Function],
                          ";
  border-radius: ",
                          [Function],
                          ";
  width: ",
                          [Function],
                          ";
  min-width: ",
                          [Function],
                          ";
  height: ",
                          [Function],
                          ";
  padding: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  border-color: ",
                          [Function],
                          ";
",
                          "
  font-size: 18px;
  color: ",
                          [Function],
                          ";
",
                        ],
                      },
                      "defaultProps": Object {
                        "active": false,
                        "block": false,
                        "disabled": false,
                        "kind": "primary",
                        "round": false,
                        "size": "normal",
                        "square": false,
                      },
                      "displayName": "styled-components__StyledButton",
                      "foldedComponentIds": Array [
                        "Button-sc-4bw22c-0",
                      ],
                      "propTypes": Object {
                        "active": [Function],
                        "block": [Function],
                        "disabled": [Function],
                        "kind": [Function],
                        "round": [Function],
                        "size": [Function],
                        "square": [Function],
                      },
                      "render": [Function],
                      "styledComponentId": "styled-components__StyledButton-sc-1vavxcc-3",
                      "target": "button",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  kind="primary"
                  onClick={[Function]}
                  round={false}
                  size="normal"
                  square={true}
                >
                  <button
                    className="c2"
                    disabled={false}
                    kind="primary"
                    onClick={[Function]}
                    size="normal"
                  >
                    <Rotate
                      active={false}
                    >
                      <StyledComponent
                        active={false}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Rotate-sc-7d7mt1-0",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "
  line-height: 0;

  > * {
    transform-origin: center;
    transition: transform 0.4s cubic-bezier(0.68, -0.55, 0.27, 1.55);
    transform: ",
                                [Function],
                                ";
  }
",
                              ],
                            },
                            "defaultProps": Object {
                              "active": false,
                            },
                            "displayName": "Rotate",
                            "foldedComponentIds": Array [],
                            "propTypes": Object {
                              "active": [Function],
                            },
                            "render": [Function],
                            "styledComponentId": "Rotate-sc-7d7mt1-0",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c3"
                        >
                          <IconFold>
                            <svg
                              fill="currentColor"
                              height="1em"
                              viewBox="0 0 24 24"
                              width="1em"
                            >
                              <path
                                d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z"
                              />
                            </svg>
                          </IconFold>
                        </div>
                      </StyledComponent>
                    </Rotate>
                  </button>
                </StyledComponent>
              </styled-components__StyledButton>
            </div>
          </StyledComponent>
        </styled-components__StyledInputGroup>
      </div>
    </PureInputSelect>
  </InputSelect>
</StatefulInputSelect>
`;

exports[`Storyshots InputSelect With children React element and itemValueMapper 1`] = `
.c1 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c1:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c1::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3 {
  line-height: 0;
}

.c3 > * {
  -webkit-transform-origin: center;
  -ms-transform-origin: center;
  transform-origin: center;
  -webkit-transition: -webkit-transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transform: initial;
  -ms-transform: initial;
  transform: initial;
}

.c2 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(0,130,179);
  font-size: 18px;
  color: #FFFFFF;
}

.c2:hover {
  background-color: rgb(0,151,208);
}

.c2:active {
  background-color: rgb(0,144,198);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c0 > button {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > *:first-child {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:not(:first-child):not(:last-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:last-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c0 > span {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  padding: 0 5px;
  min-height: 32px;
  min-width: 32px;
  border-radius: 3px;
  border: 1px solid #D1D2D3;
  background-color: #FFFFFF;
  color: #999A94;
}

.c0 > * + span {
  border-left-width: 0;
}

.c0 > * + span:not(:last-child) {
  border-right-width: 0;
}

.c0 > span:first-child {
  border-right-width: 0;
}

.c0 > span:last-child {
  border-left-width: 0;
}

<InputSelect
  itemValueMapper={[Function]}
  items={
    Array [
      Object {
        "children": <span>
          <svg
            height="10"
            width="20"
          >
            <circle
              cx="5"
              cy="5"
              fill="red"
              r="5"
            />
          </svg>
          High
        </span>,
        "displayValue": "High",
        "value": 1,
      },
      Object {
        "children": <span>
          <svg
            height="10"
            width="20"
          >
            <circle
              cx="5"
              cy="5"
              fill="orange"
              r="5"
            />
          </svg>
          Medium
        </span>,
        "displayValue": "Medium",
        "value": 2,
      },
      Object {
        "children": <span>
          <svg
            height="10"
            width="20"
          >
            <circle
              cx="5"
              cy="5"
              fill="gold"
              r="5"
            />
          </svg>
          Low
        </span>,
        "displayValue": "Low",
        "value": 3,
      },
    ]
  }
  onChange={[Function]}
  value={2}
>
  <PureInputSelect
    disableFilter={false}
    itemValueMapper={[Function]}
    items={
      Array [
        Object {
          "children": <span>
            <svg
              height="10"
              width="20"
            >
              <circle
                cx="5"
                cy="5"
                fill="red"
                r="5"
              />
            </svg>
            High
          </span>,
          "displayValue": "High",
          "value": 1,
        },
        Object {
          "children": <span>
            <svg
              height="10"
              width="20"
            >
              <circle
                cx="5"
                cy="5"
                fill="orange"
                r="5"
              />
            </svg>
            Medium
          </span>,
          "displayValue": "Medium",
          "value": 2,
        },
        Object {
          "children": <span>
            <svg
              height="10"
              width="20"
            >
              <circle
                cx="5"
                cy="5"
                fill="gold"
                r="5"
              />
            </svg>
            Low
          </span>,
          "displayValue": "Low",
          "value": 3,
        },
      ]
    }
    kind="primary"
    noRowsRenderer={[Function]}
    onChange={[Function]}
    theme={
      Object {
        "base": Object {
          "bodyBackgroundColor": "#F1F2F7",
          "bodyColor": "#353630",
          "fontSize": "13px",
          "lineHeight": 1.5,
        },
        "color": Object {
          "black": "#353630",
          "default": "#FAFAFA",
          "error": "#F5364E",
          "grayBase": "#D1D2D3",
          "grayDark": "#999A94",
          "grayLight": "#FAFAFA",
          "primary": "#00A1DE",
          "success": "#69BE28",
          "warning": "#F39A1E",
          "white": "#FFFFFF",
        },
        "fontSize": Object {
          "h1": "2.46rem",
          "h2": "1.69rem",
          "h3": "1.38rem",
          "h4": "1.15rem",
          "h5": "1rem",
          "h6": "1rem",
          "p": "1rem",
          "small": "0.923rem",
        },
        "height": Object {
          "header": "50px",
          "normal": "32px",
          "small": "20px",
        },
        "mobile": Object {
          "headerHeight": "56px",
          "maxWidth": "800px",
        },
      }
    }
    value={2}
  >
    <div>
      <styled-components__StyledInputGroup
        disableFilter={false}
      >
        <StyledComponent
          disableFilter={false}
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "styled-components__StyledInputGroup-rj6hz5-1",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "
  display: flex;

  > button {
    flex-shrink: 0;
  }

  /* ============================
   * First Child
   * ============================
   */

  > *:first-child {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  /* ============================
   * Middle Child
   * ============================
   */

  > *:not(:first-child):not(:last-child) {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  /* ============================
   * Last Child
   * ============================
   */

  > *:last-child {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }

  /**
   * Unit
   */

  > span {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    padding: 0 5px;
    min-height: ",
                  [Function],
                  ";
    min-width: ",
                  [Function],
                  ";
    border-radius: 3px;
    border: 1px solid ",
                  [Function],
                  ";
    background-color: ",
                  [Function],
                  ";
    color: ",
                  [Function],
                  ";
  }
  > * + span {
    border-left-width: 0;
  }
  > * + span:not(:last-child) {
    border-right-width: 0;
  }
  > span:first-child {
    border-right-width: 0;
  }
  > span:last-child {
    border-left-width: 0;
  }
",
                  "
  position: relative;

  > * {
    ",
                  [Function],
                  ";
  }
",
                ],
              },
              "displayName": "styled-components__StyledInputGroup",
              "foldedComponentIds": Array [
                "InputGroup-clww0l-0",
              ],
              "render": [Function],
              "styledComponentId": "styled-components__StyledInputGroup-rj6hz5-1",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={
            Object {
              "current": .c1 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c1:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c1::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3 {
  line-height: 0;
}

.c3 > * {
  -webkit-transform-origin: center;
  -ms-transform-origin: center;
  transform-origin: center;
  -webkit-transition: -webkit-transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transform: initial;
  -ms-transform: initial;
  transform: initial;
}

.c2 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(0,130,179);
  font-size: 18px;
  color: #FFFFFF;
}

.c2:hover {
  background-color: rgb(0,151,208);
}

.c2:active {
  background-color: rgb(0,144,198);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c0 > button {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > *:first-child {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:not(:first-child):not(:last-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:last-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c0 > span {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  padding: 0 5px;
  min-height: 32px;
  min-width: 32px;
  border-radius: 3px;
  border: 1px solid #D1D2D3;
  background-color: #FFFFFF;
  color: #999A94;
}

.c0 > * + span {
  border-left-width: 0;
}

.c0 > * + span:not(:last-child) {
  border-right-width: 0;
}

.c0 > span:first-child {
  border-right-width: 0;
}

.c0 > span:last-child {
  border-left-width: 0;
}

<div
                class="c0"
              >
                <input
                  autocomplete="off"
                  class="c1"
                  kind="primary"
                  placeholder=""
                  value="Medium"
                />
                <button
                  class="c2"
                  kind="primary"
                >
                  <div
                    class="c3"
                  >
                    <svg
                      fill="currentColor"
                      height="1em"
                      viewBox="0 0 24 24"
                      width="1em"
                    >
                      <path
                        d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z"
                      />
                    </svg>
                  </div>
                </button>
              </div>,
            }
          }
        >
          <div
            className="c0"
          >
            <Input
              autoComplete="off"
              focus={false}
              kind="primary"
              onChange={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              placeholder=""
              readOnly={false}
              value="Medium"
            >
              <StyledComponent
                autoComplete="off"
                focus={false}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Input-a7ignf-0",
                      "isStatic": false,
                      "lastClassName": "c1",
                      "rules": Array [
                        "
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: ",
                        [Function],
                        ";
  color: ",
                        [Function],
                        ";
  font-size: ",
                        [Function],
                        ";
  border-color: ",
                        [Function],
                        ";
  box-shadow: ",
                        [Function],
                        ";

  &:focus {
    border-color: ",
                        [Function],
                        ";
    box-shadow: 0 0 3px 0
      ",
                        [Function],
                        ";
  }

  &::placeholder {
    opacity: 1;
    color: ",
                        [Function],
                        ";
  }
",
                      ],
                    },
                    "defaultProps": Object {
                      "focus": false,
                      "kind": "primary",
                    },
                    "displayName": "Input",
                    "foldedComponentIds": Array [],
                    "propTypes": Object {
                      "focus": [Function],
                      "kind": [Function],
                    },
                    "render": [Function],
                    "styledComponentId": "Input-a7ignf-0",
                    "target": "input",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={
                  Object {
                    "current": <input
                      autocomplete="off"
                      class="c1"
                      kind="primary"
                      placeholder=""
                      value="Medium"
                    />,
                  }
                }
                kind="primary"
                onChange={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                placeholder=""
                readOnly={false}
                value="Medium"
              >
                <input
                  autoComplete="off"
                  className="c1"
                  kind="primary"
                  onChange={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  placeholder=""
                  readOnly={false}
                  value="Medium"
                />
              </StyledComponent>
            </Input>
            <styled-components__StyledButton
              active={false}
              block={false}
              disabled={false}
              kind="primary"
              onClick={[Function]}
              round={false}
              size="normal"
              square={true}
            >
              <StyledComponent
                active={false}
                block={false}
                disabled={false}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "styled-components__StyledButton-sc-1vavxcc-3",
                      "isStatic": false,
                      "lastClassName": "c2",
                      "rules": Array [
                        "
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  transition: background-color cubic-bezier(0.47, 0, 0.75, 0.72) 0.3s;
  line-height: 0;
  cursor: ",
                        [Function],
                        ";

  &:hover {
    background-color: ",
                        [Function],
                        ";
  }

  &:active {
    background-color: ",
                        [Function],
                        ";
  }

  background-color: ",
                        [Function],
                        ";
  color: ",
                        [Function],
                        ";
  border-radius: ",
                        [Function],
                        ";
  width: ",
                        [Function],
                        ";
  min-width: ",
                        [Function],
                        ";
  height: ",
                        [Function],
                        ";
  padding: ",
                        [Function],
                        ";
  font-size: ",
                        [Function],
                        ";
  border-color: ",
                        [Function],
                        ";
",
                        "
  font-size: 18px;
  color: ",
                        [Function],
                        ";
",
                      ],
                    },
                    "defaultProps": Object {
                      "active": false,
                      "block": false,
                      "disabled": false,
                      "kind": "primary",
                      "round": false,
                      "size": "normal",
                      "square": false,
                    },
                    "displayName": "styled-components__StyledButton",
                    "foldedComponentIds": Array [
                      "Button-sc-4bw22c-0",
                    ],
                    "propTypes": Object {
                      "active": [Function],
                      "block": [Function],
                      "disabled": [Function],
                      "kind": [Function],
                      "round": [Function],
                      "size": [Function],
                      "square": [Function],
                    },
                    "render": [Function],
                    "styledComponentId": "styled-components__StyledButton-sc-1vavxcc-3",
                    "target": "button",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                kind="primary"
                onClick={[Function]}
                round={false}
                size="normal"
                square={true}
              >
                <button
                  className="c2"
                  disabled={false}
                  kind="primary"
                  onClick={[Function]}
                  size="normal"
                >
                  <Rotate
                    active={false}
                  >
                    <StyledComponent
                      active={false}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "Rotate-sc-7d7mt1-0",
                            "isStatic": false,
                            "lastClassName": "c3",
                            "rules": Array [
                              "
  line-height: 0;

  > * {
    transform-origin: center;
    transition: transform 0.4s cubic-bezier(0.68, -0.55, 0.27, 1.55);
    transform: ",
                              [Function],
                              ";
  }
",
                            ],
                          },
                          "defaultProps": Object {
                            "active": false,
                          },
                          "displayName": "Rotate",
                          "foldedComponentIds": Array [],
                          "propTypes": Object {
                            "active": [Function],
                          },
                          "render": [Function],
                          "styledComponentId": "Rotate-sc-7d7mt1-0",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="c3"
                      >
                        <IconFold>
                          <svg
                            fill="currentColor"
                            height="1em"
                            viewBox="0 0 24 24"
                            width="1em"
                          >
                            <path
                              d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z"
                            />
                          </svg>
                        </IconFold>
                      </div>
                    </StyledComponent>
                  </Rotate>
                </button>
              </StyledComponent>
            </styled-components__StyledButton>
          </div>
        </StyledComponent>
      </styled-components__StyledInputGroup>
    </div>
  </PureInputSelect>
</InputSelect>
`;

exports[`Storyshots InputSelect With disableFilter props 1`] = `
.c1 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c1:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c1::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3 {
  line-height: 0;
}

.c3 > * {
  -webkit-transform-origin: center;
  -ms-transform-origin: center;
  transform-origin: center;
  -webkit-transition: -webkit-transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transform: initial;
  -ms-transform: initial;
  transform: initial;
}

.c2 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(0,130,179);
  font-size: 18px;
  color: #FFFFFF;
}

.c2:hover {
  background-color: rgb(0,151,208);
}

.c2:active {
  background-color: rgb(0,144,198);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c0 > button {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > *:first-child {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:not(:first-child):not(:last-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:last-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c0 > span {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  padding: 0 5px;
  min-height: 32px;
  min-width: 32px;
  border-radius: 3px;
  border: 1px solid #D1D2D3;
  background-color: #FFFFFF;
  color: #999A94;
}

.c0 > * + span {
  border-left-width: 0;
}

.c0 > * + span:not(:last-child) {
  border-right-width: 0;
}

.c0 > span:first-child {
  border-right-width: 0;
}

.c0 > span:last-child {
  border-left-width: 0;
}

.c0 > * {
  cursor: pointer;
}

<StatefulInputSelect
  disableFilter={true}
  placeholder="or filter by device name"
>
  <InputSelect
    disableFilter={true}
    items={
      Array [
        Object {
          "children": "children 1",
          "value": 1,
        },
        Object {
          "children": "children children children 2",
          "value": 2,
        },
        Object {
          "children": "children 3",
          "value": 3,
        },
        Object {
          "children": "children 4",
          "value": 4,
        },
        Object {
          "children": "5",
          "value": 5,
        },
        Object {
          "children": "children 6",
          "value": 6,
        },
        Object {
          "children": "children children 7",
          "value": 7,
        },
        Object {
          "children": "children 8",
          "value": 8,
        },
        Object {
          "children": "children 9",
          "value": 9,
        },
        Object {
          "children": "children children children 10",
          "value": 10,
        },
        Object {
          "children": "children 11",
          "value": 11,
        },
        Object {
          "children": "12",
          "value": 12,
        },
        Object {
          "children": "13",
          "value": 13,
        },
      ]
    }
    menuRef={
      Object {
        "current": null,
      }
    }
    onChange={[Function]}
    placeholder="or filter by device name"
    value=""
  >
    <PureInputSelect
      disableFilter={true}
      itemValueMapper={[Function]}
      items={
        Array [
          Object {
            "children": "children 1",
            "value": 1,
          },
          Object {
            "children": "children children children 2",
            "value": 2,
          },
          Object {
            "children": "children 3",
            "value": 3,
          },
          Object {
            "children": "children 4",
            "value": 4,
          },
          Object {
            "children": "5",
            "value": 5,
          },
          Object {
            "children": "children 6",
            "value": 6,
          },
          Object {
            "children": "children children 7",
            "value": 7,
          },
          Object {
            "children": "children 8",
            "value": 8,
          },
          Object {
            "children": "children 9",
            "value": 9,
          },
          Object {
            "children": "children children children 10",
            "value": 10,
          },
          Object {
            "children": "children 11",
            "value": 11,
          },
          Object {
            "children": "12",
            "value": 12,
          },
          Object {
            "children": "13",
            "value": 13,
          },
        ]
      }
      kind="primary"
      menuRef={
        Object {
          "current": null,
        }
      }
      noRowsRenderer={[Function]}
      onChange={[Function]}
      placeholder="or filter by device name"
      theme={
        Object {
          "base": Object {
            "bodyBackgroundColor": "#F1F2F7",
            "bodyColor": "#353630",
            "fontSize": "13px",
            "lineHeight": 1.5,
          },
          "color": Object {
            "black": "#353630",
            "default": "#FAFAFA",
            "error": "#F5364E",
            "grayBase": "#D1D2D3",
            "grayDark": "#999A94",
            "grayLight": "#FAFAFA",
            "primary": "#00A1DE",
            "success": "#69BE28",
            "warning": "#F39A1E",
            "white": "#FFFFFF",
          },
          "fontSize": Object {
            "h1": "2.46rem",
            "h2": "1.69rem",
            "h3": "1.38rem",
            "h4": "1.15rem",
            "h5": "1rem",
            "h6": "1rem",
            "p": "1rem",
            "small": "0.923rem",
          },
          "height": Object {
            "header": "50px",
            "normal": "32px",
            "small": "20px",
          },
          "mobile": Object {
            "headerHeight": "56px",
            "maxWidth": "800px",
          },
        }
      }
      value=""
    >
      <div>
        <styled-components__StyledInputGroup
          disableFilter={true}
        >
          <StyledComponent
            disableFilter={true}
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "styled-components__StyledInputGroup-rj6hz5-1",
                  "isStatic": false,
                  "lastClassName": "c0",
                  "rules": Array [
                    "
  display: flex;

  > button {
    flex-shrink: 0;
  }

  /* ============================
   * First Child
   * ============================
   */

  > *:first-child {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  /* ============================
   * Middle Child
   * ============================
   */

  > *:not(:first-child):not(:last-child) {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  /* ============================
   * Last Child
   * ============================
   */

  > *:last-child {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }

  /**
   * Unit
   */

  > span {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    padding: 0 5px;
    min-height: ",
                    [Function],
                    ";
    min-width: ",
                    [Function],
                    ";
    border-radius: 3px;
    border: 1px solid ",
                    [Function],
                    ";
    background-color: ",
                    [Function],
                    ";
    color: ",
                    [Function],
                    ";
  }
  > * + span {
    border-left-width: 0;
  }
  > * + span:not(:last-child) {
    border-right-width: 0;
  }
  > span:first-child {
    border-right-width: 0;
  }
  > span:last-child {
    border-left-width: 0;
  }
",
                    "
  position: relative;

  > * {
    ",
                    [Function],
                    ";
  }
",
                  ],
                },
                "displayName": "styled-components__StyledInputGroup",
                "foldedComponentIds": Array [
                  "InputGroup-clww0l-0",
                ],
                "render": [Function],
                "styledComponentId": "styled-components__StyledInputGroup-rj6hz5-1",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={
              Object {
                "current": .c1 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c1:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c1::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3 {
  line-height: 0;
}

.c3 > * {
  -webkit-transform-origin: center;
  -ms-transform-origin: center;
  transform-origin: center;
  -webkit-transition: -webkit-transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transform: initial;
  -ms-transform: initial;
  transform: initial;
}

.c2 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(0,130,179);
  font-size: 18px;
  color: #FFFFFF;
}

.c2:hover {
  background-color: rgb(0,151,208);
}

.c2:active {
  background-color: rgb(0,144,198);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c0 > button {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > *:first-child {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:not(:first-child):not(:last-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:last-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c0 > span {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  padding: 0 5px;
  min-height: 32px;
  min-width: 32px;
  border-radius: 3px;
  border: 1px solid #D1D2D3;
  background-color: #FFFFFF;
  color: #999A94;
}

.c0 > * + span {
  border-left-width: 0;
}

.c0 > * + span:not(:last-child) {
  border-right-width: 0;
}

.c0 > span:first-child {
  border-right-width: 0;
}

.c0 > span:last-child {
  border-left-width: 0;
}

.c0 > * {
  cursor: pointer;
}

<div
                  class="c0"
                >
                  <input
                    autocomplete="off"
                    class="c1"
                    kind="primary"
                    placeholder="or filter by device name"
                    readonly=""
                    value=""
                  />
                  <button
                    class="c2"
                    kind="primary"
                  >
                    <div
                      class="c3"
                    >
                      <svg
                        fill="currentColor"
                        height="1em"
                        viewBox="0 0 24 24"
                        width="1em"
                      >
                        <path
                          d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z"
                        />
                      </svg>
                    </div>
                  </button>
                </div>,
              }
            }
          >
            <div
              className="c0"
            >
              <Input
                autoComplete="off"
                focus={false}
                kind="primary"
                onChange={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                placeholder="or filter by device name"
                readOnly={true}
                value=""
              >
                <StyledComponent
                  autoComplete="off"
                  focus={false}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "Input-a7ignf-0",
                        "isStatic": false,
                        "lastClassName": "c1",
                        "rules": Array [
                          "
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: ",
                          [Function],
                          ";
  color: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  border-color: ",
                          [Function],
                          ";
  box-shadow: ",
                          [Function],
                          ";

  &:focus {
    border-color: ",
                          [Function],
                          ";
    box-shadow: 0 0 3px 0
      ",
                          [Function],
                          ";
  }

  &::placeholder {
    opacity: 1;
    color: ",
                          [Function],
                          ";
  }
",
                        ],
                      },
                      "defaultProps": Object {
                        "focus": false,
                        "kind": "primary",
                      },
                      "displayName": "Input",
                      "foldedComponentIds": Array [],
                      "propTypes": Object {
                        "focus": [Function],
                        "kind": [Function],
                      },
                      "render": [Function],
                      "styledComponentId": "Input-a7ignf-0",
                      "target": "input",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={
                    Object {
                      "current": <input
                        autocomplete="off"
                        class="c1"
                        kind="primary"
                        placeholder="or filter by device name"
                        readonly=""
                        value=""
                      />,
                    }
                  }
                  kind="primary"
                  onChange={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  placeholder="or filter by device name"
                  readOnly={true}
                  value=""
                >
                  <input
                    autoComplete="off"
                    className="c1"
                    kind="primary"
                    onChange={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    placeholder="or filter by device name"
                    readOnly={true}
                    value=""
                  />
                </StyledComponent>
              </Input>
              <styled-components__StyledButton
                active={false}
                block={false}
                disabled={false}
                kind="primary"
                onClick={[Function]}
                round={false}
                size="normal"
                square={true}
              >
                <StyledComponent
                  active={false}
                  block={false}
                  disabled={false}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled-components__StyledButton-sc-1vavxcc-3",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  transition: background-color cubic-bezier(0.47, 0, 0.75, 0.72) 0.3s;
  line-height: 0;
  cursor: ",
                          [Function],
                          ";

  &:hover {
    background-color: ",
                          [Function],
                          ";
  }

  &:active {
    background-color: ",
                          [Function],
                          ";
  }

  background-color: ",
                          [Function],
                          ";
  color: ",
                          [Function],
                          ";
  border-radius: ",
                          [Function],
                          ";
  width: ",
                          [Function],
                          ";
  min-width: ",
                          [Function],
                          ";
  height: ",
                          [Function],
                          ";
  padding: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  border-color: ",
                          [Function],
                          ";
",
                          "
  font-size: 18px;
  color: ",
                          [Function],
                          ";
",
                        ],
                      },
                      "defaultProps": Object {
                        "active": false,
                        "block": false,
                        "disabled": false,
                        "kind": "primary",
                        "round": false,
                        "size": "normal",
                        "square": false,
                      },
                      "displayName": "styled-components__StyledButton",
                      "foldedComponentIds": Array [
                        "Button-sc-4bw22c-0",
                      ],
                      "propTypes": Object {
                        "active": [Function],
                        "block": [Function],
                        "disabled": [Function],
                        "kind": [Function],
                        "round": [Function],
                        "size": [Function],
                        "square": [Function],
                      },
                      "render": [Function],
                      "styledComponentId": "styled-components__StyledButton-sc-1vavxcc-3",
                      "target": "button",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  kind="primary"
                  onClick={[Function]}
                  round={false}
                  size="normal"
                  square={true}
                >
                  <button
                    className="c2"
                    disabled={false}
                    kind="primary"
                    onClick={[Function]}
                    size="normal"
                  >
                    <Rotate
                      active={false}
                    >
                      <StyledComponent
                        active={false}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Rotate-sc-7d7mt1-0",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "
  line-height: 0;

  > * {
    transform-origin: center;
    transition: transform 0.4s cubic-bezier(0.68, -0.55, 0.27, 1.55);
    transform: ",
                                [Function],
                                ";
  }
",
                              ],
                            },
                            "defaultProps": Object {
                              "active": false,
                            },
                            "displayName": "Rotate",
                            "foldedComponentIds": Array [],
                            "propTypes": Object {
                              "active": [Function],
                            },
                            "render": [Function],
                            "styledComponentId": "Rotate-sc-7d7mt1-0",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c3"
                        >
                          <IconFold>
                            <svg
                              fill="currentColor"
                              height="1em"
                              viewBox="0 0 24 24"
                              width="1em"
                            >
                              <path
                                d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z"
                              />
                            </svg>
                          </IconFold>
                        </div>
                      </StyledComponent>
                    </Rotate>
                  </button>
                </StyledComponent>
              </styled-components__StyledButton>
            </div>
          </StyledComponent>
        </styled-components__StyledInputGroup>
      </div>
    </PureInputSelect>
  </InputSelect>
</StatefulInputSelect>
`;

exports[`Storyshots InputSelect With focus props 1`] = `
.c1 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #F5364E;
  box-shadow: 0 0 3px 0 rgba(245,54,78,0.5);
}

.c1:focus {
  border-color: #F5364E;
  box-shadow: 0 0 3px 0 rgba(245,54,78,0.5);
}

.c1::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3 {
  line-height: 0;
}

.c3 > * {
  -webkit-transform-origin: center;
  -ms-transform-origin: center;
  transform-origin: center;
  -webkit-transition: -webkit-transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transform: rotate(-180deg);
  -ms-transform: rotate(-180deg);
  transform: rotate(-180deg);
}

.c2 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: rgb(219,48,70);
  color: #FFFFFF;
  border-radius: 3px;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(198,44,63);
  font-size: 18px;
  color: #FFFFFF;
}

.c2:hover {
  background-color: rgb(230,51,73);
}

.c2:active {
  background-color: rgb(219,48,70);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c0 > button {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > *:first-child {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:not(:first-child):not(:last-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:last-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c0 > span {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  padding: 0 5px;
  min-height: 32px;
  min-width: 32px;
  border-radius: 3px;
  border: 1px solid #D1D2D3;
  background-color: #FFFFFF;
  color: #999A94;
}

.c0 > * + span {
  border-left-width: 0;
}

.c0 > * + span:not(:last-child) {
  border-right-width: 0;
}

.c0 > span:first-child {
  border-right-width: 0;
}

.c0 > span:last-child {
  border-left-width: 0;
}

<StatefulInputSelect
  focus={true}
  kind="error"
  placeholder="or filter by device name"
>
  <InputSelect
    focus={true}
    items={
      Array [
        Object {
          "children": "children 1",
          "value": 1,
        },
        Object {
          "children": "children children children 2",
          "value": 2,
        },
        Object {
          "children": "children 3",
          "value": 3,
        },
        Object {
          "children": "children 4",
          "value": 4,
        },
        Object {
          "children": "5",
          "value": 5,
        },
        Object {
          "children": "children 6",
          "value": 6,
        },
        Object {
          "children": "children children 7",
          "value": 7,
        },
        Object {
          "children": "children 8",
          "value": 8,
        },
        Object {
          "children": "children 9",
          "value": 9,
        },
        Object {
          "children": "children children children 10",
          "value": 10,
        },
        Object {
          "children": "children 11",
          "value": 11,
        },
        Object {
          "children": "12",
          "value": 12,
        },
        Object {
          "children": "13",
          "value": 13,
        },
      ]
    }
    kind="error"
    menuRef={
      Object {
        "current": null,
      }
    }
    onChange={[Function]}
    placeholder="or filter by device name"
    value=""
  >
    <PureInputSelect
      disableFilter={false}
      focus={true}
      itemValueMapper={[Function]}
      items={
        Array [
          Object {
            "children": "children 1",
            "value": 1,
          },
          Object {
            "children": "children children children 2",
            "value": 2,
          },
          Object {
            "children": "children 3",
            "value": 3,
          },
          Object {
            "children": "children 4",
            "value": 4,
          },
          Object {
            "children": "5",
            "value": 5,
          },
          Object {
            "children": "children 6",
            "value": 6,
          },
          Object {
            "children": "children children 7",
            "value": 7,
          },
          Object {
            "children": "children 8",
            "value": 8,
          },
          Object {
            "children": "children 9",
            "value": 9,
          },
          Object {
            "children": "children children children 10",
            "value": 10,
          },
          Object {
            "children": "children 11",
            "value": 11,
          },
          Object {
            "children": "12",
            "value": 12,
          },
          Object {
            "children": "13",
            "value": 13,
          },
        ]
      }
      kind="error"
      menuRef={
        Object {
          "current": null,
        }
      }
      noRowsRenderer={[Function]}
      onChange={[Function]}
      placeholder="or filter by device name"
      theme={
        Object {
          "base": Object {
            "bodyBackgroundColor": "#F1F2F7",
            "bodyColor": "#353630",
            "fontSize": "13px",
            "lineHeight": 1.5,
          },
          "color": Object {
            "black": "#353630",
            "default": "#FAFAFA",
            "error": "#F5364E",
            "grayBase": "#D1D2D3",
            "grayDark": "#999A94",
            "grayLight": "#FAFAFA",
            "primary": "#00A1DE",
            "success": "#69BE28",
            "warning": "#F39A1E",
            "white": "#FFFFFF",
          },
          "fontSize": Object {
            "h1": "2.46rem",
            "h2": "1.69rem",
            "h3": "1.38rem",
            "h4": "1.15rem",
            "h5": "1rem",
            "h6": "1rem",
            "p": "1rem",
            "small": "0.923rem",
          },
          "height": Object {
            "header": "50px",
            "normal": "32px",
            "small": "20px",
          },
          "mobile": Object {
            "headerHeight": "56px",
            "maxWidth": "800px",
          },
        }
      }
      value=""
    >
      <div>
        <styled-components__StyledInputGroup
          disableFilter={false}
        >
          <StyledComponent
            disableFilter={false}
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "styled-components__StyledInputGroup-rj6hz5-1",
                  "isStatic": false,
                  "lastClassName": "c0",
                  "rules": Array [
                    "
  display: flex;

  > button {
    flex-shrink: 0;
  }

  /* ============================
   * First Child
   * ============================
   */

  > *:first-child {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  /* ============================
   * Middle Child
   * ============================
   */

  > *:not(:first-child):not(:last-child) {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  /* ============================
   * Last Child
   * ============================
   */

  > *:last-child {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }

  /**
   * Unit
   */

  > span {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    padding: 0 5px;
    min-height: ",
                    [Function],
                    ";
    min-width: ",
                    [Function],
                    ";
    border-radius: 3px;
    border: 1px solid ",
                    [Function],
                    ";
    background-color: ",
                    [Function],
                    ";
    color: ",
                    [Function],
                    ";
  }
  > * + span {
    border-left-width: 0;
  }
  > * + span:not(:last-child) {
    border-right-width: 0;
  }
  > span:first-child {
    border-right-width: 0;
  }
  > span:last-child {
    border-left-width: 0;
  }
",
                    "
  position: relative;

  > * {
    ",
                    [Function],
                    ";
  }
",
                  ],
                },
                "displayName": "styled-components__StyledInputGroup",
                "foldedComponentIds": Array [
                  "InputGroup-clww0l-0",
                ],
                "render": [Function],
                "styledComponentId": "styled-components__StyledInputGroup-rj6hz5-1",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={
              Object {
                "current": .c1 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #F5364E;
  box-shadow: 0 0 3px 0 rgba(245,54,78,0.5);
}

.c1:focus {
  border-color: #F5364E;
  box-shadow: 0 0 3px 0 rgba(245,54,78,0.5);
}

.c1::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3 {
  line-height: 0;
}

.c3 > * {
  -webkit-transform-origin: center;
  -ms-transform-origin: center;
  transform-origin: center;
  -webkit-transition: -webkit-transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transform: rotate(-180deg);
  -ms-transform: rotate(-180deg);
  transform: rotate(-180deg);
}

.c2 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: rgb(219,48,70);
  color: #FFFFFF;
  border-radius: 3px;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(198,44,63);
  font-size: 18px;
  color: #FFFFFF;
}

.c2:hover {
  background-color: rgb(230,51,73);
}

.c2:active {
  background-color: rgb(219,48,70);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c0 > button {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > *:first-child {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:not(:first-child):not(:last-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:last-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c0 > span {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  padding: 0 5px;
  min-height: 32px;
  min-width: 32px;
  border-radius: 3px;
  border: 1px solid #D1D2D3;
  background-color: #FFFFFF;
  color: #999A94;
}

.c0 > * + span {
  border-left-width: 0;
}

.c0 > * + span:not(:last-child) {
  border-right-width: 0;
}

.c0 > span:first-child {
  border-right-width: 0;
}

.c0 > span:last-child {
  border-left-width: 0;
}

<div
                  class="c0"
                >
                  <input
                    autocomplete="off"
                    class="c1"
                    kind="error"
                    placeholder="or filter by device name"
                    value=""
                  />
                  <button
                    class="c2"
                    kind="error"
                  >
                    <div
                      class="c3"
                    >
                      <svg
                        fill="currentColor"
                        height="1em"
                        viewBox="0 0 24 24"
                        width="1em"
                      >
                        <path
                          d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z"
                        />
                      </svg>
                    </div>
                  </button>
                </div>,
              }
            }
          >
            <div
              className="c0"
            >
              <Input
                autoComplete="off"
                focus={true}
                kind="error"
                onChange={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                placeholder="or filter by device name"
                readOnly={false}
                value=""
              >
                <StyledComponent
                  autoComplete="off"
                  focus={true}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "Input-a7ignf-0",
                        "isStatic": false,
                        "lastClassName": "c1",
                        "rules": Array [
                          "
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: ",
                          [Function],
                          ";
  color: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  border-color: ",
                          [Function],
                          ";
  box-shadow: ",
                          [Function],
                          ";

  &:focus {
    border-color: ",
                          [Function],
                          ";
    box-shadow: 0 0 3px 0
      ",
                          [Function],
                          ";
  }

  &::placeholder {
    opacity: 1;
    color: ",
                          [Function],
                          ";
  }
",
                        ],
                      },
                      "defaultProps": Object {
                        "focus": false,
                        "kind": "primary",
                      },
                      "displayName": "Input",
                      "foldedComponentIds": Array [],
                      "propTypes": Object {
                        "focus": [Function],
                        "kind": [Function],
                      },
                      "render": [Function],
                      "styledComponentId": "Input-a7ignf-0",
                      "target": "input",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={
                    Object {
                      "current": <input
                        autocomplete="off"
                        class="c1"
                        kind="error"
                        placeholder="or filter by device name"
                        value=""
                      />,
                    }
                  }
                  kind="error"
                  onChange={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  placeholder="or filter by device name"
                  readOnly={false}
                  value=""
                >
                  <input
                    autoComplete="off"
                    className="c1"
                    kind="error"
                    onChange={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    placeholder="or filter by device name"
                    readOnly={false}
                    value=""
                  />
                </StyledComponent>
              </Input>
              <styled-components__StyledButton
                active={true}
                block={false}
                disabled={false}
                kind="error"
                onClick={[Function]}
                round={false}
                size="normal"
                square={true}
              >
                <StyledComponent
                  active={true}
                  block={false}
                  disabled={false}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled-components__StyledButton-sc-1vavxcc-3",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  transition: background-color cubic-bezier(0.47, 0, 0.75, 0.72) 0.3s;
  line-height: 0;
  cursor: ",
                          [Function],
                          ";

  &:hover {
    background-color: ",
                          [Function],
                          ";
  }

  &:active {
    background-color: ",
                          [Function],
                          ";
  }

  background-color: ",
                          [Function],
                          ";
  color: ",
                          [Function],
                          ";
  border-radius: ",
                          [Function],
                          ";
  width: ",
                          [Function],
                          ";
  min-width: ",
                          [Function],
                          ";
  height: ",
                          [Function],
                          ";
  padding: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  border-color: ",
                          [Function],
                          ";
",
                          "
  font-size: 18px;
  color: ",
                          [Function],
                          ";
",
                        ],
                      },
                      "defaultProps": Object {
                        "active": false,
                        "block": false,
                        "disabled": false,
                        "kind": "primary",
                        "round": false,
                        "size": "normal",
                        "square": false,
                      },
                      "displayName": "styled-components__StyledButton",
                      "foldedComponentIds": Array [
                        "Button-sc-4bw22c-0",
                      ],
                      "propTypes": Object {
                        "active": [Function],
                        "block": [Function],
                        "disabled": [Function],
                        "kind": [Function],
                        "round": [Function],
                        "size": [Function],
                        "square": [Function],
                      },
                      "render": [Function],
                      "styledComponentId": "styled-components__StyledButton-sc-1vavxcc-3",
                      "target": "button",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  kind="error"
                  onClick={[Function]}
                  round={false}
                  size="normal"
                  square={true}
                >
                  <button
                    className="c2"
                    disabled={false}
                    kind="error"
                    onClick={[Function]}
                    size="normal"
                  >
                    <Rotate
                      active={true}
                    >
                      <StyledComponent
                        active={true}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Rotate-sc-7d7mt1-0",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "
  line-height: 0;

  > * {
    transform-origin: center;
    transition: transform 0.4s cubic-bezier(0.68, -0.55, 0.27, 1.55);
    transform: ",
                                [Function],
                                ";
  }
",
                              ],
                            },
                            "defaultProps": Object {
                              "active": false,
                            },
                            "displayName": "Rotate",
                            "foldedComponentIds": Array [],
                            "propTypes": Object {
                              "active": [Function],
                            },
                            "render": [Function],
                            "styledComponentId": "Rotate-sc-7d7mt1-0",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c3"
                        >
                          <IconFold>
                            <svg
                              fill="currentColor"
                              height="1em"
                              viewBox="0 0 24 24"
                              width="1em"
                            >
                              <path
                                d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z"
                              />
                            </svg>
                          </IconFold>
                        </div>
                      </StyledComponent>
                    </Rotate>
                  </button>
                </StyledComponent>
              </styled-components__StyledButton>
            </div>
          </StyledComponent>
        </styled-components__StyledInputGroup>
      </div>
    </PureInputSelect>
  </InputSelect>
</StatefulInputSelect>
`;

exports[`Storyshots InputSelect With kind props 1`] = `
.c1 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c1:focus {
  border-color: #F39A1E;
  box-shadow: 0 0 3px 0 rgba(243,154,30,0.5);
}

.c1::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3 {
  line-height: 0;
}

.c3 > * {
  -webkit-transform-origin: center;
  -ms-transform-origin: center;
  transform-origin: center;
  -webkit-transition: -webkit-transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transform: initial;
  -ms-transform: initial;
  transform: initial;
}

.c2 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #F39A1E;
  color: #FFFFFF;
  border-radius: 3px;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(196,124,24);
  font-size: 18px;
  color: #FFFFFF;
}

.c2:hover {
  background-color: rgb(228,144,28);
}

.c2:active {
  background-color: rgb(217,137,27);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c0 > button {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > *:first-child {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:not(:first-child):not(:last-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:last-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c0 > span {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  padding: 0 5px;
  min-height: 32px;
  min-width: 32px;
  border-radius: 3px;
  border: 1px solid #D1D2D3;
  background-color: #FFFFFF;
  color: #999A94;
}

.c0 > * + span {
  border-left-width: 0;
}

.c0 > * + span:not(:last-child) {
  border-right-width: 0;
}

.c0 > span:first-child {
  border-right-width: 0;
}

.c0 > span:last-child {
  border-left-width: 0;
}

<StatefulInputSelect
  kind="warning"
  placeholder="or filter by device name"
>
  <InputSelect
    items={
      Array [
        Object {
          "children": "children 1",
          "value": 1,
        },
        Object {
          "children": "children children children 2",
          "value": 2,
        },
        Object {
          "children": "children 3",
          "value": 3,
        },
        Object {
          "children": "children 4",
          "value": 4,
        },
        Object {
          "children": "5",
          "value": 5,
        },
        Object {
          "children": "children 6",
          "value": 6,
        },
        Object {
          "children": "children children 7",
          "value": 7,
        },
        Object {
          "children": "children 8",
          "value": 8,
        },
        Object {
          "children": "children 9",
          "value": 9,
        },
        Object {
          "children": "children children children 10",
          "value": 10,
        },
        Object {
          "children": "children 11",
          "value": 11,
        },
        Object {
          "children": "12",
          "value": 12,
        },
        Object {
          "children": "13",
          "value": 13,
        },
      ]
    }
    kind="warning"
    menuRef={
      Object {
        "current": null,
      }
    }
    onChange={[Function]}
    placeholder="or filter by device name"
    value=""
  >
    <PureInputSelect
      disableFilter={false}
      itemValueMapper={[Function]}
      items={
        Array [
          Object {
            "children": "children 1",
            "value": 1,
          },
          Object {
            "children": "children children children 2",
            "value": 2,
          },
          Object {
            "children": "children 3",
            "value": 3,
          },
          Object {
            "children": "children 4",
            "value": 4,
          },
          Object {
            "children": "5",
            "value": 5,
          },
          Object {
            "children": "children 6",
            "value": 6,
          },
          Object {
            "children": "children children 7",
            "value": 7,
          },
          Object {
            "children": "children 8",
            "value": 8,
          },
          Object {
            "children": "children 9",
            "value": 9,
          },
          Object {
            "children": "children children children 10",
            "value": 10,
          },
          Object {
            "children": "children 11",
            "value": 11,
          },
          Object {
            "children": "12",
            "value": 12,
          },
          Object {
            "children": "13",
            "value": 13,
          },
        ]
      }
      kind="warning"
      menuRef={
        Object {
          "current": null,
        }
      }
      noRowsRenderer={[Function]}
      onChange={[Function]}
      placeholder="or filter by device name"
      theme={
        Object {
          "base": Object {
            "bodyBackgroundColor": "#F1F2F7",
            "bodyColor": "#353630",
            "fontSize": "13px",
            "lineHeight": 1.5,
          },
          "color": Object {
            "black": "#353630",
            "default": "#FAFAFA",
            "error": "#F5364E",
            "grayBase": "#D1D2D3",
            "grayDark": "#999A94",
            "grayLight": "#FAFAFA",
            "primary": "#00A1DE",
            "success": "#69BE28",
            "warning": "#F39A1E",
            "white": "#FFFFFF",
          },
          "fontSize": Object {
            "h1": "2.46rem",
            "h2": "1.69rem",
            "h3": "1.38rem",
            "h4": "1.15rem",
            "h5": "1rem",
            "h6": "1rem",
            "p": "1rem",
            "small": "0.923rem",
          },
          "height": Object {
            "header": "50px",
            "normal": "32px",
            "small": "20px",
          },
          "mobile": Object {
            "headerHeight": "56px",
            "maxWidth": "800px",
          },
        }
      }
      value=""
    >
      <div>
        <styled-components__StyledInputGroup
          disableFilter={false}
        >
          <StyledComponent
            disableFilter={false}
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "styled-components__StyledInputGroup-rj6hz5-1",
                  "isStatic": false,
                  "lastClassName": "c0",
                  "rules": Array [
                    "
  display: flex;

  > button {
    flex-shrink: 0;
  }

  /* ============================
   * First Child
   * ============================
   */

  > *:first-child {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  /* ============================
   * Middle Child
   * ============================
   */

  > *:not(:first-child):not(:last-child) {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  /* ============================
   * Last Child
   * ============================
   */

  > *:last-child {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }

  /**
   * Unit
   */

  > span {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    padding: 0 5px;
    min-height: ",
                    [Function],
                    ";
    min-width: ",
                    [Function],
                    ";
    border-radius: 3px;
    border: 1px solid ",
                    [Function],
                    ";
    background-color: ",
                    [Function],
                    ";
    color: ",
                    [Function],
                    ";
  }
  > * + span {
    border-left-width: 0;
  }
  > * + span:not(:last-child) {
    border-right-width: 0;
  }
  > span:first-child {
    border-right-width: 0;
  }
  > span:last-child {
    border-left-width: 0;
  }
",
                    "
  position: relative;

  > * {
    ",
                    [Function],
                    ";
  }
",
                  ],
                },
                "displayName": "styled-components__StyledInputGroup",
                "foldedComponentIds": Array [
                  "InputGroup-clww0l-0",
                ],
                "render": [Function],
                "styledComponentId": "styled-components__StyledInputGroup-rj6hz5-1",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={
              Object {
                "current": .c1 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c1:focus {
  border-color: #F39A1E;
  box-shadow: 0 0 3px 0 rgba(243,154,30,0.5);
}

.c1::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3 {
  line-height: 0;
}

.c3 > * {
  -webkit-transform-origin: center;
  -ms-transform-origin: center;
  transform-origin: center;
  -webkit-transition: -webkit-transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transform: initial;
  -ms-transform: initial;
  transform: initial;
}

.c2 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #F39A1E;
  color: #FFFFFF;
  border-radius: 3px;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(196,124,24);
  font-size: 18px;
  color: #FFFFFF;
}

.c2:hover {
  background-color: rgb(228,144,28);
}

.c2:active {
  background-color: rgb(217,137,27);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c0 > button {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > *:first-child {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:not(:first-child):not(:last-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:last-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c0 > span {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  padding: 0 5px;
  min-height: 32px;
  min-width: 32px;
  border-radius: 3px;
  border: 1px solid #D1D2D3;
  background-color: #FFFFFF;
  color: #999A94;
}

.c0 > * + span {
  border-left-width: 0;
}

.c0 > * + span:not(:last-child) {
  border-right-width: 0;
}

.c0 > span:first-child {
  border-right-width: 0;
}

.c0 > span:last-child {
  border-left-width: 0;
}

<div
                  class="c0"
                >
                  <input
                    autocomplete="off"
                    class="c1"
                    kind="warning"
                    placeholder="or filter by device name"
                    value=""
                  />
                  <button
                    class="c2"
                    kind="warning"
                  >
                    <div
                      class="c3"
                    >
                      <svg
                        fill="currentColor"
                        height="1em"
                        viewBox="0 0 24 24"
                        width="1em"
                      >
                        <path
                          d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z"
                        />
                      </svg>
                    </div>
                  </button>
                </div>,
              }
            }
          >
            <div
              className="c0"
            >
              <Input
                autoComplete="off"
                focus={false}
                kind="warning"
                onChange={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                placeholder="or filter by device name"
                readOnly={false}
                value=""
              >
                <StyledComponent
                  autoComplete="off"
                  focus={false}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "Input-a7ignf-0",
                        "isStatic": false,
                        "lastClassName": "c1",
                        "rules": Array [
                          "
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: ",
                          [Function],
                          ";
  color: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  border-color: ",
                          [Function],
                          ";
  box-shadow: ",
                          [Function],
                          ";

  &:focus {
    border-color: ",
                          [Function],
                          ";
    box-shadow: 0 0 3px 0
      ",
                          [Function],
                          ";
  }

  &::placeholder {
    opacity: 1;
    color: ",
                          [Function],
                          ";
  }
",
                        ],
                      },
                      "defaultProps": Object {
                        "focus": false,
                        "kind": "primary",
                      },
                      "displayName": "Input",
                      "foldedComponentIds": Array [],
                      "propTypes": Object {
                        "focus": [Function],
                        "kind": [Function],
                      },
                      "render": [Function],
                      "styledComponentId": "Input-a7ignf-0",
                      "target": "input",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={
                    Object {
                      "current": <input
                        autocomplete="off"
                        class="c1"
                        kind="warning"
                        placeholder="or filter by device name"
                        value=""
                      />,
                    }
                  }
                  kind="warning"
                  onChange={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  placeholder="or filter by device name"
                  readOnly={false}
                  value=""
                >
                  <input
                    autoComplete="off"
                    className="c1"
                    kind="warning"
                    onChange={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    placeholder="or filter by device name"
                    readOnly={false}
                    value=""
                  />
                </StyledComponent>
              </Input>
              <styled-components__StyledButton
                active={false}
                block={false}
                disabled={false}
                kind="warning"
                onClick={[Function]}
                round={false}
                size="normal"
                square={true}
              >
                <StyledComponent
                  active={false}
                  block={false}
                  disabled={false}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled-components__StyledButton-sc-1vavxcc-3",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  transition: background-color cubic-bezier(0.47, 0, 0.75, 0.72) 0.3s;
  line-height: 0;
  cursor: ",
                          [Function],
                          ";

  &:hover {
    background-color: ",
                          [Function],
                          ";
  }

  &:active {
    background-color: ",
                          [Function],
                          ";
  }

  background-color: ",
                          [Function],
                          ";
  color: ",
                          [Function],
                          ";
  border-radius: ",
                          [Function],
                          ";
  width: ",
                          [Function],
                          ";
  min-width: ",
                          [Function],
                          ";
  height: ",
                          [Function],
                          ";
  padding: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  border-color: ",
                          [Function],
                          ";
",
                          "
  font-size: 18px;
  color: ",
                          [Function],
                          ";
",
                        ],
                      },
                      "defaultProps": Object {
                        "active": false,
                        "block": false,
                        "disabled": false,
                        "kind": "primary",
                        "round": false,
                        "size": "normal",
                        "square": false,
                      },
                      "displayName": "styled-components__StyledButton",
                      "foldedComponentIds": Array [
                        "Button-sc-4bw22c-0",
                      ],
                      "propTypes": Object {
                        "active": [Function],
                        "block": [Function],
                        "disabled": [Function],
                        "kind": [Function],
                        "round": [Function],
                        "size": [Function],
                        "square": [Function],
                      },
                      "render": [Function],
                      "styledComponentId": "styled-components__StyledButton-sc-1vavxcc-3",
                      "target": "button",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  kind="warning"
                  onClick={[Function]}
                  round={false}
                  size="normal"
                  square={true}
                >
                  <button
                    className="c2"
                    disabled={false}
                    kind="warning"
                    onClick={[Function]}
                    size="normal"
                  >
                    <Rotate
                      active={false}
                    >
                      <StyledComponent
                        active={false}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Rotate-sc-7d7mt1-0",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "
  line-height: 0;

  > * {
    transform-origin: center;
    transition: transform 0.4s cubic-bezier(0.68, -0.55, 0.27, 1.55);
    transform: ",
                                [Function],
                                ";
  }
",
                              ],
                            },
                            "defaultProps": Object {
                              "active": false,
                            },
                            "displayName": "Rotate",
                            "foldedComponentIds": Array [],
                            "propTypes": Object {
                              "active": [Function],
                            },
                            "render": [Function],
                            "styledComponentId": "Rotate-sc-7d7mt1-0",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c3"
                        >
                          <IconFold>
                            <svg
                              fill="currentColor"
                              height="1em"
                              viewBox="0 0 24 24"
                              width="1em"
                            >
                              <path
                                d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z"
                              />
                            </svg>
                          </IconFold>
                        </div>
                      </StyledComponent>
                    </Rotate>
                  </button>
                </StyledComponent>
              </styled-components__StyledButton>
            </div>
          </StyledComponent>
        </styled-components__StyledInputGroup>
      </div>
    </PureInputSelect>
  </InputSelect>
</StatefulInputSelect>
`;

exports[`Storyshots InputSelect With noRowsRenderer props 1`] = `
.c1 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c1:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c1::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3 {
  line-height: 0;
}

.c3 > * {
  -webkit-transform-origin: center;
  -ms-transform-origin: center;
  transform-origin: center;
  -webkit-transition: -webkit-transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transform: initial;
  -ms-transform: initial;
  transform: initial;
}

.c2 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(0,130,179);
  font-size: 18px;
  color: #FFFFFF;
}

.c2:hover {
  background-color: rgb(0,151,208);
}

.c2:active {
  background-color: rgb(0,144,198);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c0 > button {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > *:first-child {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:not(:first-child):not(:last-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:last-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c0 > span {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  padding: 0 5px;
  min-height: 32px;
  min-width: 32px;
  border-radius: 3px;
  border: 1px solid #D1D2D3;
  background-color: #FFFFFF;
  color: #999A94;
}

.c0 > * + span {
  border-left-width: 0;
}

.c0 > * + span:not(:last-child) {
  border-right-width: 0;
}

.c0 > span:first-child {
  border-right-width: 0;
}

.c0 > span:last-child {
  border-left-width: 0;
}

<StatefulInputSelect
  kind="primary"
  noRowsRenderer={[Function]}
  placeholder="or filter by device name"
>
  <InputSelect
    items={
      Array [
        Object {
          "children": "children 1",
          "value": 1,
        },
        Object {
          "children": "children children children 2",
          "value": 2,
        },
        Object {
          "children": "children 3",
          "value": 3,
        },
        Object {
          "children": "children 4",
          "value": 4,
        },
        Object {
          "children": "5",
          "value": 5,
        },
        Object {
          "children": "children 6",
          "value": 6,
        },
        Object {
          "children": "children children 7",
          "value": 7,
        },
        Object {
          "children": "children 8",
          "value": 8,
        },
        Object {
          "children": "children 9",
          "value": 9,
        },
        Object {
          "children": "children children children 10",
          "value": 10,
        },
        Object {
          "children": "children 11",
          "value": 11,
        },
        Object {
          "children": "12",
          "value": 12,
        },
        Object {
          "children": "13",
          "value": 13,
        },
      ]
    }
    kind="primary"
    menuRef={
      Object {
        "current": null,
      }
    }
    noRowsRenderer={[Function]}
    onChange={[Function]}
    placeholder="or filter by device name"
    value=""
  >
    <PureInputSelect
      disableFilter={false}
      itemValueMapper={[Function]}
      items={
        Array [
          Object {
            "children": "children 1",
            "value": 1,
          },
          Object {
            "children": "children children children 2",
            "value": 2,
          },
          Object {
            "children": "children 3",
            "value": 3,
          },
          Object {
            "children": "children 4",
            "value": 4,
          },
          Object {
            "children": "5",
            "value": 5,
          },
          Object {
            "children": "children 6",
            "value": 6,
          },
          Object {
            "children": "children children 7",
            "value": 7,
          },
          Object {
            "children": "children 8",
            "value": 8,
          },
          Object {
            "children": "children 9",
            "value": 9,
          },
          Object {
            "children": "children children children 10",
            "value": 10,
          },
          Object {
            "children": "children 11",
            "value": 11,
          },
          Object {
            "children": "12",
            "value": 12,
          },
          Object {
            "children": "13",
            "value": 13,
          },
        ]
      }
      kind="primary"
      menuRef={
        Object {
          "current": null,
        }
      }
      noRowsRenderer={[Function]}
      onChange={[Function]}
      placeholder="or filter by device name"
      theme={
        Object {
          "base": Object {
            "bodyBackgroundColor": "#F1F2F7",
            "bodyColor": "#353630",
            "fontSize": "13px",
            "lineHeight": 1.5,
          },
          "color": Object {
            "black": "#353630",
            "default": "#FAFAFA",
            "error": "#F5364E",
            "grayBase": "#D1D2D3",
            "grayDark": "#999A94",
            "grayLight": "#FAFAFA",
            "primary": "#00A1DE",
            "success": "#69BE28",
            "warning": "#F39A1E",
            "white": "#FFFFFF",
          },
          "fontSize": Object {
            "h1": "2.46rem",
            "h2": "1.69rem",
            "h3": "1.38rem",
            "h4": "1.15rem",
            "h5": "1rem",
            "h6": "1rem",
            "p": "1rem",
            "small": "0.923rem",
          },
          "height": Object {
            "header": "50px",
            "normal": "32px",
            "small": "20px",
          },
          "mobile": Object {
            "headerHeight": "56px",
            "maxWidth": "800px",
          },
        }
      }
      value=""
    >
      <div>
        <styled-components__StyledInputGroup
          disableFilter={false}
        >
          <StyledComponent
            disableFilter={false}
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "styled-components__StyledInputGroup-rj6hz5-1",
                  "isStatic": false,
                  "lastClassName": "c0",
                  "rules": Array [
                    "
  display: flex;

  > button {
    flex-shrink: 0;
  }

  /* ============================
   * First Child
   * ============================
   */

  > *:first-child {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  /* ============================
   * Middle Child
   * ============================
   */

  > *:not(:first-child):not(:last-child) {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  /* ============================
   * Last Child
   * ============================
   */

  > *:last-child {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }

  /**
   * Unit
   */

  > span {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    padding: 0 5px;
    min-height: ",
                    [Function],
                    ";
    min-width: ",
                    [Function],
                    ";
    border-radius: 3px;
    border: 1px solid ",
                    [Function],
                    ";
    background-color: ",
                    [Function],
                    ";
    color: ",
                    [Function],
                    ";
  }
  > * + span {
    border-left-width: 0;
  }
  > * + span:not(:last-child) {
    border-right-width: 0;
  }
  > span:first-child {
    border-right-width: 0;
  }
  > span:last-child {
    border-left-width: 0;
  }
",
                    "
  position: relative;

  > * {
    ",
                    [Function],
                    ";
  }
",
                  ],
                },
                "displayName": "styled-components__StyledInputGroup",
                "foldedComponentIds": Array [
                  "InputGroup-clww0l-0",
                ],
                "render": [Function],
                "styledComponentId": "styled-components__StyledInputGroup-rj6hz5-1",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={
              Object {
                "current": .c1 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c1:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c1::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3 {
  line-height: 0;
}

.c3 > * {
  -webkit-transform-origin: center;
  -ms-transform-origin: center;
  transform-origin: center;
  -webkit-transition: -webkit-transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transform: initial;
  -ms-transform: initial;
  transform: initial;
}

.c2 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(0,130,179);
  font-size: 18px;
  color: #FFFFFF;
}

.c2:hover {
  background-color: rgb(0,151,208);
}

.c2:active {
  background-color: rgb(0,144,198);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c0 > button {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > *:first-child {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:not(:first-child):not(:last-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:last-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c0 > span {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  padding: 0 5px;
  min-height: 32px;
  min-width: 32px;
  border-radius: 3px;
  border: 1px solid #D1D2D3;
  background-color: #FFFFFF;
  color: #999A94;
}

.c0 > * + span {
  border-left-width: 0;
}

.c0 > * + span:not(:last-child) {
  border-right-width: 0;
}

.c0 > span:first-child {
  border-right-width: 0;
}

.c0 > span:last-child {
  border-left-width: 0;
}

<div
                  class="c0"
                >
                  <input
                    autocomplete="off"
                    class="c1"
                    kind="primary"
                    placeholder="or filter by device name"
                    value=""
                  />
                  <button
                    class="c2"
                    kind="primary"
                  >
                    <div
                      class="c3"
                    >
                      <svg
                        fill="currentColor"
                        height="1em"
                        viewBox="0 0 24 24"
                        width="1em"
                      >
                        <path
                          d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z"
                        />
                      </svg>
                    </div>
                  </button>
                </div>,
              }
            }
          >
            <div
              className="c0"
            >
              <Input
                autoComplete="off"
                focus={false}
                kind="primary"
                onChange={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                placeholder="or filter by device name"
                readOnly={false}
                value=""
              >
                <StyledComponent
                  autoComplete="off"
                  focus={false}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "Input-a7ignf-0",
                        "isStatic": false,
                        "lastClassName": "c1",
                        "rules": Array [
                          "
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: ",
                          [Function],
                          ";
  color: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  border-color: ",
                          [Function],
                          ";
  box-shadow: ",
                          [Function],
                          ";

  &:focus {
    border-color: ",
                          [Function],
                          ";
    box-shadow: 0 0 3px 0
      ",
                          [Function],
                          ";
  }

  &::placeholder {
    opacity: 1;
    color: ",
                          [Function],
                          ";
  }
",
                        ],
                      },
                      "defaultProps": Object {
                        "focus": false,
                        "kind": "primary",
                      },
                      "displayName": "Input",
                      "foldedComponentIds": Array [],
                      "propTypes": Object {
                        "focus": [Function],
                        "kind": [Function],
                      },
                      "render": [Function],
                      "styledComponentId": "Input-a7ignf-0",
                      "target": "input",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={
                    Object {
                      "current": <input
                        autocomplete="off"
                        class="c1"
                        kind="primary"
                        placeholder="or filter by device name"
                        value=""
                      />,
                    }
                  }
                  kind="primary"
                  onChange={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  placeholder="or filter by device name"
                  readOnly={false}
                  value=""
                >
                  <input
                    autoComplete="off"
                    className="c1"
                    kind="primary"
                    onChange={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    placeholder="or filter by device name"
                    readOnly={false}
                    value=""
                  />
                </StyledComponent>
              </Input>
              <styled-components__StyledButton
                active={false}
                block={false}
                disabled={false}
                kind="primary"
                onClick={[Function]}
                round={false}
                size="normal"
                square={true}
              >
                <StyledComponent
                  active={false}
                  block={false}
                  disabled={false}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled-components__StyledButton-sc-1vavxcc-3",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  transition: background-color cubic-bezier(0.47, 0, 0.75, 0.72) 0.3s;
  line-height: 0;
  cursor: ",
                          [Function],
                          ";

  &:hover {
    background-color: ",
                          [Function],
                          ";
  }

  &:active {
    background-color: ",
                          [Function],
                          ";
  }

  background-color: ",
                          [Function],
                          ";
  color: ",
                          [Function],
                          ";
  border-radius: ",
                          [Function],
                          ";
  width: ",
                          [Function],
                          ";
  min-width: ",
                          [Function],
                          ";
  height: ",
                          [Function],
                          ";
  padding: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  border-color: ",
                          [Function],
                          ";
",
                          "
  font-size: 18px;
  color: ",
                          [Function],
                          ";
",
                        ],
                      },
                      "defaultProps": Object {
                        "active": false,
                        "block": false,
                        "disabled": false,
                        "kind": "primary",
                        "round": false,
                        "size": "normal",
                        "square": false,
                      },
                      "displayName": "styled-components__StyledButton",
                      "foldedComponentIds": Array [
                        "Button-sc-4bw22c-0",
                      ],
                      "propTypes": Object {
                        "active": [Function],
                        "block": [Function],
                        "disabled": [Function],
                        "kind": [Function],
                        "round": [Function],
                        "size": [Function],
                        "square": [Function],
                      },
                      "render": [Function],
                      "styledComponentId": "styled-components__StyledButton-sc-1vavxcc-3",
                      "target": "button",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  kind="primary"
                  onClick={[Function]}
                  round={false}
                  size="normal"
                  square={true}
                >
                  <button
                    className="c2"
                    disabled={false}
                    kind="primary"
                    onClick={[Function]}
                    size="normal"
                  >
                    <Rotate
                      active={false}
                    >
                      <StyledComponent
                        active={false}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Rotate-sc-7d7mt1-0",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "
  line-height: 0;

  > * {
    transform-origin: center;
    transition: transform 0.4s cubic-bezier(0.68, -0.55, 0.27, 1.55);
    transform: ",
                                [Function],
                                ";
  }
",
                              ],
                            },
                            "defaultProps": Object {
                              "active": false,
                            },
                            "displayName": "Rotate",
                            "foldedComponentIds": Array [],
                            "propTypes": Object {
                              "active": [Function],
                            },
                            "render": [Function],
                            "styledComponentId": "Rotate-sc-7d7mt1-0",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c3"
                        >
                          <IconFold>
                            <svg
                              fill="currentColor"
                              height="1em"
                              viewBox="0 0 24 24"
                              width="1em"
                            >
                              <path
                                d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z"
                              />
                            </svg>
                          </IconFold>
                        </div>
                      </StyledComponent>
                    </Rotate>
                  </button>
                </StyledComponent>
              </styled-components__StyledButton>
            </div>
          </StyledComponent>
        </styled-components__StyledInputGroup>
      </div>
    </PureInputSelect>
  </InputSelect>
</StatefulInputSelect>
`;

exports[`Storyshots InputSelect With state 1`] = `
.c1 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c1:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c1::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3 {
  line-height: 0;
}

.c3 > * {
  -webkit-transform-origin: center;
  -ms-transform-origin: center;
  transform-origin: center;
  -webkit-transition: -webkit-transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transform: initial;
  -ms-transform: initial;
  transform: initial;
}

.c2 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(0,130,179);
  font-size: 18px;
  color: #FFFFFF;
}

.c2:hover {
  background-color: rgb(0,151,208);
}

.c2:active {
  background-color: rgb(0,144,198);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c0 > button {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > *:first-child {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:not(:first-child):not(:last-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:last-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c0 > span {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  padding: 0 5px;
  min-height: 32px;
  min-width: 32px;
  border-radius: 3px;
  border: 1px solid #D1D2D3;
  background-color: #FFFFFF;
  color: #999A94;
}

.c0 > * + span {
  border-left-width: 0;
}

.c0 > * + span:not(:last-child) {
  border-right-width: 0;
}

.c0 > span:first-child {
  border-right-width: 0;
}

.c0 > span:last-child {
  border-left-width: 0;
}

<StatefulInputSelect
  placeholder="or filter by device name"
>
  <InputSelect
    items={
      Array [
        Object {
          "children": "children 1",
          "value": 1,
        },
        Object {
          "children": "children children children 2",
          "value": 2,
        },
        Object {
          "children": "children 3",
          "value": 3,
        },
        Object {
          "children": "children 4",
          "value": 4,
        },
        Object {
          "children": "5",
          "value": 5,
        },
        Object {
          "children": "children 6",
          "value": 6,
        },
        Object {
          "children": "children children 7",
          "value": 7,
        },
        Object {
          "children": "children 8",
          "value": 8,
        },
        Object {
          "children": "children 9",
          "value": 9,
        },
        Object {
          "children": "children children children 10",
          "value": 10,
        },
        Object {
          "children": "children 11",
          "value": 11,
        },
        Object {
          "children": "12",
          "value": 12,
        },
        Object {
          "children": "13",
          "value": 13,
        },
      ]
    }
    menuRef={
      Object {
        "current": null,
      }
    }
    onChange={[Function]}
    placeholder="or filter by device name"
    value=""
  >
    <PureInputSelect
      disableFilter={false}
      itemValueMapper={[Function]}
      items={
        Array [
          Object {
            "children": "children 1",
            "value": 1,
          },
          Object {
            "children": "children children children 2",
            "value": 2,
          },
          Object {
            "children": "children 3",
            "value": 3,
          },
          Object {
            "children": "children 4",
            "value": 4,
          },
          Object {
            "children": "5",
            "value": 5,
          },
          Object {
            "children": "children 6",
            "value": 6,
          },
          Object {
            "children": "children children 7",
            "value": 7,
          },
          Object {
            "children": "children 8",
            "value": 8,
          },
          Object {
            "children": "children 9",
            "value": 9,
          },
          Object {
            "children": "children children children 10",
            "value": 10,
          },
          Object {
            "children": "children 11",
            "value": 11,
          },
          Object {
            "children": "12",
            "value": 12,
          },
          Object {
            "children": "13",
            "value": 13,
          },
        ]
      }
      kind="primary"
      menuRef={
        Object {
          "current": null,
        }
      }
      noRowsRenderer={[Function]}
      onChange={[Function]}
      placeholder="or filter by device name"
      theme={
        Object {
          "base": Object {
            "bodyBackgroundColor": "#F1F2F7",
            "bodyColor": "#353630",
            "fontSize": "13px",
            "lineHeight": 1.5,
          },
          "color": Object {
            "black": "#353630",
            "default": "#FAFAFA",
            "error": "#F5364E",
            "grayBase": "#D1D2D3",
            "grayDark": "#999A94",
            "grayLight": "#FAFAFA",
            "primary": "#00A1DE",
            "success": "#69BE28",
            "warning": "#F39A1E",
            "white": "#FFFFFF",
          },
          "fontSize": Object {
            "h1": "2.46rem",
            "h2": "1.69rem",
            "h3": "1.38rem",
            "h4": "1.15rem",
            "h5": "1rem",
            "h6": "1rem",
            "p": "1rem",
            "small": "0.923rem",
          },
          "height": Object {
            "header": "50px",
            "normal": "32px",
            "small": "20px",
          },
          "mobile": Object {
            "headerHeight": "56px",
            "maxWidth": "800px",
          },
        }
      }
      value=""
    >
      <div>
        <styled-components__StyledInputGroup
          disableFilter={false}
        >
          <StyledComponent
            disableFilter={false}
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "styled-components__StyledInputGroup-rj6hz5-1",
                  "isStatic": false,
                  "lastClassName": "c0",
                  "rules": Array [
                    "
  display: flex;

  > button {
    flex-shrink: 0;
  }

  /* ============================
   * First Child
   * ============================
   */

  > *:first-child {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  /* ============================
   * Middle Child
   * ============================
   */

  > *:not(:first-child):not(:last-child) {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  /* ============================
   * Last Child
   * ============================
   */

  > *:last-child {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }

  /**
   * Unit
   */

  > span {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    padding: 0 5px;
    min-height: ",
                    [Function],
                    ";
    min-width: ",
                    [Function],
                    ";
    border-radius: 3px;
    border: 1px solid ",
                    [Function],
                    ";
    background-color: ",
                    [Function],
                    ";
    color: ",
                    [Function],
                    ";
  }
  > * + span {
    border-left-width: 0;
  }
  > * + span:not(:last-child) {
    border-right-width: 0;
  }
  > span:first-child {
    border-right-width: 0;
  }
  > span:last-child {
    border-left-width: 0;
  }
",
                    "
  position: relative;

  > * {
    ",
                    [Function],
                    ";
  }
",
                  ],
                },
                "displayName": "styled-components__StyledInputGroup",
                "foldedComponentIds": Array [
                  "InputGroup-clww0l-0",
                ],
                "render": [Function],
                "styledComponentId": "styled-components__StyledInputGroup-rj6hz5-1",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={
              Object {
                "current": .c1 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c1:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c1::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3 {
  line-height: 0;
}

.c3 > * {
  -webkit-transform-origin: center;
  -ms-transform-origin: center;
  transform-origin: center;
  -webkit-transition: -webkit-transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transform: initial;
  -ms-transform: initial;
  transform: initial;
}

.c2 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(0,130,179);
  font-size: 18px;
  color: #FFFFFF;
}

.c2:hover {
  background-color: rgb(0,151,208);
}

.c2:active {
  background-color: rgb(0,144,198);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.c0 > button {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 > *:first-child {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:not(:first-child):not(:last-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c0 > *:last-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c0 > span {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  padding: 0 5px;
  min-height: 32px;
  min-width: 32px;
  border-radius: 3px;
  border: 1px solid #D1D2D3;
  background-color: #FFFFFF;
  color: #999A94;
}

.c0 > * + span {
  border-left-width: 0;
}

.c0 > * + span:not(:last-child) {
  border-right-width: 0;
}

.c0 > span:first-child {
  border-right-width: 0;
}

.c0 > span:last-child {
  border-left-width: 0;
}

<div
                  class="c0"
                >
                  <input
                    autocomplete="off"
                    class="c1"
                    kind="primary"
                    placeholder="or filter by device name"
                    value=""
                  />
                  <button
                    class="c2"
                    kind="primary"
                  >
                    <div
                      class="c3"
                    >
                      <svg
                        fill="currentColor"
                        height="1em"
                        viewBox="0 0 24 24"
                        width="1em"
                      >
                        <path
                          d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z"
                        />
                      </svg>
                    </div>
                  </button>
                </div>,
              }
            }
          >
            <div
              className="c0"
            >
              <Input
                autoComplete="off"
                focus={false}
                kind="primary"
                onChange={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                placeholder="or filter by device name"
                readOnly={false}
                value=""
              >
                <StyledComponent
                  autoComplete="off"
                  focus={false}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "Input-a7ignf-0",
                        "isStatic": false,
                        "lastClassName": "c1",
                        "rules": Array [
                          "
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: ",
                          [Function],
                          ";
  color: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  border-color: ",
                          [Function],
                          ";
  box-shadow: ",
                          [Function],
                          ";

  &:focus {
    border-color: ",
                          [Function],
                          ";
    box-shadow: 0 0 3px 0
      ",
                          [Function],
                          ";
  }

  &::placeholder {
    opacity: 1;
    color: ",
                          [Function],
                          ";
  }
",
                        ],
                      },
                      "defaultProps": Object {
                        "focus": false,
                        "kind": "primary",
                      },
                      "displayName": "Input",
                      "foldedComponentIds": Array [],
                      "propTypes": Object {
                        "focus": [Function],
                        "kind": [Function],
                      },
                      "render": [Function],
                      "styledComponentId": "Input-a7ignf-0",
                      "target": "input",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={
                    Object {
                      "current": <input
                        autocomplete="off"
                        class="c1"
                        kind="primary"
                        placeholder="or filter by device name"
                        value=""
                      />,
                    }
                  }
                  kind="primary"
                  onChange={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  placeholder="or filter by device name"
                  readOnly={false}
                  value=""
                >
                  <input
                    autoComplete="off"
                    className="c1"
                    kind="primary"
                    onChange={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    placeholder="or filter by device name"
                    readOnly={false}
                    value=""
                  />
                </StyledComponent>
              </Input>
              <styled-components__StyledButton
                active={false}
                block={false}
                disabled={false}
                kind="primary"
                onClick={[Function]}
                round={false}
                size="normal"
                square={true}
              >
                <StyledComponent
                  active={false}
                  block={false}
                  disabled={false}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "styled-components__StyledButton-sc-1vavxcc-3",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  transition: background-color cubic-bezier(0.47, 0, 0.75, 0.72) 0.3s;
  line-height: 0;
  cursor: ",
                          [Function],
                          ";

  &:hover {
    background-color: ",
                          [Function],
                          ";
  }

  &:active {
    background-color: ",
                          [Function],
                          ";
  }

  background-color: ",
                          [Function],
                          ";
  color: ",
                          [Function],
                          ";
  border-radius: ",
                          [Function],
                          ";
  width: ",
                          [Function],
                          ";
  min-width: ",
                          [Function],
                          ";
  height: ",
                          [Function],
                          ";
  padding: ",
                          [Function],
                          ";
  font-size: ",
                          [Function],
                          ";
  border-color: ",
                          [Function],
                          ";
",
                          "
  font-size: 18px;
  color: ",
                          [Function],
                          ";
",
                        ],
                      },
                      "defaultProps": Object {
                        "active": false,
                        "block": false,
                        "disabled": false,
                        "kind": "primary",
                        "round": false,
                        "size": "normal",
                        "square": false,
                      },
                      "displayName": "styled-components__StyledButton",
                      "foldedComponentIds": Array [
                        "Button-sc-4bw22c-0",
                      ],
                      "propTypes": Object {
                        "active": [Function],
                        "block": [Function],
                        "disabled": [Function],
                        "kind": [Function],
                        "round": [Function],
                        "size": [Function],
                        "square": [Function],
                      },
                      "render": [Function],
                      "styledComponentId": "styled-components__StyledButton-sc-1vavxcc-3",
                      "target": "button",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  kind="primary"
                  onClick={[Function]}
                  round={false}
                  size="normal"
                  square={true}
                >
                  <button
                    className="c2"
                    disabled={false}
                    kind="primary"
                    onClick={[Function]}
                    size="normal"
                  >
                    <Rotate
                      active={false}
                    >
                      <StyledComponent
                        active={false}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Rotate-sc-7d7mt1-0",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "
  line-height: 0;

  > * {
    transform-origin: center;
    transition: transform 0.4s cubic-bezier(0.68, -0.55, 0.27, 1.55);
    transform: ",
                                [Function],
                                ";
  }
",
                              ],
                            },
                            "defaultProps": Object {
                              "active": false,
                            },
                            "displayName": "Rotate",
                            "foldedComponentIds": Array [],
                            "propTypes": Object {
                              "active": [Function],
                            },
                            "render": [Function],
                            "styledComponentId": "Rotate-sc-7d7mt1-0",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c3"
                        >
                          <IconFold>
                            <svg
                              fill="currentColor"
                              height="1em"
                              viewBox="0 0 24 24"
                              width="1em"
                            >
                              <path
                                d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z"
                              />
                            </svg>
                          </IconFold>
                        </div>
                      </StyledComponent>
                    </Rotate>
                  </button>
                </StyledComponent>
              </styled-components__StyledButton>
            </div>
          </StyledComponent>
        </styled-components__StyledInputGroup>
      </div>
    </PureInputSelect>
  </InputSelect>
</StatefulInputSelect>
`;
